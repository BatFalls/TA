#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, target, aimer;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	move aimer to y-axis [5000.000000] now;
	start-script SmokeUnit();
}

AimFromPrimary(piecenum)
{
	piecenum = aimer;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	//var radius;
	//turn aimer to y-axis heading now;
	//radius = get ABS(get KTAN(<90>+pitch))*1280000;
	//move target to z-axis radius now;
	return (1);
}

FirePrimary()
{
	sleep 15;
}

QueryPrimary(piecenum)
{
	piecenum = target;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | SHATTER;
		return (0);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
}
