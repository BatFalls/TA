#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, Head, Engine, Connection1, Connection2, BaseBox1, BaseBox2, BaseBox3,
       turret1l, sleeve1l, flare1l,
       turret1r, sleeve1r, flare1r,
       turret2l, sleeve2l, flare2l,
       turret2r, sleeve2r, flare2r,
       turret3l, sleeve3l, flare3l,
       turret3r, sleeve3r, flare3r,
       turret1m, sleeve1m, gun1am, gun1bm, flare1am, flare1bm,
       turret2m, sleeve2m, gun2am, gun2bm, flare2am, flare2bm,
       turret3m, sleeve3m, gun3am, gun3bm, flare3am, flare3bm,
       rocketsr1, rocketsl1, rocketsr2, rocketsl2, rocketsr3, rocketsl3, rocketsr4, rocketsl4, mslr0,
       mslr1, mslr2, mslr3, msll0, msll1, msll2, msll3, rockets2r1,
       rockets2l1, rockets2r2, rockets2l2, rockets2r3, rockets2l3, rockets2r4, rockets2l4, msl2r0, msl2r1, msl2r2, msl2r3, msl2l0, msl2l1, msl2l2, msl2l3;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9, Static_Var_10,
            Static_Var_11, Static_Var_12, Static_Var_13, Static_Var_14, Static_Var_15,
            Static_Var_16, Static_Var_17, Static_Var_18, Static_Var_19, Static_Var_20,
            Static_Var_21;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from BaseBox2;
			emit-sfx smoketype from Connection1;
			emit-sfx smoketype from Head;
			emit-sfx smoketype from turret2m;
			emit-sfx smoketype from turret3r;
			emit-sfx smoketype from msl2r2;
			emit-sfx smoketype from msll1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

missileReloadr1(initialise)
{
	if (Static_Var_10 == 1 or initialise == 1)
	{
		move msl2l0 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2l0;
		move msl2l0 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 2 or initialise == 1)
	{
		move msl2r0 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2r0;
		move msl2r0 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 3 or initialise == 1)
	{
		move msl2l1 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2l1;
		move msl2l1 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 4 or initialise == 1)
	{
		move msl2r1 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2r1;
		move msl2r1 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 5 or initialise == 1)
	{
		move msl2l2 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2l2;
		move msl2l2 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 6 or initialise == 1)
	{
		move msl2r2 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2r2;
		move msl2r2 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 7 or initialise == 1)
	{
		move msl2l3 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2l3;
		move msl2l3 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_10 == 0 or initialise == 1)
	{
		move msl2r3 to y-axis [-11.000000] now;
		sleep 2500;
		show msl2r3;
		move msl2r3 to y-axis [0.000000] speed [1.000000];
	}
}
missileReloadr2(initialise)
{
	if (Static_Var_11 == 1 or initialise == 1)
	{
		move msll0 to y-axis [-11.000000] now;
		sleep 2500;
		show msll0;
		move msll0 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 2 or initialise == 1)
	{
		move mslr0 to y-axis [-11.000000] now;
		sleep 2500;
		show mslr0;
		move mslr0 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 3 or initialise == 1)
	{
		move msll1 to y-axis [-11.000000] now;
		sleep 2500;
		show msll1;
		move msll1 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 4 or initialise == 1)
	{
		move mslr1 to y-axis [-11.000000] now;
		sleep 2500;
		show mslr1;
		move mslr1 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 5 or initialise == 1)
	{
		move msll2 to y-axis [-11.000000] now;
		sleep 2500;
		show msll2;
		move msll2 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 6 or initialise == 1)
	{
		move mslr2 to y-axis [-11.000000] now;
		sleep 2500;
		show mslr2;
		move mslr2 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 7 or initialise == 1)
	{
		move msll3 to y-axis [-11.000000] now;
		sleep 2500;
		show msll3;
		move msll3 to y-axis [0.000000] speed [1.000000];
	}
	if (Static_Var_11 == 0 or initialise == 1)
	{
		move mslr3 to y-axis [-11.000000] now;
		sleep 2500;
		show mslr3;
		move mslr3 to y-axis [0.000000] speed [1.000000];
	}
}

Create()
{
	hide msll0;
	hide msll1;
	hide msll2;
	hide msll3;
	hide msl2l0;
	hide msl2l1;
	hide msl2l2;
	hide msl2l3;
	hide mslr0;
	hide mslr1;
	hide mslr2;
	hide mslr3;
	hide msl2r0;
	hide msl2r1;
	hide msl2r2;
	hide msl2r3;
	hide flare1am;
	hide flare2am;
	hide flare3am;
	hide flare1bm;
	hide flare2bm;
	hide flare3bm;
	
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	Static_Var_9 = 0;
	Static_Var_10 = 0;
	Static_Var_11 = 0;
	Static_Var_14 = 5000;
	Static_Var_15 = 0;
	Static_Var_16 = 0;
	Static_Var_18 = 0;
	Static_Var_19 = 0;
	Static_Var_20 = 0;
	Static_Var_21 = 0;
	start-script SmokeUnit();
	start-script missileReloadr1(1);
	sleep 50;
	start-script missileReloadr2(1);

}

RestoreAfterDelay()
{
	sleep Static_Var_14;
	turn turret1r to y-axis <0.000000> speed <55.000000>;
	turn sleeve1r to x-axis <0.000000> speed <30.000000>;

	turn turret1l to y-axis <0.000000> speed <55.000000>;
	turn sleeve1l to x-axis <0.000000> speed <30.000000>;

	turn turret2r to y-axis <0.000000> speed <55.000000>;
	turn sleeve2r to x-axis <0.000000> speed <30.000000>;

	turn turret2l to y-axis <0.000000> speed <55.000000>;
	turn sleeve2l to x-axis <0.000000> speed <30.000000>;

	turn turret3r to y-axis <0.000000> speed <55.000000>;
	turn sleeve3r to x-axis <0.000000> speed <30.000000>;

	turn turret3l to y-axis <0.000000> speed <55.000000>;
	turn sleeve3l to x-axis <0.000000> speed <30.000000>;

	turn turret1m to y-axis <0.000000> speed <55.000000>;
	turn sleeve1m to x-axis <0.000000> speed <30.000000>;
	turn turret2m to y-axis <0.000000> speed <55.000000>;
	turn sleeve2m to x-axis <0.000000> speed <30.000000>;
	turn turret3m to y-axis <0.000000> speed <55.000000>;
	turn sleeve3m to x-axis <0.000000> speed <30.000000>;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	Static_Var_9 = 0;
	Static_Var_10 = 0;
	Static_Var_11 = 0;
	Static_Var_12 = 0;
	Static_Var_13 = 0;
}

AimWeapon1(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret1r to y-axis heading speed <75.000000>;
	turn sleeve1r to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret1r around y-axis;
	wait-for-turn sleeve1r around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret1l to y-axis heading speed <75.000000>;
	turn sleeve1l to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret1l around y-axis;
	wait-for-turn sleeve1l around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn turret2r to y-axis heading speed <75.000000>;
	turn sleeve2r to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret2r around y-axis;
	wait-for-turn sleeve2r around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn turret2l to y-axis heading speed <75.000000>;
	turn sleeve2l to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret2l around y-axis;
	wait-for-turn sleeve2l around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal 32;
	set-signal-mask 32;
	while( Static_Var_15 >= 1 )
	{
		sleep 500;
	}
	turn turret3r to y-axis heading speed <75.000000>;
	turn sleeve3r to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret3r around y-axis;
	wait-for-turn sleeve3r around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon6(heading, pitch)
{
	signal 64;
	set-signal-mask 64;
	turn turret3l to y-axis heading speed <75.000000>;
	turn sleeve3l to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret3l around y-axis;
	wait-for-turn sleeve3l around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{

}

FireWeapon2()
{
	
}

FireWeapon3()
{
	
}

FireWeapon4()
{
	
}

FireWeapon5()
{
	
}

FireWeapon6()
{
	
}

AimFromWeapon7(piecenum)
{
	piecenum = turret1m;
}

AimWeapon7(heading, pitch)
{
	signal 128;
	set-signal-mask 128;
	turn turret1m to y-axis heading speed <400.000000>;
	turn sleeve1m to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn turret1m around y-axis;
	wait-for-turn sleeve1m around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon7()
{
	if( Static_Var_7 == 0 )
	{
		move gun1am to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun1am to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	if( Static_Var_7 == 1 )
	{
		move gun1bm to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun1bm to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	++Static_Var_7;
	if( Static_Var_7 == 2 )
	{
		Static_Var_7 = 0;
	}
}

QueryWeapon7(piecenum)
{
	if( Static_Var_7 == 0 )
	{
		piecenum = flare1am;
	}
	if( Static_Var_7 == 1 )
	{
		piecenum = flare1bm;
	}
}

AimFromWeapon8(piecenum)
{
	piecenum = turret2m;
}

AimWeapon8(heading, pitch)
{
	signal 256;
	set-signal-mask 256;
	turn turret2m to y-axis heading speed <400.000000>;
	turn sleeve2m to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn turret2m around y-axis;
	wait-for-turn sleeve2m around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon8()
{
	if( Static_Var_8 == 0 )
	{
		move gun2am to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun2am to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	if( Static_Var_8 == 1 )
	{
		move gun2bm to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun2bm to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	++Static_Var_8;
	if( Static_Var_8 == 2 )
	{
		Static_Var_8 = 0;
	}
}

QueryWeapon8(piecenum)
{
	if( Static_Var_8 == 0 )
	{
		piecenum = flare2am;
	}
	if( Static_Var_8 == 1 )
	{
		piecenum = flare2bm;
	}
}

AimFromWeapon9(piecenum)
{
	piecenum = turret3m;
}

AimWeapon9(heading, pitch)
{
	signal 512;
	set-signal-mask 512;
	turn turret3m to y-axis heading speed <400.000000>;
	turn sleeve3m to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn turret3m around y-axis;
	wait-for-turn sleeve3m around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon9()
{
	if( Static_Var_9 == 0 )
	{
		move gun3am to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun3am to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	if( Static_Var_9 == 1 )
	{
		move gun3bm to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move gun3bm to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	++Static_Var_9;
	if( Static_Var_9 == 2 )
	{
		Static_Var_9 = 0;
	}
}

QueryWeapon9(piecenum)
{
	if( Static_Var_9 == 0 )
	{
		piecenum = flare3am;
	}
	if( Static_Var_9 == 1 )
	{
		piecenum = flare3bm;
	}
}

AimFromWeapon10(piecenum)
{
	piecenum = Connection2;
}

AimWeapon10(heading, pitch)
{
		signal 1024;
		set-signal-mask 1024;
		return (1);
}

QueryWeapon10(piecenum)
{
	if( Static_Var_10 == 1 )
	{
		piecenum = rockets2l1;
	}
	if( Static_Var_10 == 2 )
	{
		piecenum = rockets2r1;
	}
	if( Static_Var_10 == 3 )
	{
		piecenum = rockets2l2;
	}
	if( Static_Var_10 == 4 )
	{
		piecenum = rockets2r2;
	}
	if( Static_Var_10 == 5 )
	{
		piecenum = rockets2l3;
	}
	if( Static_Var_10 == 6 )
	{
		piecenum = rockets2r3;
	}
	if( Static_Var_10 == 7 )
	{
		piecenum = rockets2l4;
	}
	if( Static_Var_10 == 0 )
	{
		piecenum = rockets2r4;
	}
}

FireWeapon10()
{
		if( Static_Var_10 == 0 )
		{
			hide msl2l0;
		}
		if( Static_Var_10 == 1 )
		{
			hide msl2r0;
		}
		if( Static_Var_10 == 2 )
		{
			hide msl2l1;
		}
		if( Static_Var_10 == 3 )
		{
			hide msl2r1;
		}
		if( Static_Var_10 == 4 )
		{
			hide msl2l2;
		}
		if( Static_Var_10 == 5 )
		{
			hide msl2r2;
		}
		if( Static_Var_10 == 6 )
		{
			hide msl2l3;
		}
		if( Static_Var_10 == 7 )
		{
			hide msl2r3;
		}		
		++Static_Var_10;
		
	if( Static_Var_10 == 8 )
	{
		Static_Var_10 = 0;
	}
	
	start-script missileReloadr1(0);
}

AimFromWeapon11(piecenum)
{
	piecenum = Connection1;
}

AimWeapon11(heading, pitch)
{
		signal 2048;
		set-signal-mask 2048;
		return (1);
}

QueryWeapon11(piecenum)
{
	if( Static_Var_11 == 1 )
	{
		piecenum = rocketsl1;
	}
	if( Static_Var_11 == 2 )
	{
		piecenum = rocketsr1;
	}
	if( Static_Var_11 == 3 )
	{
		piecenum = rocketsl2;
	}
	if( Static_Var_11 == 4 )
	{
		piecenum = rocketsr2;
	}
	if( Static_Var_11 == 5 )
	{
		piecenum = rocketsl3;
	}
	if( Static_Var_11 == 6 )
	{
		piecenum = rocketsr3;
	}
	if( Static_Var_11 == 7 )
	{
		piecenum = rocketsl4;
	}
	if( Static_Var_11 == 0 )
	{
		piecenum = rocketsr4;
	}
}

FireWeapon11()
{
		if( Static_Var_11 == 0 )
		{
			hide msll0;
		}
		if( Static_Var_11 == 1 )
		{
			hide mslr0;
		}
		if( Static_Var_11 == 2 )
		{
			hide msll1;
		}
		if( Static_Var_11 == 3 )
		{
			hide mslr1;
		}
		if( Static_Var_11 == 4 )
		{
			hide msll2;
		}
		if( Static_Var_11 == 5 )
		{
			hide mslr2;
		}
		if( Static_Var_11 == 6 )
		{
			hide msll3;
		}
		if( Static_Var_11 == 7 )
		{
			hide mslr3;
		}		
		++Static_Var_11;
		
	if( Static_Var_11 == 8 )
	{
		Static_Var_11 = 0;
	}
	
	start-script missileReloadr2(0);
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1r;
}

QueryWeapon1(piecenum)
{
	piecenum = flare1r;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret1l;
}

QueryWeapon2(piecenum)
{
	piecenum = flare1l;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret2r;
}

QueryWeapon3(piecenum)
{
	piecenum = flare2r;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret2l;
}

QueryWeapon4(piecenum)
{
	piecenum = flare2l;

}

AimFromWeapon5(piecenum)
{
	piecenum = turret3r;
}

QueryWeapon5(piecenum)
{
	piecenum = flare3r;
}

AimFromWeapon6(piecenum)
{
	piecenum = turret3l;
}

QueryWeapon6(piecenum)
{
	piecenum = flare3l;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1r;
	hide flare1l;
	hide flare2r;
	hide flare2l;
	hide flare3r;
	hide flare3l;
	hide flare1am;
	hide flare2am;
	hide flare3am;
	hide flare1bm;
	hide flare2bm;
	hide flare3bm;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode turret1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve2l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve3l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve3r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve2m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve3m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);	
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode turret1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret1l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret3m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve2l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve3l type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve3r type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve1m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve2m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve3m type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
