#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turreta, turretb, sleevesa, sleevesb, socle,canon, flare, barrel,
		msla, mslb, msl1a, msl2a, msl3a, msl4a, msl1b, msl2b, msl3b, msl4b, 
		support1, support2, support3, support4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;

#define SIG_AIM 	2
#define SIG_AIM_2 	4
#define SIG_AIM_3 	8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	sleep 250;	
}

StopMoving()
{
	sleep 250;
}

Create()
{
	Static_Var_1 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turreta to y-axis <0.> speed <30.>;
	turn sleevesa to x-axis <0.> speed <15.>;
}

RestoreAfterDelay2()
{
	sleep 1500;
	turn turretb to y-axis <0.> speed <120.>;
	turn sleevesb to x-axis <0.> speed <100.>;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimFromPrimary(piecenum)
{
	piecenum = turreta;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turreta to y-axis heading speed <60.>;
	turn sleevesa to x-axis <0.> - pitch speed <30.>;
	wait-for-turn turreta around y-axis;
	wait-for-turn sleevesa around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if (Static_Var_1 == 0)
	{
		sleep 400;
		Static_Var_1 = 1;
		sleep 400;
		Static_Var_1 = 2;
		sleep 400;
		Static_Var_1 = 3;
		sleep 400;
		Static_Var_1 = 4;
		return 0;
	}
	if (Static_Var_1 == 4)
	{
		sleep 400;
		Static_Var_1 = 5;
		sleep 400;
		Static_Var_1 = 6;
		sleep 400;
		Static_Var_1 = 7;
		sleep 400;
		Static_Var_1 = 0;
		return 0;
	}
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = msl1a;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = msl2a;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = msl3a;
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = msl4a;
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = msl1b;
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = msl2b;
	}
	if( Static_Var_1 == 6 )
	{
		piecenum = msl3b;
	}
	if( Static_Var_1 == 7 )
	{
		piecenum = msl4b;
	}
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turretb to y-axis <0.000000> + heading speed <850.000000>;
	turn sleevesb to x-axis <0.000000> - pitch speed <680.000000>;
	wait-for-turn turretb around y-axis;
	wait-for-turn sleevesb around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireSecondary()
{

}

QuerySecondary(piecenum)
{
	piecenum = flare;
}

AimFromSecondary(piecenum)
{
	piecenum = turretb;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD; 
		explode support1 type NOHEATCLOUD;
		explode support1 type NOHEATCLOUD;
		explode support1 type NOHEATCLOUD;
		explode turreta type NOHEATCLOUD;
		explode msla type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode mslb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turretb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD; 
		explode support1 type NOHEATCLOUD | FALL;
		explode support1 type NOHEATCLOUD | FALL;
		explode support1 type NOHEATCLOUD | FALL;
		explode turreta type NOHEATCLOUD | FALL;
		explode msla type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode mslb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turretb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | FIRE; 
	explode support1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode support1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode support1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turreta type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode msla type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode mslb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turretb type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
