#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, beam, turret, lengine, rengine, door1, door2,
       wake1, wake2, wake3, wake4, wake5, wake6;

static-var  Static_Var_Sea;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
}

StopMoving()
{
	signal 2;
}

waking()
{
	while( TRUE )
	{
		if( Static_Var_Sea == 2 OR Static_Var_Sea == 1 )
		{
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
		}
		sleep 325;
	}
}

setSFXoccupy(state)
{
	Static_Var_Sea = state;
}

Create()
{
	start-script SmokeUnit();
}

QueryNanoPiece(PieceNum)
{
	PieceNum = beam;
}

StartBuilding(Heading, Pitch)
{
	signal 4;

	move door1 to x-axis [-1.75] speed [2.0];
	move door2 to x-axis [1.75] speed [2.0];
	wait-for-move door2 along x-axis;
	
	move turret to y-axis [3.0] speed [3.0];
	wait-for-move turret along y-axis;
	turn turret to y-axis Heading speed <100.0>;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	//signal 32;
	
	
	signal 4;
	set-signal-mask 4;
	sleep 3000;
	set-signal-mask 0;
	signal 4;

	set INBUILDSTANCE to 0;
	move turret to y-axis [0.0] speed [3.0];
	turn turret to y-axis <0.0> speed <100.0>;
	wait-for-move turret along y-axis;
	
	move door1 to x-axis [0.0] speed [3.0];
	move door2 to x-axis [-0.0] speed [3.0];
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}


Killed(Severity, CorpseType, Random)
{
	explode hull type SHATTER | NOHEATCLOUD;
	
	if( Severity <= 25 )
	{
		CorpseType = 1;		
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | SHATTER;
		return (CorpseType);
	}
	if( Severity <= 50 )
	{
		CorpseType = 2;		
		explode turret type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD | SHATTER;
		explode door2 type NOHEATCLOUD | SHATTER;
		return (CorpseType);
	}
	CorpseType = 3;
	explode turret type NOHEATCLOUD;
	explode door1 type NOHEATCLOUD | SHATTER;
	explode door2 type NOHEATCLOUD | SHATTER;
	return (CorpseType);
}
