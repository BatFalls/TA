#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, beam1, beam2, lwing, rwing;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_1 = 1;
	start-script SmokeUnit();
}

StartBuilding()
{
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_1 == 1 )
	{
		piecenum = beam1;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = beam2;
	}
	++Static_Var_1;
	if( Static_Var_1 == 3 )
	{
		Static_Var_1 = 1;
	}

}

AimPrimary()
{
	return (1);
}

FirePrimary()
{
	sleep 50;
}

QueryPrimary(piecenum)
{
	piecenum = body;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode lwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		return (corpsetype);
	}

	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode rwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | SMOKE | FIRE;
	explode lwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | SMOKE | FIRE;
	return (corpsetype);
}
