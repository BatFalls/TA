#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, shield_pos, dome, minigun, minibar, miniflare;

static-var shieldonoff;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Shield()
{
	shieldonoff = !shieldonoff;
}

Create()
{
	hide miniflare;
	turn minigun to y-axis <180.000000> now;
	start-script SmokeUnit();
	shieldonoff = 1;
}

RestoreAfterDelay()
{
	sleep 1500;
	turn minigun to y-axis <180.000000> speed <50.000000>;
	turn minibar to x-axis <0.> speed <25.000000>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn minigun to y-axis heading speed <100.000000>;
	turn minibar to x-axis <0.> - pitch speed <50.000000>;
	wait-for-turn minigun around y-axis;
	wait-for-turn minibar around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	//emit-sfx 1026 from miniflare;
	sleep 100;
}

QueryPrimary(piecenum)
{
	piecenum = miniflare;
}

AimFromPrimary(piecenum)
{
	piecenum = minigun;
}

AimSecondary(heading, pitch)
{
	return (shieldonoff);
}

FireSecondary()
{
	explode shield_pos type NOHEATCLOUD | FALL;
	sleep 100;
}

QuerySecondary(piecenum)
{
	piecenum = shield_pos;
}

AimFromSecondary(piecenum)
{
	piecenum = shield_pos;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode dome type NOHEATCLOUD;
		explode minigun type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode dome type NOHEATCLOUD | FALL;
		explode minigun type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode dome type NOHEATCLOUD | FALL;
	explode minigun type NOHEATCLOUD | FALL;
	return (corpsetype);
}
