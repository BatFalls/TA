#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, baseb, turret, canon1, canon2, flare1, flare2, 
       missil, miss1, miss2, roueg1, roueg2, roueg3,
       roued1, roued2, roued3, roueg1b, roueg2b, roueg3b, roued1b, roued2b,
       roued3b, shell1, shell2;

static-var  restore_delay, gun_1,
            gun_3;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
}

StartMoving()
{
		spin roueg1 around x-axis speed <150.000000> accelerate <5.000000>;
		spin roueg2 around x-axis speed <150.000000> accelerate <5.000000>;
		spin roueg3 around x-axis speed <150.000000> accelerate <5.000000>;
		spin roued1 around x-axis speed <150.000000> accelerate <5.000000>;
		spin roued2 around x-axis speed <150.000000> accelerate <5.000000>;
		spin roued3 around x-axis speed <150.000000> accelerate <5.000000>;
}

StopMoving()
{
		spin roueg1 around x-axis speed <0.000000> accelerate <150.000000>;
		spin roueg2 around x-axis speed <0.000000> accelerate <150.000000>;
		spin roueg3 around x-axis speed <0.000000> accelerate <150.000000>;
		spin roued1 around x-axis speed <0.000000> accelerate <150.000000>;
		spin roued2 around x-axis speed <0.000000> accelerate <150.000000>;
		spin roued3 around x-axis speed <0.000000> accelerate <150.000000>;
}

Create()
{
	start-script SmokeUnit();
	hide flare1;
	hide flare2;
	hide shell1;
	hide shell2;
	gun_1 = baseb;
	gun_3 = baseb;
	restore_delay = 3000;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn canon1 to x-axis <0.000000> speed <100.000000>;
	turn canon2 to x-axis <0.000000> speed <100.000000>;
	turn turret to y-axis <0.000000> speed <70.000000>;
	wait-for-turn canon1 around x-axis;
	wait-for-turn canon2 around x-axis;
	wait-for-turn turret around y-axis;

}

RestoreAfterDelay2()
{
	sleep restore_delay;
	turn missil to x-axis <0.000000> speed <100.000000>;
	wait-for-turn missil around x-axis;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <100.000000>;
	turn canon1 to x-axis <0.000000> - pitch speed <50.000000>;
	turn canon2 to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn canon1 around x-axis;
	wait-for-turn canon2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn missil to x-axis <-75.016484> speed <100.000000>;
	wait-for-turn missil around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		emit-sfx 1024 + 0 from flare1;
		move canon1 to z-axis [-2.000000] speed [40.000000];
		//show flare1;
		sleep 150;
		//hide flare1;
		move canon1 to z-axis [0.000000] speed [10.000000];
		gun_1 = turret;
		return (0);
	}
	if( gun_1 == 2 )
	{
		emit-sfx 1024 + 0 from flare2;
		move canon2 to z-axis [-2.000000] speed [40.000000];
		//show flare2;
		sleep 150;
		//hide flare2;
		move canon2 to z-axis [0.000000] speed [10.000000];
		gun_1 = baseb;
		return (0);
	}
}

FireTertiary()
{
	if( gun_3 == 1 )
	{
		gun_3 = turret;
		return (0);
	}
	if( gun_3 == 2 )
	{
		gun_3 = baseb;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}


AimFromTertiary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare2;
	}
}

QueryTertiary(piecenum)
{
	if( gun_3 == 1 )
	{
		piecenum = miss1;
	}
	if( gun_3 == 2 )
	{
		piecenum = miss2;
	}
}

SweetSpot(piecenum)
{
	piecenum = baseb;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode baseb type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode missil type NOHEATCLOUD;
		explode canon1 type NOHEATCLOUD;
		explode canon2 type NOHEATCLOUD;
		explode roueg1 type NOHEATCLOUD;
		explode roueg2 type NOHEATCLOUD;
		explode roueg3 type NOHEATCLOUD;
		explode roued1 type NOHEATCLOUD;
		explode roued2 type NOHEATCLOUD;
		explode roued3 type NOHEATCLOUD;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode miss1 type NOHEATCLOUD;
		explode miss2 type NOHEATCLOUD;
		explode roueg1b type NOHEATCLOUD;
		explode roueg2b type NOHEATCLOUD;
		explode roueg3b type NOHEATCLOUD;
		explode roued1b type NOHEATCLOUD;
		explode roued2b type NOHEATCLOUD;
		explode roued3b type NOHEATCLOUD;
		explode shell1 type NOHEATCLOUD;
		explode shell2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode baseb type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL;
		explode missil type NOHEATCLOUD | FALL;
		explode canon1 type NOHEATCLOUD;
		explode canon2 type NOHEATCLOUD;
		explode roueg1 type NOHEATCLOUD | FALL;
		explode roueg2 type NOHEATCLOUD;
		explode roueg3 type NOHEATCLOUD | FALL;
		explode roued1 type NOHEATCLOUD;
		explode roued2 type NOHEATCLOUD | FALL;
		explode roued3 type NOHEATCLOUD | FALL;
		explode flare1 type NOHEATCLOUD;
		explode flare2 type NOHEATCLOUD;
		explode miss1 type NOHEATCLOUD;
		explode miss2 type NOHEATCLOUD;
		explode roueg1b type NOHEATCLOUD;
		explode roueg2b type NOHEATCLOUD;
		explode roueg3b type NOHEATCLOUD;
		explode roued1b type NOHEATCLOUD;
		explode roued2b type NOHEATCLOUD;
		explode roued3b type NOHEATCLOUD;
		explode shell1 type NOHEATCLOUD;
		explode shell2 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode baseb type NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode missil type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode canon1 type NOHEATCLOUD;
	explode canon2 type NOHEATCLOUD;
	explode roueg1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode roueg2 type NOHEATCLOUD;
	explode roueg3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode roued1 type NOHEATCLOUD;
	explode roued2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode roued3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode flare1 type NOHEATCLOUD;
	explode flare2 type NOHEATCLOUD;
	explode miss1 type NOHEATCLOUD;
	explode miss2 type NOHEATCLOUD;
	explode roueg1b type NOHEATCLOUD;
	explode roueg2b type NOHEATCLOUD;
	explode roueg3b type NOHEATCLOUD;
	explode roued1b type NOHEATCLOUD;
	explode roued2b type NOHEATCLOUD;
	explode roued3b type NOHEATCLOUD;
	explode shell1 type NOHEATCLOUD;
	explode shell2 type NOHEATCLOUD;
	return (corpsetype);
}
