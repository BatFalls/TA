#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, protections, turret, sleeves, barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, barrel7, barrel8,
		flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8, socle, aimpoint;

static-var  Static_Var_1, Static_Var_2, restore_delay, statechg_DesiredState, statechg_StateChanging, Static_Var_5;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	spin turret around y-axis speed <-20.000000> accelerate <10.000000>;
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RestoreAfterDelay()
{
	
	signal 8;
	set-signal-mask 8;
	sleep restore_delay;
	turn sleeves to x-axis <-90.000000> speed <25.000000>;
	spin turret around y-axis speed <-20.000000> accelerate <10.000000>;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	restore_delay = 4000;
	turn sleeves to x-axis <-90.000000> now;
	start-script SmokeUnit();	
}

AimWeapon1(heading, pitch)
{
	stop-spin turret around y-axis;
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <125.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <80.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if(Static_Var_1 == 0)
	{
		move barrel2 to z-axis [-1.] now;
		emit-sfx 1025 from flare2;
		sleep 150;
		move barrel2 to z-axis [0.] speed [6];
	}
	if(Static_Var_1 == 1)
	{
		move barrel1 to z-axis [-1.] now;
		emit-sfx 625 from flare1;
		sleep 150;
		move barrel1 to z-axis [0.] speed [6];
	}
	if(Static_Var_1 == 2)
	{
		move barrel4 to z-axis [-1.] now;
		emit-sfx 625 from flare4;
		sleep 150;
		move barrel4 to z-axis [0.] speed [6];
	}
	if(Static_Var_1 == 3)
	{
		move barrel3 to z-axis [-1.] now;
		emit-sfx 625 from flare3;
		sleep 150;
		move barrel3 to z-axis [0.] speed [6];
	}
	++Static_Var_1;
	if(Static_Var_1 == 4)
	{
		Static_Var_1 = 0;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = aimpoint;
}

QueryWeapon1(piecenum)
{
	if(Static_Var_1 == 0)
	{
		piecenum = flare2;
	}
	if(Static_Var_1 == 1)
	{
		piecenum = flare1;
	}
	if(Static_Var_1 == 2)
	{
		piecenum = flare4;
	}
	if(Static_Var_1 == 3)
	{
		piecenum = flare3;
	}
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FireWeapon2()
{
	if(Static_Var_2 == 0)
	{
		move barrel6 to z-axis [-1.] now;
		emit-sfx 625 from flare6;
		sleep 150;
		move barrel6 to z-axis [0.] speed [6];
	}
	if(Static_Var_2 == 1)
	{
		move barrel5 to z-axis [-1.] now;
		emit-sfx 625 from flare5;
		sleep 150;
		move barrel5 to z-axis [0.] speed [6];
	}
	if(Static_Var_2 == 2)
	{
		move barrel8 to z-axis [-1.] now;
		emit-sfx 625 from flare8;
		sleep 150;
		move barrel8 to z-axis [0.] speed [6];
	}
	if(Static_Var_2 == 3)
	{
		move barrel7 to z-axis [-1.] now;
		emit-sfx 625 from flare7;
		sleep 150;
		move barrel7 to z-axis [0.] speed [6];
	}
	++Static_Var_2;
	if(Static_Var_2 == 4)
	{
		Static_Var_2 = 0;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = aimpoint;
}

QueryWeapon2(piecenum)
{
	if(Static_Var_2 == 0)
	{
		piecenum = flare6;
	}
	if(Static_Var_2 == 1)
	{
		piecenum = flare5;
	}
	if(Static_Var_2 == 2)
	{
		piecenum = flare8;
	}
	if(Static_Var_2 == 3)
	{
		piecenum = flare7;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode sleeves type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode socle type NOHEATCLOUD;
		explode protections type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode sleeves type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | FALL;
		explode socle type NOHEATCLOUD | FALL;
		explode protections type NOHEATCLOUD | FALL;
		return (corpsetype);

		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode sleeves type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode socle type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode protections type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode sleeves type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode socle type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode protections type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
