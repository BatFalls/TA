#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lleg, lboot, lfoot, rleg, rboot, rfoot, ring,
       torso, torsorecoil, headturn, head,  hit,  system1, system2, 
       larm, larmrecoil, larmz, lwrist, lhandz, lhandx, lfingers, lthumb, lsword,
       rarm, rarmrecoil, rarmz, rwrist, rhandz, rhandx, rfingers, rthumb, rsword,
       loin1, loin1a, loin1b, loin1c,
       loin2, loin2a, loin2b, loin2c,
       rwing, lwing;

static-var  bMoving, bAiming, AttackType, bJumping, Static_Shield;

// Signal definitions
#define SIG_AIM_GUN			2
#define SIG_AIM_BLADE		4
#define SIG_MOVE			8
#define SIG_NANO			16

BeginJump()
{
	bJumping = 1;
	turn larm to x-axis <30.> speed <40.>;
	turn rarm to x-axis <-30.> speed <40.>;
	turn lleg to x-axis <40.0> speed <30.>;
	turn rleg to x-axis <-20.0> speed <30.>;
	turn lboot to x-axis <20.0> speed <30.>;
	turn rboot to x-axis <15.0> speed <30.>;	
	turn lwing to y-axis <-72.> speed <125.>;
	turn rwing to y-axis <72.> speed <125.>;	
	sleep 500;
}

EndJump()
{
	bJumping = 0;
	turn larm to x-axis <0.> speed <200.>;
	turn rarm to x-axis <0.> speed <200.>;
	turn lboot to x-axis <0.> speed <200.>;
	turn rboot to x-axis <0.> speed <200.>;
	turn rboot to z-axis <0.> speed <200.>;
	turn rleg to x-axis <0.> speed <200.>;
	turn lleg to x-axis <0.> speed <200.>;
	turn lwing to y-axis <0.> speed <144.>;
	turn rwing to y-axis <0.> speed <144.>;
}

ControlUnit(Func_Var_1, Func_Var_2)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	sleep 100;
	while( TRUE )
	{
		turn loin1a to x-axis <5.> speed <10.>;
		turn loin1b to x-axis <5.> speed <10.>;
		turn loin1c to x-axis <-10.> speed <10.>;
		turn loin2a to x-axis <5.> speed <10.>;
		turn loin2b to x-axis <-10.> speed <20.>;
		turn loin2c to x-axis <5.> speed <10.>;
		if( Rand( 1, 3 ) <= 2 )
		{
			turn loin1a to x-axis <5.> speed <10.>;
			turn loin1b to x-axis <-10.> speed <20.>;
			turn loin1c to x-axis <5.> speed <10.>;
			turn loin2a to x-axis <-10.> speed <20.>;
			turn loin2b to x-axis <5.> speed <10.>;
			turn loin2c to x-axis <5.> speed <10.>;
			if( Rand( 1, 3 ) <= 1 )
			{
				turn loin1a to x-axis <-10.> speed <20.>;
				turn loin1b to x-axis <5.> speed <10.>;
				turn loin1c to x-axis <5.> speed <10.>;
				turn loin2a to x-axis <5.> speed <10.>;
				turn loin2b to x-axis <5.> speed <10.>;
				turn loin2c to x-axis <-10.> speed <20.>;
			}
		}
		sleep 500;
	}	
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		if( bMoving )
		{
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <30.> speed <80.>;
				turn lboot to x-axis <-10.> speed <32.>;
				turn lfoot to x-axis <-20.> speed <64.>;
				turn rleg to x-axis <-60.> speed <192.>;
				turn rboot to x-axis <100.> speed <32.>;
				turn rfoot to x-axis <0.> speed <0.>;
				move pelvis to y-axis [1.] speed [5.];
				turn loin1 to x-axis <20.> speed <16.>;
				turn loin2 to x-axis <20.> speed <16.>;
				if( !bAiming )
				{
					turn larm to x-axis <25.> speed <32.>;
					turn larmz to z-axis <-10.> speed <48.>;
					turn lwrist to x-axis <40.> speed <11.>;
					turn rarm to x-axis <45.> speed <32.>;
					turn rarmz to z-axis <10.> speed <48.>;
					turn rwrist to x-axis <50.> speed <11.>;
					turn rhandx to x-axis <-15.> speed <48.>;
					turn torso to y-axis <-10.> speed <32.>;
					turn headturn to y-axis <15.> speed <48.>;
					turn torsorecoil to x-axis <5.> speed <16.>;
					turn larmrecoil to x-axis <0.> speed <100.>;
					turn lfingers to y-axis <0.> speed <120.>;
					turn lthumb to y-axis <0.> speed <180.>;
					turn rarmrecoil to x-axis <0.> speed <100.>;
					turn rwrist to y-axis <0.> speed <100.>;
					turn rhandz to z-axis <0.> speed <100.>;
				}
				sleep 313;
			}
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <50.> speed <64.>;
				turn lboot to x-axis <20.> speed <96.>;
				turn lfoot to x-axis <10.> speed <96.>;
				turn rleg to x-axis <-40.> speed <64.>;
				turn rboot to x-axis <10.> speed <288.>;
				turn rfoot to x-axis <20.> speed <64.>;
				move pelvis to y-axis [-1.] speed [6.];
				turn loin1 to x-axis <30.> speed <32.>;
				turn loin2 to x-axis <30.> speed <32.>;
				if( !bAiming )
				{
					turn torsorecoil to x-axis <0.> speed <16.>;
				}
				sleep 313;
			}
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <0.> speed <160.>;
				turn lboot to x-axis <90.> speed <224.>;
				turn lfoot to x-axis <0.> speed <32.>;
				turn rleg to x-axis <5.> speed <144.>;
				turn rboot to x-axis <0.> speed <32.>;
				turn rfoot to x-axis <0.> speed <64.>;
				move pelvis to y-axis [-1.] speed [2.];
				turn loin1 to x-axis <15.> speed <30.>;
				turn loin2 to x-axis <15.> speed <30.>;
				if( !bAiming )
				{
					turn larm to x-axis <35.> speed <32.>;
					turn larmz to z-axis <-10.> speed <48.>;
					turn lwrist to x-axis <45.> speed <16.>;
					turn rarm to x-axis <35.> speed <32.>;
					turn rarmz to z-axis <10.> speed <48.>;
					turn rwrist to x-axis <45.> speed <16.>;
					turn rhandx to x-axis <0.> speed <48.>;
					turn torso to y-axis <0.> speed <32.>;
					turn headturn to y-axis <0.> speed <48.>;
					turn torsorecoil to x-axis <10.> speed <32.>;
				}
				sleep 313;
			}
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <-60.> speed <192.>;
				turn lboot to x-axis <100.> speed <32.>;
				turn lfoot to x-axis <0.> speed <0.>;
				turn rleg to x-axis <30.> speed <80.>;
				turn rboot to x-axis <-10.> speed <32.>;
				turn rfoot to x-axis <-20.> speed <64.>;
				move pelvis to y-axis [1.] speed [5.];
				turn loin1 to x-axis <20.> speed <16.>;
				turn loin2 to x-axis <20.> speed <16.>;
				if( !bAiming )
				{
					turn larm to x-axis <45.> speed <32.>;
					turn larmz to z-axis <-10.> speed <48.>;
					turn lwrist to x-axis <50.> speed <11.>;
					turn rarm to x-axis <25.> speed <32.>;
					turn rarmz to z-axis <10.> speed <48.>;
					turn rwrist to x-axis <40.> speed <11.>;
					turn rhandx to x-axis <15.> speed <48.>;
					turn torso to y-axis <10.> speed <32.>;
					turn headturn to y-axis <-15.> speed <48.>;
					turn torsorecoil to x-axis <5.> speed <16.>;
					turn larmrecoil to x-axis <0.> speed <100.>;
					turn lfingers to y-axis <0.> speed <120.>;
					turn lthumb to y-axis <0.> speed <180.>;
					turn rarmrecoil to x-axis <0.> speed <100.>;
					turn rwrist to y-axis <0.> speed <100.>;
					turn rhandz to z-axis <0.> speed <100.>;
				}
				sleep 313;
			}
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <-40.> speed <64.>;
				turn lboot to x-axis <10.> speed <288.>;
				turn lfoot to x-axis <20.> speed <64.>;
				turn rleg to x-axis <50.> speed <64.>;
				turn rboot to x-axis <20.> speed <96.>;
				turn rfoot to x-axis <10.> speed <96.>;
				move pelvis to y-axis [-1.] speed [6.];
				turn loin1 to x-axis <30.> speed <32.>;
				turn loin2 to x-axis <30.> speed <32.>;
				if( !bAiming )
				{
					turn torsorecoil to x-axis <0.> speed <16.>;
				}
				sleep 313;
			}
			if( bMoving and !bJumping )
			{
				turn lleg to x-axis <5.> speed <144.>;
				turn lboot to x-axis <0.> speed <32.>;
				turn lfoot to x-axis <0.> speed <64.>;
				turn rleg to x-axis <0.> speed <160.>;
				turn rboot to x-axis <90.> speed <224.>;
				turn rfoot to x-axis <0.> speed <32.>;
				move pelvis to y-axis [-1.] speed [2.];
				turn loin1 to x-axis <0.> speed <30.>;
				turn loin2 to x-axis <0.> speed <30.>;
				if( !bAiming )
				{
					turn larm to x-axis <35.> speed <32.>;
					turn larmz to z-axis <-10.> speed <48.>;
					turn lwrist to x-axis <45.> speed <16.>;
					turn rarm to x-axis <35.> speed <32.>;
					turn rarmz to z-axis <10.> speed <48.>;
					turn rwrist to x-axis <45.> speed <16.>;
					turn rhandx to x-axis <0.> speed <48.>;
					turn torso to y-axis <0.> speed <32.>;
					turn headturn to y-axis <0.> speed <48.>;
					turn torsorecoil to x-axis <10.> speed <32.>;
				}
				sleep 313;
			}
			justmoved = TRUE;
		}
		if( !bMoving )
		{
			if( justmoved )
			{
				turn lleg to x-axis <0.> speed <100.>;
				turn lboot to x-axis <0.> speed <200.>;
				turn rleg to x-axis <0.> speed <100.>;
				turn rboot to x-axis <0.> speed <200.>;
				move pelvis to y-axis [0.] speed [10.];
				turn pelvis to x-axis <0.> speed <10.>;
				turn torsorecoil to x-axis <0.> speed <200.>;
				turn lfoot to x-axis <0.> speed <100.>;
				turn rfoot to x-axis <0.> speed <100.>;
				turn loin1 to x-axis <0.> speed <20.>;
				turn loin2 to x-axis <0.> speed <20.>;
				if( !bAiming )
				{
					turn larm to x-axis <35.> speed <50.>;
					turn larmz to z-axis <0.> speed <25.>;
					turn lwrist to x-axis <45.> speed <100.>;
					turn rarm to x-axis <35.> speed <50.>;
					turn rarmz to z-axis <0.> speed <25.>;
					turn rwrist to x-axis <45.> speed <100.>;
					turn rhandx to x-axis <0.> speed <50.>;
					turn headturn to y-axis <0.> speed <200.>;
					turn head to y-axis <0.> speed <400.>;
					turn torso to y-axis <0.> speed <200.>;
					turn larmrecoil to x-axis <0.> speed <100.>;
					turn lfingers to y-axis <0.> speed <120.>;
					turn lthumb to y-axis <0.> speed <180.>;
					turn rarmrecoil to x-axis <0.> speed <100.>;
					turn rwrist to y-axis <0.> speed <100.>;
					turn rhandz to z-axis <0.> speed <100.>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
		sleep 100;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script ControlUnit();
	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Shield = 1;
	AttackType = 1;
	bJumping = 0;
	
	turn rwrist to x-axis <45.> now;
	move rsword to y-axis [15.] now;
	turn lwrist to x-axis <45.> now;
	move lsword to y-axis [15.] now;
	
	turn lwing to y-axis <-36.> now;
	turn rwing to y-axis <36.> now;
	
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_MOVE;
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 2000;
	turn headturn to y-axis <0.> speed <200.>;
	turn head to y-axis <0.> speed <400.>;
	turn torso to y-axis <0.> speed <200.>;
	turn torsorecoil to y-axis <0.> speed <200.>;
	
	turn larm to x-axis <35.> speed <100.>;
	turn larmrecoil to x-axis <0.> speed <100.>;
	turn larmz to z-axis <0.> speed <50.>;
	turn lwrist to x-axis <45.> speed <100.>;
	turn lwrist to y-axis <0.> speed <100.>;
	turn lhandx to x-axis <0.> speed <100.>;
	turn lhandz to z-axis <0.> speed <100.>;
	
	turn rarm to x-axis <35.> speed <100.>;
	turn rarmrecoil to x-axis <0.> speed <100.>;
	turn rarmz to z-axis <0.> speed <50.>;
	turn rwrist to x-axis <45.> speed <100.>;
	turn rwrist to y-axis <0.> speed <100.>;
	turn rhandx to x-axis <0.> speed <100.>;
	turn rhandz to z-axis <0.> speed <100.>;
	bAiming = FALSE;
}

AimFromWeapon1(piecenum)
{
	piecenum = torso;
}

QueryWeapon1(piecenum)
{
	piecenum = hit;
}

AimWeapon1(heading, pitch)
{
	bAiming = TRUE;
		
	signal SIG_AIM_BLADE;
	set-signal-mask SIG_AIM_BLADE;

	if( AttackType == 1 )
	{
		
		turn torso to y-axis heading speed <300.>;
		turn torsorecoil to y-axis <-90.> speed <300.>;
		turn headturn to y-axis <0.> speed <450.>;
		turn head to y-axis <30.> speed <300.>;
		
		turn larm to x-axis <0.> - pitch speed <300.>;
		turn larmrecoil to x-axis <-60.> speed <300.>;
		turn larmz to z-axis <-45.> speed <300.>;
		turn lwrist to x-axis <30.> speed <150.>;
		turn lwrist to y-axis <-45.> speed <240.>;
		turn lhandx to x-axis <10.> speed <120.>;
		turn lhandz to z-axis <-60.> speed <420.>;
		
		turn rarm to x-axis <0.> - pitch speed <300.>;
		turn rarmrecoil to x-axis <0.> speed <300.>;
		turn rarmz to z-axis <30.> speed <300.>;
		turn rwrist to x-axis <10.> speed <150.>;
		turn rwrist to y-axis <-75.> speed <240.>;
		turn rhandx to x-axis <20.> speed <120.>;
		turn rhandz to z-axis <-10.> speed <420.>;
		
		wait-for-turn torso around y-axis;
		wait-for-turn torsorecoil around y-axis;
		wait-for-turn rarm around x-axis;
		wait-for-turn rarmz around z-axis;
		wait-for-turn rhandx around x-axis;
		wait-for-turn rhandz around z-axis;

		start-script RestoreAfterDelay();
		return (1);
	}
	if( AttackType == 2 )
	{
		
		turn torso to y-axis heading speed <300.>;
		turn torsorecoil to y-axis <90.> speed <300.>;
		turn headturn to y-axis <0.> speed <450.>;
		turn head to y-axis <-90.> speed <300.>;
		
		turn rarm to x-axis <0.> - pitch speed <300.>;
		turn rarmrecoil to x-axis <-60.> speed <300.>;
		turn rarmz to z-axis <45.> speed <300.>;
		turn rwrist to x-axis <30.> speed <150.>;
		turn rwrist to y-axis <45.> speed <240.>;
		turn rhandx to x-axis <10.> speed <120.>;
		turn rhandz to z-axis <60.> speed <420.>;
		
		turn larm to x-axis <0.> - pitch speed <300.>;
		turn larmrecoil to x-axis <0.> speed <300.>;
		turn larmz to z-axis <-30.> speed <300.>;
		turn lwrist to x-axis <10.> speed <150.>;
		turn lwrist to y-axis <75.> speed <240.>;
		turn lhandx to x-axis <20.> speed <125.>;
		turn lhandz to z-axis <10.> speed <60.>;
		
		wait-for-turn torso around y-axis;
		wait-for-turn torsorecoil around y-axis;
		wait-for-turn rarm around x-axis;
		wait-for-turn rarmz around z-axis;
		wait-for-turn rhandx around x-axis;
		wait-for-turn rhandz around z-axis;
	
		start-script RestoreAfterDelay();
		return (1);
	}
}

FireWeapon1()
{
	if( AttackType == 1 )
	{
		AttackType = 2;
		
		turn larm to x-axis <-15.> speed <60.>;
		turn larmz to z-axis <70.> speed <120.>;
		turn lwrist to x-axis <-15.> speed <60.>;
		
		turn torsorecoil to y-axis <90.> speed <240.>;
		turn head to y-axis <-90.> speed <240.>;
		
		turn rarmrecoil to x-axis <-75.> speed <300.>;
		turn rarmz to z-axis <0.> speed <120.>;
		turn rwrist to x-axis <75.> speed <300.>;
		turn rwrist to y-axis <0.> speed <300.>;
		turn rhandx to x-axis <60.> speed <240.>;
		turn rhandz to z-axis <-90.> speed <360.>;
		
		wait-for-turn torsorecoil around y-axis;
		return (0);
	}
	if( AttackType == 2 )
	{
		AttackType = 1;
		
		turn larmrecoil to x-axis <-75.> speed <300.>;
		turn larmz to z-axis <0.> speed <120.>;
		turn lwrist to x-axis <75.> speed <300.>;
		turn lwrist to y-axis <0.> speed <300.>;
		turn lhandx to x-axis <60.> speed <240.>;
		turn lhandz to z-axis <90.> speed <360.>;
		
		turn torsorecoil to y-axis <-30.> speed <240.>;
		turn head to y-axis <30.> speed <240.>;
		
		turn rarmrecoil to x-axis <0.> speed <300.>;
		turn rarmz to z-axis <80.> speed <300.>;
		turn rwrist to x-axis <80.> speed <300.>;
		turn rwrist to y-axis <0.> speed <300.>;
		turn rhandx to x-axis <60.> speed <240.>;
		turn rhandz to z-axis <0.> speed <360.>;
		
		wait-for-turn torsorecoil around y-axis;
		return (0);
	}
}

//Shield Weapon
Shield()
{
	Static_Shield = !Static_Shield;
}

AimFromWeapon3(piecenum)
{
	piecenum = torso;
}

QueryWeapon3(piecenum)
{
	piecenum = torso;
}

AimWeapon3(heading, pitch)
{
	if( Static_Shield )
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( Severity <= 50 )
	{
		CorpseType = 1;
		explode lsword type  NOHEATCLOUD;
		explode larmrecoil type NOHEATCLOUD;
		explode pelvis type NOHEATCLOUD;
		explode ring type NOHEATCLOUD;
		explode rboot type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode lboot type NOHEATCLOUD;
		return (CorpseType);
	}	
	CorpseType = 3;
	explode lsword type FALL | NOHEATCLOUD;
	explode larmrecoil type FALL | NOHEATCLOUD;
	explode pelvis type SHATTER | NOHEATCLOUD;
	explode ring type NOHEATCLOUD;
	explode rboot type NOHEATCLOUD;
	explode head type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lboot type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
