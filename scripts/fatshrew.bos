#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, torax, abdomen, magasin, cartouche, gatling_pylone, gatling_bloc, gatling_canons, gatling_feu, 
	   pattes, patte10,
       patte11, patte12, patte13, patte14, stomp1, patte20, patte21, patte22,
       patte23, patte24, stomp2, patte30, patte31, patte32, patte33, patte34,
       stomp3, patte40, patte41, patte42, patte43, patte44, stomp4, patte50,
       patte51, patte52, patte53, patte54, stomp5, patte60, patte61, patte62,
       patte63, patte64, stomp6, ecraseur_epaule, ecraseur_bras, load_shoulder, load_arm, unload_shoulder,
       unload_arm, goal_shoulder, goal_arm, basket1, basket2, basket3, basket4, basket5,
       basket6, rocket_left, rocket_right, R1, R2, R3, R4, R5, R6, blodturret, blodsleeve, blodflare, blodbarrel;

static-var  bMoving, Static_Var_1,
            restore_delay, bAiming, Static_Var_9, Static_Var_10,
            Static_Var_11, Static_Var_12, Static_Var_13, Static_Var_14,
            Static_Var_16, starburst1, starburst2;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			16
#define SIG_AIM_5			32
#define SIG_AIM_6			64


TexasRanger(Func_Var_1, Func_Var_2)
{
	while( !bMoving )
	{
		sleep 100;
	}
	while( TRUE )
	{
		turn patte60 to y-axis <-1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte50 to y-axis <45.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte40 to y-axis <-16.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte10 to y-axis <-14.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte21 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte22 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte23 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp3);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp3)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_11 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_11 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte31 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte32 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte33 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte20 to y-axis <45.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte30 to y-axis <-14.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte60 to y-axis <-16.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte40 to y-axis <-30.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte10 to y-axis <1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte51 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte52 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte53 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp2);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp2)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_10 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_10 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte21 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte22 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte23 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte50 to y-axis <-15.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte20 to y-axis <29.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte60 to y-axis <-31.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte30 to y-axis <1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte10 to y-axis <15.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte41 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte42 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte43 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp5);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp5)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_13 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_13 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte51 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte52 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte53 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte40 to y-axis <30.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte50 to y-axis <1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte60 to y-axis <-45.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte30 to y-axis <16.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte20 to y-axis <14.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte11 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte12 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte13 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp4);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp4)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_12 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_12 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte41 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte42 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte43 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte10 to y-axis <-45.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte40 to y-axis <14.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte30 to y-axis <30.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte20 to y-axis <-1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte50 to y-axis <16.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte61 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte62 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte63 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp1);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp1)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_9 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_9 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte11 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte12 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte13 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte60 to y-axis <15.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte10 to y-axis <-29.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte20 to y-axis <-15.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte50 to y-axis <31.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte40 to y-axis <-1.000000> speed <15.000000> * <2.747253> / <2.197802>;
		turn patte31 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte32 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte33 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		Func_Var_2 = get PIECE_XZ(base) - get PIECE_XZ(stomp6);
		turn ecraseur_epaule to y-axis get XZ_ATAN(Func_Var_2) now;
		move ecraseur_bras to z-axis get XZ_HYPOT(Func_Var_2) + [0.000000] - [20.000000] now;
		move ecraseur_bras to y-axis get GROUND_HEIGHT(get PIECE_XZ(stomp6)) - get PIECE_Y(ecraseur_epaule) now;
		if( Static_Var_14 == 5 AND bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] now;
		}
		if( Static_Var_14 != 5 OR !bMoving )
		{
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
		turn patte61 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
		turn patte62 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
		turn patte63 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
		turn patte30 to y-axis <-30.000000> speed <60.000000> * <2.747253> / <2.197802>;
		sleep 400;
		while( !bMoving )
		{
			sleep 100;
			move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
		}
	}
	turn patte21 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte22 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte23 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte23 around z-axis;
	turn patte20 to y-axis <45.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte20 around y-axis;
	turn patte21 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte22 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte23 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte23 around z-axis;
	turn patte20 to y-axis <-15.000000> speed <15.000000> * <2.747253> / <2.197802>;
	turn patte51 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte52 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte53 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte53 around z-axis;
	turn patte50 to y-axis <-15.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte50 around y-axis;
	turn patte51 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte52 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte53 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte53 around z-axis;
	turn patte50 to y-axis <45.000000> speed <15.000000> * <2.747253> / <2.197802>;
	turn patte41 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte42 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte43 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte43 around z-axis;
	turn patte40 to y-axis <30.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte40 around y-axis;
	turn patte41 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte42 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte43 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte43 around z-axis;
	turn patte40 to y-axis <-30.000000> speed <15.000000> * <2.747253> / <2.197802>;
	turn patte11 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte12 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte13 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte13 around z-axis;
	turn patte10 to y-axis <-45.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte10 around y-axis;
	turn patte11 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte12 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte13 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte13 around z-axis;
	turn patte10 to y-axis <15.000000> speed <15.000000> * <2.747253> / <2.197802>;
	turn patte61 to z-axis <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte62 to z-axis <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte63 to z-axis <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte63 around z-axis;
	turn patte60 to y-axis <15.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte60 around y-axis;
	turn patte61 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte62 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte63 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte63 around z-axis;
	turn patte60 to y-axis <-45.000000> speed <15.000000> * <2.747253> / <2.197802>;
	turn patte31 to z-axis <0.000000> - <30.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte32 to z-axis <0.000000> - <45.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte33 to z-axis <0.000000> - <7.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte33 around z-axis;
	turn patte30 to y-axis <-30.000000> speed <60.000000> * <2.747253> / <2.197802>;
	wait-for-turn patte30 around y-axis;
	turn patte31 to z-axis <0.000000> speed <30.000000> * <5.494505> / <2.197802>;
	turn patte32 to z-axis <0.000000> speed <45.000000> * <5.494505> / <2.197802>;
	turn patte33 to z-axis <0.000000> speed <7.000000> * <5.494505> / <2.197802>;
	wait-for-turn patte33 around z-axis;
	turn patte30 to y-axis <30.000000> speed <15.000000> * <2.747253> / <2.197802>;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
	move ecraseur_epaule to y-axis [0.000000] - [13107.199982] now;
}

Create()
{
	Static_Var_16 = 0;
	turn patte20 to y-axis <45.000000> now;
	turn patte60 to y-axis <-45.000000> now;
	turn patte10 to y-axis <-45.000000> now;
	turn patte50 to y-axis <45.000000> now;
	bMoving = FALSE;
	Static_Var_1 = 0;
	bAiming = FALSE;
	restore_delay = 10;
	Static_Var_9 = 5;
	Static_Var_10 = 5;
	Static_Var_11 = 5;
	Static_Var_12 = 5;
	Static_Var_13 = 5;
	Static_Var_14 = 5;
	starburst1 = 0;
	starburst2  = 0;
	set ACTIVATION to 1;
	start-script TexasRanger();
	set ACTIVATION to 1;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = 20000;
}

RetourTourelleLaser()
{
	sleep 3000;
	turn blodturret to y-axis <0.000000> speed <25.000000>;
	turn blodsleeve to x-axis <0.000000> speed <10.000000>;
}

AimFromSecondary(piecenum)
{
	piecenum = blodturret;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn blodturret to y-axis heading speed <130.000000>;
	turn blodsleeve to x-axis <-8.000000> - pitch speed <120.000000>;
	wait-for-turn blodturret around y-axis;
	wait-for-turn blodsleeve around x-axis;
	start-script RetourTourelleLaser();
	return (1);
}

QuerySecondary(piecenum)
{
	piecenum = blodflare;
}

FireSecondary()
{

}

AimFromPrimary(piecenum)
{
	piecenum = cartouche;
}

RetourTourelleGatling()
{
	sleep 2000;
	turn gatling_pylone to y-axis <0.000000> speed <25.000000>;
	turn gatling_bloc to x-axis <0.000000> speed <10.000000>;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn gatling_pylone to y-axis heading speed <120.000000>;
	turn gatling_bloc to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn gatling_pylone around y-axis;
	wait-for-turn gatling_bloc around x-axis;
	start-script RetourTourelleGatling();
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = gatling_feu;
}

FirePrimary()
{
	emit-sfx 1024 + 0 from gatling_feu;
	++Static_Var_1;
	if( Static_Var_1 >= 6 )
	{
		Static_Var_1 = 0;
	}
	turn gatling_canons to z-axis <60.> * Static_Var_1 speed <500.>;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	return (1);
}

FireWeapon5()
{
	++starburst1;
	if (starburst1 == 3)
	{
		starburst1 = 0;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = cartouche;
}


QueryWeapon5(piecenum)
{
	if (starburst1 == 0)
	{
		piecenum = R1;
	}
	if (starburst1 == 1)
	{
		piecenum = R2;
	}
	if (starburst1 == 2)
	{
		piecenum = R3;
	}
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	return (1);
}

FireWeapon6()
{
	++starburst2;
	if (starburst2 == 3)
	{
		starburst2 = 0;
	}
}

AimFromWeapon6(piecenum)
{
	piecenum = cartouche;
}


QueryWeapon6(piecenum)
{
	if (starburst2 == 0)
	{
		piecenum = R4;
	}
	if (starburst2 == 1)
	{
		piecenum = R5;
	}
	if (starburst2 == 2)
	{
		piecenum = R6;
	}
}

SweetSpot(piecenum)
{
	piecenum = torax;
}

Killed(severity, corpsetype)
{
	
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode torax type NOHEATCLOUD;
		explode abdomen type NOHEATCLOUD;
		explode blodturret type NOHEATCLOUD;
		explode blodbarrel type NOHEATCLOUD;
		explode patte10 type NOHEATCLOUD | SHATTER;
		explode patte40 type NOHEATCLOUD | SHATTER;
		explode patte50 type NOHEATCLOUD | SHATTER;
		explode patte31 type NOHEATCLOUD | SHATTER;
		explode patte61 type NOHEATCLOUD | SHATTER;
		explode patte12 type NOHEATCLOUD | SHATTER;
		explode patte42 type NOHEATCLOUD | SHATTER;
		explode patte52 type NOHEATCLOUD | SHATTER;
		explode patte23 type NOHEATCLOUD | SHATTER;
		explode patte14 type NOHEATCLOUD | SHATTER;
		explode patte44 type NOHEATCLOUD | SHATTER;
		explode patte54 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode torax type NOHEATCLOUD;
	explode abdomen type NOHEATCLOUD;
	explode blodturret type NOHEATCLOUD | SHATTER;
	explode blodbarrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte10 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte40 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte50 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte31 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte61 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte12 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte42 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte52 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte23 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte14 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte44 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode patte54 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	return (corpsetype);
}
