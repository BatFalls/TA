#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, sphere, pylon, dish1, dish2, dish3, dish4, dish5, dish6, dish7;

static-var  Static_Var_1, Static_Var_2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from sphere;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from socle;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( !Static_Var_1 )
		{
			move sphere to y-axis [0.] speed [5.];
			move pylon to y-axis [0.] speed [5.];
			sleep 1000;
			spin pylon around y-axis speed <60.> accelerate <1.>;
			spin sphere around y-axis speed <-60.> accelerate <1.>;
			sleep 500;
			currentstate = 0;
		}
		if( Static_Var_1 )
		{
			spin pylon around y-axis speed <0.> accelerate <-1.>;
			spin sphere around y-axis speed <0.> accelerate <-1.>;
			move sphere to y-axis [-22.] speed [10.];
			move pylon to y-axis [-24.] speed [8.];
			sleep 1000;
			move pylon to y-axis [-24.] speed [5.];
			wait-for-move pylon along y-axis;
			wait-for-move sphere along y-axis;
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	start-script SmokeUnit();
	move pylon to y-axis [-24.] now;
	move sphere to y-axis [-24.] now;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = socle;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode socle type NOHEATCLOUD;
		explode pylon type SHATTER;
		explode dish1 type NOHEATCLOUD | SHATTER;
		explode dish2 type NOHEATCLOUD | SHATTER;
		explode dish3 type NOHEATCLOUD | SHATTER;
		explode dish4 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode socle type NOHEATCLOUD | SHATTER;
		explode pylon type NOHEATCLOUD | SHATTER;
		explode dish7 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode dish1 type FALL | FIRE | NOHEATCLOUD;
		explode dish2 type FALL | SMOKE | NOHEATCLOUD;
		explode dish3 type FALL | SMOKE | FIRE | NOHEATCLOUD;
		explode dish4 type FALL | SMOKE | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode socle type NOHEATCLOUD;
	explode pylon type NOHEATCLOUD;
	explode dish7 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode dish1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode dish2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode dish3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode dish4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
