#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, turretrecoil, arm, arm2, pitchturret, cannon,
       plate1, plate2, barrel, bar1, bar2,
       bar2b, bar3, bar3b, fire, system, backpack, backpack2,
       backpack3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from backpack2;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from barrel;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	turn bar2 to z-axis <-120.> now;
	turn bar3 to z-axis <120.> now;
	start-script SmokeUnit();	
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <7.>;
	turn pitchturret to x-axis <0.> - pitch speed <4.>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from fire;
	move barrel to z-axis [-3.] speed [25.];
	turn turretrecoil to x-axis <-10.> speed <37.>;
	sleep 100;
	turn bar1 to x-axis <-30.> speed <150.>;
	turn bar2b to x-axis <-30.> speed <150.>;
	turn bar3b to x-axis <-30.> speed <150.>;
	sleep 100;
	turn turretrecoil to x-axis <-10.> speed <15.>;
	turn bar1 to x-axis <-30.> speed <90.>;
	turn bar2b to x-axis <-30.> speed <90.>;
	turn bar3b to x-axis <-30.> speed <90.>;
	sleep 100;
	turn bar1 to x-axis <-30.> speed <30.>;
	turn bar2b to x-axis <-30.> speed <30.>;
	turn bar3b to x-axis <-30.> speed <30.>;
	sleep 25;
	turn turretrecoil to x-axis <-10.> speed <5.>;
	sleep 75;
	turn turretrecoil to x-axis <0.> speed <4.>;
	move barrel to z-axis [0.] speed [1.];
	turn bar1 to x-axis <0.> speed <14.>;
	turn bar2b to x-axis <0.> speed <14.>;
	turn bar3b to x-axis <0.> speed <14.>;
	sleep 250;
}

QueryPrimary(piecenum)
{
	piecenum = fire;
}

AimFromPrimary(piecenum)
{
	piecenum = barrel;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	explode backpack type NOHEATCLOUD | BITMAP1;
	explode backpack2 type NOHEATCLOUD;
	explode backpack3 type NOHEATCLOUD;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD | BITMAP1;
		explode turret type NOHEATCLOUD | BITMAP1;
		explode pitchturret type NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode bar1 type NOHEATCLOUD;
		explode bar2 type NOHEATCLOUD;
		explode bar3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret type NOHEATCLOUD | BITMAP1;
		explode turretrecoil type SHATTER | NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode bar1 type FALL | SMOKE | NOHEATCLOUD;
		explode bar2 type NOHEATCLOUD;
		explode bar3 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type NOHEATCLOUD | BITMAP1;
	explode turretrecoil type SHATTER | NOHEATCLOUD;
	explode pitchturret type NOHEATCLOUD;
	explode plate1 type NOHEATCLOUD;
	explode plate2 type NOHEATCLOUD;
	explode barrel type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar3 type NOHEATCLOUD;
	return (corpsetype);
}
