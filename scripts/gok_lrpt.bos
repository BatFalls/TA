#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, core, circle, plates, platesb, decor, decor1, decor2,
       decor3, decor4, turret, turretrecoil, arm, arm2, pitchturret, cannon,
       system2, plate1, plate2, barrel, bar1, bar2,
       bar2b, bar3, bar3b, fire, emit, lightnings, lig1, lig2,
       lig2b, lig3, lig3b, lig4, lig5, system, backpack, backpack2,
       backpack3;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from backpack2;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from barrel;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Recharge()
{
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [0.] now;
	show lig4;
	sleep 75;
	hide lig4;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [0.] now;
	show lig5;
	sleep 75;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [0.] now;
	show lig4;
	show lig5;
	sleep 75;
	hide lig4;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [4.] now;
	move lig5 to z-axis [0.] now;
	show lig4;
	sleep 75;
	hide lig4;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [2.] now;
	show lig5;
	sleep 75;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [6.] now;
	show lig4;
	show lig5;
	sleep 75;
	hide lig4;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [2.] now;
	move lig5 to z-axis [4.] now;
	show lig4;
	show lig5;
	sleep 75;
	hide lig4;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [4.] now;
	move lig5 to z-axis [0.] now;
	show lig4;
	sleep 75;
	hide lig4;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [2.] now;
	show lig4;
	show lig5;
	sleep 75;
	hide lig4;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [0.] now;
	move lig5 to z-axis [0.] now;
	show lig5;
	sleep 75;
	hide lig5;
	sleep 50;
	move lig4 to z-axis [4.] now;
	move lig5 to z-axis [0.] now;
	show lig4;
	sleep 75;
	hide lig4;
}

Blossom()
{
	turn lig1 to z-axis <0.> now;
	turn lig2 to z-axis <-120.> now;
	turn lig3 to z-axis <120.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <180.> now;
	turn lig2 to z-axis <60.> now;
	turn lig3 to z-axis <300.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <240.> now;
	turn lig2 to z-axis <120.> now;
	turn lig3 to z-axis <0.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <60.> now;
	turn lig2 to z-axis <-60.> now;
	turn lig3 to z-axis <180.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <120.> now;
	turn lig2 to z-axis <0.> now;
	turn lig3 to z-axis <240.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <300.> now;
	turn lig2 to z-axis <180.> now;
	turn lig3 to z-axis <60.> now;
	show lig1;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig1;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <0.> now;
	turn lig2 to z-axis <-120.> now;
	turn lig3 to z-axis <120.> now;
	show lig2b;
	show lig3b;
	sleep 75;
	hide lig2b;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <180.> now;
	turn lig2 to z-axis <60.> now;
	turn lig3 to z-axis <300.> now;
	show lig3b;
	sleep 75;
	hide lig3b;
	sleep 50;
	turn lig1 to z-axis <240.> now;
	turn lig2 to z-axis <120.> now;
	turn lig3 to z-axis <0.> now;
	show lig1;
	sleep 75;
	hide lig1;
	sleep 50;
	turn lig1 to z-axis <60.> now;
	turn lig2 to z-axis <-60.> now;
	turn lig3 to z-axis <180.> now;
	show lig1;
	show lig2b;
	sleep 75;
	hide lig1;
	hide lig2b;
	sleep 50;
	turn lig1 to z-axis <120.> now;
	turn lig2 to z-axis <0.> now;
	turn lig3 to z-axis <240.> now;
	show lig1;
	sleep 75;
	hide lig1;
	sleep 50;
	turn lig1 to z-axis <300.> now;
	turn lig2 to z-axis <180.> now;
	turn lig3 to z-axis <60.> now;
	show lig3b;
	sleep 75;
	hide lig3b;
}

Create()
{
	hide lig1;
	hide lig2b;
	hide lig3b;
	hide lig4;
	hide lig5;
	start-script SmokeUnit();
	turn bar2 to z-axis <-120.> now;
	turn bar3 to z-axis <120.> now;
	turn lig2 to z-axis <-120.> now;
	turn lig3 to z-axis <120.> now;
	spin lightnings around z-axis speed <5.>;
	spin lig1 around y-axis speed <290.>;
	spin lig2b around y-axis speed <300.>;
	spin lig3b around y-axis speed <310.>;
	spin lig4 around z-axis speed <2900.>;
	spin lig5 around z-axis speed <3100.>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <7.>;
	turn pitchturret to x-axis <0.> - pitch speed <4.>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from emit;
	move barrel to z-axis [-3.] speed [25.];
	turn turretrecoil to x-axis <-10.> speed <37.>;
	sleep 100;
	turn bar1 to x-axis <-30.> speed <150.>;
	turn bar2b to x-axis <-30.> speed <150.>;
	turn bar3b to x-axis <-30.> speed <150.>;
	sleep 100;
	turn turretrecoil to x-axis <-10.> speed <15.>;
	turn bar1 to x-axis <-30.> speed <90.>;
	turn bar2b to x-axis <-30.> speed <90.>;
	turn bar3b to x-axis <-30.> speed <90.>;
	sleep 100;
	turn bar1 to x-axis <-30.> speed <30.>;
	turn bar2b to x-axis <-30.> speed <30.>;
	turn bar3b to x-axis <-30.> speed <30.>;
	sleep 25;
	turn turretrecoil to x-axis <-10.> speed <5.>;
	sleep 75;
	start-script Blossom();
	turn turretrecoil to x-axis <0.> speed <4.>;
	move barrel to z-axis [0.] speed [1.];
	turn bar1 to x-axis <0.> speed <14.>;
	turn bar2b to x-axis <0.> speed <14.>;
	turn bar3b to x-axis <0.> speed <14.>;
	sleep 250;
	start-script Recharge();
	sleep 300;
}

QueryPrimary(piecenum)
{
	piecenum = fire;
}

AimFromPrimary(piecenum)
{
	piecenum = barrel;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	explode plates type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode platesb type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode decor1 type NOHEATCLOUD;
	explode decor2 type NOHEATCLOUD;
	explode decor3 type NOHEATCLOUD;
	explode decor4 type NOHEATCLOUD;
	explode backpack type NOHEATCLOUD | BITMAP1;
	explode backpack2 type NOHEATCLOUD;
	explode backpack3 type NOHEATCLOUD;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD | BITMAP1;
		explode turret type NOHEATCLOUD | BITMAP1;
		explode pitchturret type NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode bar1 type NOHEATCLOUD;
		explode bar2 type NOHEATCLOUD;
		explode bar3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret type NOHEATCLOUD | BITMAP1;
		explode turretrecoil type SHATTER | NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode bar1 type FALL | SMOKE | NOHEATCLOUD;
		explode bar2 type NOHEATCLOUD;
		explode bar3 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type NOHEATCLOUD | BITMAP1;
	explode turretrecoil type SHATTER | NOHEATCLOUD;
	explode pitchturret type NOHEATCLOUD;
	explode plate1 type NOHEATCLOUD;
	explode plate2 type NOHEATCLOUD;
	explode barrel type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode bar3 type NOHEATCLOUD;
	return (corpsetype);
}
