#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, socle, supports, sup1, sup4,
       sup2, sup3, nexus, nex1, nex2, nex3, nex4,
       ceil, gun;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;

Shield()
{
	Static_Var_3 = !Static_Var_3;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( !Static_Var_1 )
		{
			move nexus to y-axis [0.] speed [3.];
			sleep 1000;
			turn nex1 to x-axis <0.> speed <40.>;
			turn nex2 to x-axis <0.> speed <40.>;
			turn nex3 to x-axis <0.> speed <40.>;
			turn nex4 to x-axis <0.> speed <40.>;
			set ARMORED to 0;
			sleep 2500;
			currentstate = 0;
		}
		if( Static_Var_1 )
		{
			turn nex1 to x-axis <-90.> speed <40.>;
			turn nex2 to x-axis <-90.> speed <40.>;
			turn nex3 to x-axis <-90.> speed <40.>;
			turn nex4 to x-axis <-90.> speed <40.>;
			sleep 1000;
			move nexus to y-axis [-4.5] speed [3.];
			sleep 1000;
			set ARMORED to 1;
			sleep 1500;
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Sensor()
{
	while (TRUE)
	{
		if(Static_Var_3 == 1)
		{
			start-script RequestState(0);
		}
		else
		{
			start-script RequestState(1);
		}
	
	sleep 500;
	
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script Sensor();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from nexus;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	turn nex2 to y-axis <-90.> now;
	turn nex3 to y-axis <-180.> now;
	turn nex4 to y-axis <90.> now;
	
	
	turn nex1 to x-axis <-90.> now;
	turn nex2 to x-axis <-90.> now;
	turn nex3 to x-axis <-90.> now;
	turn nex4 to x-axis <-90.> now;
	move nexus to y-axis [-6.] now;
}

AimPrimary(heading, pitch)
{
	sleep 100;
	return (Static_Var_3);
}

FirePrimary()
{
	explode gun type NOHEATCLOUD | FALL;
	sleep 100;
}

QueryPrimary(piecenum)
{
	piecenum = base;
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	explode base type NOHEATCLOUD;
	explode ceil type NOHEATCLOUD;
	explode nexus type NOHEATCLOUD;
	explode nex1 type NOHEATCLOUD;
	explode nex2 type NOHEATCLOUD;
	explode nex3 type NOHEATCLOUD;
	explode nex4 type NOHEATCLOUD;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (corpsetype);
	}
	corpsetype = 3;
	return (corpsetype);
}
