#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, lleg, lboot, lfoot, rleg, rboot, rfoot, torso, torsorecoil, headturn, head,
       armpitch, larm, larmz, lwrist, lwristy, lhandz, lhandx, 
       rarm, rarmz, rwrist, rwristy, gun, flare;

static-var  bMoving, JustMoved, bAiming, MeleeAttack;

// Signal definitions
#define SIG_AIM			2
#define SIG_AIM_MOVE	4

lua_FlameShot(Func_Var_1)
{
}

MotionControl()
{
	JustMoved = TRUE;
	while( TRUE )
	{
		if( bMoving )
		{
			if( bMoving )
			{
					turn lleg to x-axis <30.00> speed <200.00>;
					turn lboot to x-axis <-10.00> speed <80.00>;
					turn lfoot to x-axis <-20.00> speed <160.00>;
					turn rleg to x-axis <-60.00> speed <480.00>;
					turn rboot to x-axis <100.00> speed <80.00>;
					turn rfoot to x-axis <0.00> speed <0.00>;
					move pelvis to y-axis [0.90] speed [10.80];

				if( !baiming )
				{
					turn larm to x-axis <15.00> speed <80.00>;
					turn lwrist to x-axis <20.00> speed <26.66>;
					turn rarm to x-axis <-25.00> speed <80.00>;
					turn rwrist to x-axis <-25.00> speed <26.66>;
					turn torso to y-axis <-10.00> speed <80.00>;
					turn headturn to y-axis <10.00> speed <80.00>;
					turn torsorecoil to x-axis <5.00> speed <40.00>;
				}		
				sleep 125;
			}
			
			if( bMoving )
			{
					turn lleg to x-axis <50.00> speed <160.00>;
					turn lboot to x-axis <20.00> speed <240.00>;
					turn lfoot to x-axis <10.00> speed <240.00>;
					turn rleg to x-axis <-40.00> speed <160.00>;
					turn rboot to x-axis <10.00> speed <720.00>;
					turn rfoot to x-axis <20.00> speed <160.00>;
					move pelvis to y-axis [-0.90] speed [14.40];
				if( !baiming )
				{
					turn torsorecoil to x-axis <0.00> speed <40.00>;
				}		
				sleep 125;
			}
			
			if( bMoving )
			{

					turn lleg to x-axis <0.00> speed <400.00>;
					turn lboot to x-axis <90.00> speed <560.00>;
					turn lfoot to x-axis <0.00> speed <80.00>;
					turn rleg to x-axis <5.00> speed <360.00>;
					turn rboot to x-axis <0.00> speed <80.00>;
					turn rfoot to x-axis <0.00> speed <160.00>;
					move pelvis to y-axis [-0.45] speed [3.60];

				if( !baiming )
				{
					turn larm to x-axis <0.00> speed <80.00>;
					turn lwrist to x-axis <0.00> speed <40.00>;
					turn rarm to x-axis <0.00> speed <80.00>;
					turn rwrist to x-axis <0.00> speed <40.00>;
					turn torso to y-axis <0.00> speed <80.00>;
					turn headturn to y-axis <0.00> speed <80.00>;
					turn torsorecoil to x-axis <10.00> speed <80.00>;
				}
				sleep 125;
			}
			
			if( bMoving )
			{
					turn lleg to x-axis <-60.00> speed <480.00>;
					turn lboot to x-axis <100.00> speed <80.00>;
					turn lfoot to x-axis <0.00> speed <0.00>;
					turn rleg to x-axis <30.00> speed <200.00>;
					turn rboot to x-axis <-10.00> speed <80.00>;
					turn rfoot to x-axis <-20.00> speed <160.00>;
					move pelvis to y-axis [0.90] speed [10.80];
					
				if( !baiming )
				{
					turn larm to x-axis <-45.00> speed <80.00>;
					turn lwrist to x-axis <-50.00> speed <26.66>;
					turn rarm to x-axis <25.00> speed <80.00>;
					turn rwrist to x-axis <40.00> speed <26.66>;
					turn torso to y-axis <10.00> speed <80.00>;
					turn headturn to y-axis <-10.00> speed <80.00>;
					turn torsorecoil to x-axis <5.00> speed <40.00>;
				}	
				sleep 125;
			}
			
			if( bMoving )
			{
					turn lleg to x-axis <-40.00> speed <160.00>;
					turn lboot to x-axis <10.00> speed <720.00>;
					turn lfoot to x-axis <20.00> speed <160.00>;
					turn rleg to x-axis <50.00> speed <160.00>;
					turn rboot to x-axis <20.00> speed <240.00>;
					turn rfoot to x-axis <10.00> speed <240.00>;
					move pelvis to y-axis [-0.90] speed [14.40];
				if( !baiming )
				{		
					turn torsorecoil to x-axis <0.00> speed <40.00>;
				}			
				sleep 125;
			}
			
			if( bMoving )
			{
					turn lleg to x-axis <5.00> speed <360.00>;
					turn lboot to x-axis <0.00> speed <80.00>;
					turn lfoot to x-axis <0.00> speed <160.00>;
					turn rleg to x-axis <0.00> speed <400.00>;
					turn rboot to x-axis <90.00> speed <560.00>;
					turn rfoot to x-axis <0.00> speed <80.00>;
					move pelvis to y-axis [-0.45] speed [3.60];
				if( !baiming )
				{
					turn larm to x-axis <0.00> speed <80.00>;
					turn lwrist to x-axis <0.00> speed <40.00>;
					turn rarm to x-axis <0.00> speed <80.00>;
					turn rwrist to x-axis <0.00> speed <40.00>;
					turn torso to y-axis <0.00> speed <80.00>;
					turn headturn to y-axis <0.00> speed <80.00>;
					turn torsorecoil to x-axis <10.00> speed <80.00>;
				}				
				sleep 125;
			}
			JustMoved = TRUE;
		}
		if( !bMoving )
		{
			if( JustMoved )
			{
					turn lleg to x-axis <0.00> speed <200.00>;
					turn lboot to x-axis <0.00> speed <200.00>;
					turn rleg to x-axis <0.00> speed <200.00>;
					turn rboot to x-axis <0.00> speed <200.00>;
					move pelvis to y-axis [-0.0] speed [8.10];
					turn pelvis to x-axis <0.00> speed <20.00>;
					turn torsorecoil to x-axis <0.00> speed <20.00>;
					turn lfoot to x-axis <0.00> speed <200.00>;
					turn rfoot to x-axis <0.00> speed <200.00>;
					
				if( !baiming )
				{
					turn larm to x-axis <0.00> speed <100.00>;
					turn lwrist to x-axis <0.00> speed <200.00>;
					turn rarm to x-axis <0.00> speed <100.00>;
					turn rwrist to x-axis <0.00> speed <200.00>;
					turn torso to y-axis <0.00> speed <200.00>;
					turn rwristy to x-axis <0.00> speed <200.00>;
					turn headturn to y-axis <0.00> speed <200.00>;
				}
				JustMoved = FALSE;
			}
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}

	start-script MotionControl();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	baiming = FALSE;
	JustMoved = FALSE;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_AIM_MOVE;
	bMoving = TRUE;
}

StopMoving()
{
	signal SIG_AIM_MOVE;
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep 1500;	
	baiming = FALSE;	
	turn torso to y-axis <0.00> speed <90.00>;	
	turn gun to x-axis <0.00> speed <160.00>;
}

AimFromWeapon1(PieceNum)
{
	PieceNum = torso;
}

QueryWeapon1(PieceNum)
{
	PieceNum = flare;
}

AimWeapon1(Heading, Pitch)
{	
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis Heading speed <240.00>;
	turn gun to x-axis <-90.0> - pitch speed <240.00>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	baiming = TRUE;
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	call-script lua_FlameShot(1);
	return (1);
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType, Random)
{
	if( Severity <= 50 )
	{
		CorpseType = 1;
		explode gun type NOHEATCLOUD;	
		explode torsorecoil type NOHEATCLOUD;	
		explode pelvis type NOHEATCLOUD;
		explode head type NOHEATCLOUD;
		explode rboot type NOHEATCLOUD;
		return (CorpseType);
	}	
	CorpseType = 3;
	explode gun type FALL | NOHEATCLOUD;
	explode torsorecoil type SHATTER | NOHEATCLOUD;
	explode pelvis type NOHEATCLOUD;
	explode head type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rboot type FALL | SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (CorpseType);
}