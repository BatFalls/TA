#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, lwing, rwing, engine1, engine2, thrust1, thrust2, turret, pitchturret, spinner, fire,
       gem, flare1, flare2, flare3;

static-var  gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from lwing;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from rwing;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{	
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 2500;
	turn turret to y-axis <0.> speed <60.>;
	turn pitchturret to x-axis <0.> speed <60.>;
}

AimPrimary(Heading, Pitch)
{
	signal 2;
	set-signal-mask 2;	
	turn turret to y-axis Heading speed <360.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <180.00>;	
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

AimFromPrimary(PieceNum)
{
	PieceNum = pitchturret;
}

QueryPrimary(PieceNum)
{
	PieceNum = fire;
}

FirePrimary(Random)
{
	sleep 150;
}

AimWeapon3(heading, pitch)
{
	return (1);
}

FireWeapon3()
{
	++gun_1;
	if (gun_1 == 3)
	{
		gun_1 = 0;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = gem;
}

QueryWeapon3(piecenum)
{
	if (gun_1 == 0)
	{
		piecenum = flare1;
	}
	if (gun_1 == 1)
	{
		piecenum = flare2;
	}
	if (gun_1 == 2)
	{
		piecenum = flare3;
	}
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(Severity, CorpseType)
{

	if( severity <= 45 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode spinner type NOHEATCLOUD;
		explode engine1 type NOHEATCLOUD;
		explode engine2 type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		explode pitchturret type SHATTER | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode spinner type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode engine1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode engine2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		explode pitchturret type SHATTER | EXPLODE_ON_HIT;
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode spinner type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode engine1 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode engine2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode lwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode rwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode pitchturret type SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
