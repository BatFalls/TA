#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, wakes1, wakes2, wakes3, wakes4, flare1, flare2, 
		door1, door2, aimpoint;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

static-var gun_1, Bopening;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 1;
	Bopening = FALSE;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from wakes1;
		emit-sfx 256 | 3 from wakes2;
		emit-sfx 256 | 3 from wakes3;
		emit-sfx 256 | 3 from wakes4;
		sleep 120;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

OpenDoors()
{
	move door1 to x-axis [-2.0] speed [1.0]; 
	move door2 to x-axis [2.0] speed [1.0];
	wait-for-move door1 along x-axis;
	Bopening = TRUE;
}

closeDoors()
{
	sleep 2000;
	move door1 to x-axis [0.0] speed [1.0]; 
	move door2 to x-axis [0.0] speed [1.0];
	wait-for-move door1 along x-axis;
	Bopening = FALSE;
}

AimWeapon1(heading, pitch)
{
	start-script OpenDoors();
	while (Bopening == FALSE)
	{
		sleep 250;	
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FireWeapon1(piecenum)
{
	start-script closeDoors();
	sleep 500;
}

QueryWeapon1(piecenum)
{
	piecenum = aimpoint;
}


AimFromWeapon1(piecenum)
{
	piecenum = aimpoint;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	return (1);
}

AimFromWeapon2(piecenum)
{
	piecenum = body;
}

FireWeapon2(piecenum)
{
	++gun_1;
	if(gun_1==3)
	{
		gun_1 = 1;
	}
}

QueryWeapon2(piecenum)
{
	if(gun_1==1)
	{
		piecenum = flare1;
	}
	else
	{
		piecenum = flare2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode door1 type NOHEATCLOUD;
		explode door2 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode door1 type NOHEATCLOUD;
	explode door2 type NOHEATCLOUD;
}
