#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, sleeves, barrel1, barrel2, shell, flare1, flare2;

static-var  gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <10.>;
	turn sleeves to x-axis <0.> - pitch speed <10.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FirePrimary()
{
	move barrel1 to z-axis [-7.5] now;
	emit-sfx 1024 + 0 from flare1;
	explode shell type FALL;
	sleep 50;
	move barrel1 to z-axis [0.] speed [3.];
	sleep 350;
	gun_1 = 1;
	move barrel2 to z-axis [-7.5] now;
	emit-sfx 1024 + 0 from flare2;
	explode shell type FALL;
	sleep 50;
	move barrel2 to z-axis [0.] speed [3.];
	sleep 350;
	gun_1 = 0;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | FALL;
		explode barrel1 type NOHEATCLOUD | FALL;
		explode barrel2 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | SHATTER | FALL | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | SHATTER | FALL | EXPLODE_ON_HIT;
	explode barrel1 type NOHEATCLOUD | SHATTER | FALL | EXPLODE_ON_HIT;
	explode barrel2 type NOHEATCLOUD | SHATTER | FALL | EXPLODE_ON_HIT;
	return (corpsetype);
}
