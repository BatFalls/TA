#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, drill, building, spinner, hub1, hub2a, hub2b, hammer1, hammer2, hammer3, hammer4;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Activatescr()
{ 	
	spin hub1 around z-axis speed Static_Var_1;
	spin hub2a around z-axis speed -1 * Static_Var_1;
	spin hub2b around z-axis speed -1 * Static_Var_1;
	spin drill around z-axis speed Static_Var_1;
}

Deactivatescr()
{
	turn drill to z-axis <0.000000> speed <75.000000>;
	turn hub2b to z-axis <0.000000> speed <75.000000>;
	turn hub2a to z-axis <0.000000> speed <75.000000>;
	turn hub1 to z-axis <0.000000> speed <75.000000>;

	wait-for-turn hub1 around z-axis;
	wait-for-turn hub2a around z-axis;
	wait-for-turn hub2b around z-axis;
	wait-for-turn drill around z-axis;	
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}


RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	call-script InitState();
	start-script SmokeUnit();
	
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode drill type NOHEATCLOUD;
		explode building type NOHEATCLOUD;
		explode spinner type  NOHEATCLOUD;
		explode hammer1 type NOHEATCLOUD;
		explode hammer2 type NOHEATCLOUD;
		explode hammer3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode drill type NOHEATCLOUD | FALL;
		explode building type NOHEATCLOUD | FALL;
		explode spinner type  NOHEATCLOUD | FALL;
		explode hammer1 type NOHEATCLOUD | FALL;
		explode hammer2 type NOHEATCLOUD | FALL;
		explode hammer3 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
		explode drill type NOHEATCLOUD;
		explode building type NOHEATCLOUD;
		explode spinner type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode hammer1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode hammer2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode hammer3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
}
