#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, flare5, flare6, 
	   base, body, turret, sleeve, rocket1, rocket2, rocket3, rocket4, rocket5, rocket6;

static-var  gun_1, restore_delay, firedelay, firing, jamming, moving, antiair;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_3			4
#define SIG_ACTIVATE		8
#define SIG_MOVE			32

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	firedelay = 650;
	firing = 0;
//	moving = 0;
	antiair=0;
	gun_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <180.000000>;
	turn sleeve to x-axis <0.000000> speed <180.000000>;
	move sleeve to y-axis [0.000000] speed [20.000000];
	sleep 325;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	
	move sleeve to y-axis [3.20000] speed [20.000000];
	wait-for-move sleeve along y-axis;
	
	turn turret to y-axis heading speed <360.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <360.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 == 6 )
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare3;
	}
	if( gun_1 == 3 )
	{
		piecenum = flare4;
	}
	if( gun_1 == 4 )
	{
		piecenum = flare5;
	}
	if( gun_1 == 5 )
	{
		piecenum = flare6;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode rocket1 type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode rocket1 type NOHEATCLOUD;
		explode rocket2 type NOHEATCLOUD;
		explode rocket3 type NOHEATCLOUD;
		explode rocket6 type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode rocket1 type SHATTER | BITMAP1;
		explode body type NOHEATCLOUD | NOHEATCLOUD;
		explode rocket1 type FALL | BITMAP1;
		explode rocket2 type FALL | NOHEATCLOUD;
		explode rocket3 type FALL | NOHEATCLOUD;
		explode rocket6 type FALL | NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode rocket1 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode body type NOHEATCLOUD | NOHEATCLOUD;
	explode rocket1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rocket2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rocket3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rocket6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type NOHEATCLOUD;
	explode sleeve type NOHEATCLOUD;
}
