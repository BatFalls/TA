#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, tower, turret, turret2, ammo1, ammo2, ammo3, ammo4, flare1,
       flare2, arm1, arm2, wake1, wake2, wake3, wake4;

static-var  gun_1, Static_Var_2, Static_Var_3;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from ammo1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Tangue(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Func_Var_1 = -18;
	Func_Var_2 = -18;
	while( TRUE )
	{
		while( get ABS(Func_Var_2) < 238 )
		{
			Func_Var_3 = 263 - get ABS(Func_Var_2);
			turn base to x-axis Func_Var_2 speed Func_Var_3 * <0.027473>;
			turn base to z-axis Func_Var_2 speed Func_Var_3 * <0.027473>;
			wait-for-turn base around x-axis;
			wait-for-turn base around z-axis;
			Func_Var_2 = Func_Var_2 + Func_Var_1;
		}
		Func_Var_1 = 0 - Func_Var_1;
		Func_Var_2 = Func_Var_2 + Func_Var_1 + Func_Var_1;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	gun_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 5000;
	start-script SmokeUnit();
	start-script Tangue();	
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	//turn arm1 to z-axis <-25.000000> speed <40.000000>;
	//turn arm2 to z-axis <50.000000> speed <80.000000>;
	//turn turret2 to z-axis <-25.000000> speed <80.000000>;
	turn turret to y-axis heading speed <100.000000>;
	turn turret2 to x-axis <0.0> - pitch speed <100.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret2 around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		show flare1;
		sleep 200;
		hide flare1;
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		show flare2;
		Static_Var_2 = 1;
		move ammo1 to z-axis [-5.000000] speed [5.000000];
		sleep 200;
		hide flare2;
		wait-for-move ammo1 along z-axis;
		move ammo1 to y-axis [-2.000000] speed [2.000000];
		move ammo4 to y-axis [-2.000000] speed [2.000000];
		move ammo2 to y-axis [2.000000] speed [2.000000];
		move ammo3 to y-axis [2.000000] speed [2.000000];
		wait-for-move ammo3 along y-axis;
		move ammo1 to y-axis [0.000000] now;
		move ammo2 to y-axis [0.000000] now;
		move ammo3 to y-axis [0.000000] now;
		move ammo4 to y-axis [0.000000] now;
		move ammo1 to z-axis [0.000000] now;
		Static_Var_2 = 0;
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	explode ammo1 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode ammo2 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode ammo3 type NOHEATCLOUD | FALL | SMOKE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode tower type NOHEATCLOUD;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (corpsetype);
	}
	corpsetype = 3;
	return (corpsetype);
}
