#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, mainturret, flare1, launcher1, turret1, flare2, launcher2, turret2, aim;

static-var gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn mainturret to y-axis heading speed <80.>;
	wait-for-turn mainturret around y-axis;
	return (1);
}

FirePrimary()
{
	if (gun_1 == 0)
	{
		move launcher1 to z-axis [-2.] speed [200.];
		emit-sfx 256 | 3 from flare1;
		sleep 250;
		move launcher1 to z-axis [0.] speed [3.];
	}
	if (gun_1 == 1)
	{
		move launcher2 to z-axis [-2.] speed [200.];
		emit-sfx 256 | 3 from flare2;
		sleep 250;
		move launcher2 to z-axis [0.] speed [3.];
	}
	++gun_1;
	if (gun_1 == 2)
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aim;
}

QueryPrimary(piecenum)
{
	if(gun_1 == 0)
	{
		piecenum = flare1;
	}
	if(gun_1 == 1)
	{
		piecenum = flare2;
	}	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD | SHATTER;
		explode launcher1 type NOHEATCLOUD | SHATTER;
		explode launcher2 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD | SHATTER;
		explode launcher1 type NOHEATCLOUD | SHATTER;
		explode launcher2 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD | SHATTER;
	explode launcher1 type NOHEATCLOUD | SHATTER;
	explode launcher2 type NOHEATCLOUD | SHATTER ;
	return (corpsetype);
}
