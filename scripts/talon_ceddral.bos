#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  sleeves, flare1, flare2, flare3, base, body, wing1, wing2, turret;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, gun_1;


activatescr()
{
	if( TRUE )
	{
		turn wing1 to z-axis <0.> speed <25.>;
		turn wing2 to z-axis <0.> speed <25.>;
		sleep 1000;
	}
	sleep 23;
}

deactivatescr()
{
	if( TRUE )
	{
		turn wing1 to z-axis <-20.> speed <35.>;
		turn wing2 to z-axis <20.> speed <35.>;
		sleep 1000;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_3 = 1;
	Static_Var_4 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_4 )
	{
		Static_Var_3 = requestedstate;
		return (0);
	}
	Static_Var_4 = 1;
	currentstate = Static_Var_3;
	Static_Var_3 = requestedstate;
	while( Static_Var_3 != currentstate )
	{
		if( Static_Var_3 == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( Static_Var_3 == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	Static_Var_4 = 0;
}

Create()
{
	turn wing1 to z-axis <20.> now;
	turn wing2 to z-axis <-20.> now;
	gun_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

RestoreAfterDelay()
{
	sleep 1000;
	turn turret to y-axis <0.> speed <100.>;
	turn sleeves to x-axis <0.> speed <100.>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <100.>;
	turn sleeves to x-axis <0.> - pitch speed <100.>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{

	++gun_1;
	if (gun_1 == 3)
	{
		gun_1 = 0;
	}
	sleep 100;
}

QueryPrimary(piecenum)
{
	if (gun_1 == 0)
	{
		piecenum = flare1;
	}
	if (gun_1 == 1)
	{
		piecenum = flare2;
	}
	if (gun_1 == 2)
	{
		piecenum = flare3;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
		corpsetype = 3;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeves type NOHEATCLOUD;
		explode wing1 type NOHEATCLOUD;
		explode wing2 type NOHEATCLOUD;
		return (corpsetype);
}
