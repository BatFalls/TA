#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, engine, leg11, leg12, leg21, leg22, leg31, leg32, 
		leg41, leg42, leg51, leg52, leg61, leg62,
		msl1, msl2, msl11, msl12, msl13, msl14, msl21, msl22, msl23, msl24, 
		turret, flare, aimmsl1, aimmsl2, shield_pos;

static-var  bMoving, bAiming, msl_1, msl_2, shield_onoff;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_MOVE			16

Shield()
{
	shield_onoff = !shield_onoff;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 66 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 66 | 1;
			}
			emit-sfx smoketype from body;
			sleep 50;
			emit-sfx smoketype from turret;
			sleep 50;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	bMoving = TRUE;
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg21 to y-axis <6.000000> speed <39.000000>;
			turn leg21 to z-axis <0.000000> speed <27.000000>;
			turn leg41 to y-axis <-6.000000> speed <27.000000>;
			turn leg61 to y-axis <0.000000> speed <39.000000>;
			turn leg61 to z-axis <32.500000> speed <39.000000>;
			turn leg11 to y-axis <0.000000> speed <39.000000>;
			turn leg11 to z-axis <-32.500000> speed <24.000000>;
			turn leg31 to y-axis <-6.000000> speed <39.000000>;
			turn leg31 to z-axis <0.000000> speed <39.000000>;
			turn leg51 to y-axis <6.000000> speed <27.000000>;
			turn leg22 to z-axis <0.000000> speed <27.000000>;
			turn leg62 to z-axis <-35.100000> speed <24.000000>;
			turn leg12 to z-axis <35.100000> speed <24.000000>;
			turn leg32 to z-axis <0.000000> speed <27.000000>;
			sleep 300;
		}
		if( bMoving )
		{
			turn leg21 to y-axis <0.000000> speed <0.000000>;
			turn leg41 to y-axis <11.24763> speed <39.000000>;
			turn leg41 to z-axis <35.100000> speed <27.000000>;
			turn leg61 to y-axis <12.500000> speed <39.000000>;
			turn leg61 to z-axis <35.100000> speed <24.000000>;
			turn leg11 to y-axis <-12.500000> speed <39.000000>;
			turn leg11 to z-axis <-35.100000> speed <24.000000>;
			turn leg31 to y-axis <0.000000> speed <39.000000>;
			turn leg51 to y-axis <12.500000> speed <39.000000>;
			turn leg51 to z-axis <-35.100000> speed <24.000000>;
			turn leg42 to z-axis <-8.115385> speed <24.000000>;
			turn leg62 to z-axis <-8.115385> speed <24.000000>;
			turn leg12 to z-axis <8.115385> speed <24.000000>;
			turn leg52 to z-axis <8.115385> speed <24.000000>;
			sleep 300;
		}
		if( bMoving )
		{
			turn leg21 to y-axis <-6.000000> speed <39.000000>;
			turn leg41 to y-axis <0.000000> speed <39.000000>;
			turn leg41 to z-axis <32.500000> speed <24.000000>;
			turn leg61 to y-axis <6.000000> speed <39.000000>;
			turn leg61 to z-axis <0.000000> speed <27.000000>;
			turn leg11 to y-axis <-6.000000> speed <39.000000>;
			turn leg11 to z-axis <0.000000> speed <27.000000>;
			turn leg31 to y-axis <6.000000> speed <39.000000>;
			turn leg51 to y-axis <0.000000> speed <39.000000>;
			turn leg51 to z-axis <-32.500000> speed <24.000000>;
			turn leg42 to z-axis <-35.100000> speed <24.000000>;
			turn leg62 to z-axis <0.000000> speed <27.000000>;
			turn leg12 to z-axis <0.000000> speed <27.000000>;
			turn leg52 to z-axis <35.100000> speed <24.000000>;
			sleep 300;
		}
		if( bMoving )
		{
			turn base to x-axis <0.000000> speed <24.000000>;
			turn base to y-axis <0.000000> speed <27.000000>;
			turn leg21 to y-axis <-12.500000> speed <39.000000>;
			turn leg21 to z-axis <35.100000> speed <24.000000>;
			turn leg41 to y-axis <12.500000> speed <39.000000>;
			turn leg41 to z-axis <35.100000> speed <24.000000>;
			turn leg61 to y-axis <0.000000> speed <39.000000>;
			turn leg11 to y-axis <0.000000> speed <39.000000>;
			turn leg31 to y-axis <12.500000> speed <39.000000>;
			turn leg31 to z-axis <-35.100000> speed <24.000000>;
			turn leg51 to y-axis <-12.500000> speed <39.000000>;
			turn leg51 to z-axis <-16.247253> speed <27.000000>;
			turn leg22 to z-axis <-8.115385> speed <24.000000>;
			turn leg42 to z-axis <-8.115385> speed <24.000000>;
			turn leg32 to z-axis <8.115385> speed <24.000000>;
			turn leg52 to z-axis <8.115385> speed <24.000000>;
			sleep 300;
		}
		if( bMoving )
		{
			turn base to x-axis <0.000000> speed <27.000000>;
			turn leg21 to y-axis <0.000000> speed <39.000000>;
			turn leg21 to z-axis <32.500000> speed <24.000000>;
			turn leg41 to y-axis <7.000000> speed <39.000000>;
			turn leg41 to z-axis <0.000000> speed <27.000000>;
			turn leg61 to y-axis <-7.000000> speed <39.000000>;
			turn leg11 to y-axis <7.000000> speed <39.000000>;
			turn leg31 to y-axis <0.000000> speed <39.000000>;
			turn leg31 to z-axis <-32.500000> speed <24.000000>;
			turn leg51 to y-axis <-7.000000> speed <39.000000>;
			turn leg51 to z-axis <0.000000> speed <27.000000>;
			turn leg22 to z-axis <-16.24773> speed <24.000000>;
			turn leg42 to z-axis <0.000000> speed <27.000000>;
			turn leg32 to z-axis <16.24773> speed <24.000000>;
			turn leg52 to z-axis <0.000000> speed <27.000000>;
			sleep 300;
		}
		if( bMoving )
		{
			turn leg21 to y-axis <12.500000> speed <39.000000>;
			turn leg21 to z-axis <16.24773> speed <24.000000>;
			turn leg41 to y-axis <0.000000> speed <39.000000>;
			turn leg61 to y-axis <-12.500000> speed <39.000000>;
			turn leg61 to z-axis <16.24773> speed <27.000000>;
			turn leg11 to y-axis <12.500000> speed <39.000000>;
			turn leg11 to z-axis <-16.24773> speed <27.000000>;
			turn leg31 to y-axis <-12.500000> speed <39.000000>;
			turn leg31 to z-axis <-16.24773> speed <27.000000>;
			turn leg51 to y-axis <0.000000> speed <39.000000>;
			turn leg22 to z-axis <-8.115385> speed <24.000000>;
			turn leg62 to z-axis <-8.115385> speed <24.000000>;
			turn leg12 to z-axis <8.115385> speed <24.000000>;
			turn leg32 to z-axis <8.115385> speed <24.000000>;
			sleep 300;
		}
	}
	turn leg21 to y-axis <0.000000> speed <39.000000>;
	turn leg21 to z-axis <0.000000> speed <27.000000>;
	turn leg41 to y-axis <0.000000> speed <39.000000>;
	turn leg41 to z-axis <0.000000> speed <27.000000>;
	turn leg61 to y-axis <0.000000> speed <39.000000>;
	turn leg61 to z-axis <0.000000> speed <27.000000>;
	turn leg11 to y-axis <0.000000> speed <39.000000>;
	turn leg11 to z-axis <0.000000> speed <27.000000>;
	turn leg31 to y-axis <0.000000> speed <39.000000>;
	turn leg31 to z-axis <0.000000> speed <27.000000>;
	turn leg51 to y-axis <0.000000> speed <39.000000>;
	turn leg51 to z-axis <0.000000> speed <27.000000>;
	turn leg12 to z-axis <0.000000> speed <27.000000>;
	turn leg32 to z-axis <0.000000> speed <27.000000>;
	turn leg52 to z-axis <0.000000> speed <27.000000>;
	turn leg22 to z-axis <0.000000> speed <27.000000>;
	turn leg42 to z-axis <0.000000> speed <27.000000>;
	turn leg62 to z-axis <0.000000> speed <27.000000>;
	sleep 210;
}


StopMoving()
{
	bMoving = FALSE;
}

Create()
{
	turn msl1 to z-axis <15.000000> now;
	turn msl2 to z-axis <-15.000000> now;
	turn msl1 to y-axis <15.000000> now;
	turn msl2 to y-axis <-15.000000> now;
	shield_onoff = 1;
	msl_1 = 0;	
	msl_2 = 0;	
	bMoving = FALSE;
	bAiming = FALSE;
	//
	//	
	start-script SmokeUnit();
}

RestorePrimary()
{
	sleep 5000;
	bAiming = FALSE;
	turn turret to y-axis <0.000000> speed <50.000000>;
}


AimFromSecondary(piecenum)
{
	piecenum = aimmsl1;
}

AimFromTertiary(piecenum)
{
	piecenum = aimmsl2;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	return (1);
}

QuerySecondary(piecenum)
{
	if( msl_1 == 0 )
	{
		piecenum = msl11;
	}
	if( msl_1 == 1 )
	{
		piecenum = msl12;
	}
	if( msl_1 == 2 )
	{
		piecenum = msl13;
	}
	if( msl_1 == 3 )
	{
		piecenum = msl14;
	}
}

QueryTertiary(piecenum)
{
	if( msl_2 == 0 )
	{
		piecenum = msl21;
	}
	if( msl_2 == 1 )
	{
		piecenum = msl22;
	}
	if( msl_2 == 2 )
	{
		piecenum = msl23;
	}
	if( msl_2 == 3 )
	{
		piecenum = msl24;
	}
}

FireSecondary()
{
	++msl_1;
	if( msl_1 >= 4 )
	{
		msl_1 = 0;
	}
}

FireTertiary()
{
	++msl_2;
	if( msl_2 >= 4 )
	{
		msl_2 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	turn turret to y-axis heading speed <75.000000>;
	wait-for-turn turret around y-axis;
	start-script RestorePrimary();
	return (1);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}


AimWeapon4(heading, pitch)
{
	return (shield_onoff);
}

AimFromWeapon4(piecenum)
{
	piecenum = shield_pos;
}

QueryWeapon4(piecenum)
{
	piecenum = shield_pos;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | SHATTER;
		explode leg41 type NOHEATCLOUD | SHATTER;
		explode leg61 type NOHEATCLOUD | SHATTER;
		explode leg12 type NOHEATCLOUD | SHATTER;
		explode leg42 type NOHEATCLOUD | SHATTER;
		explode leg52 type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | SHATTER;
	explode leg41 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode leg61 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode leg12 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode leg42 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	explode leg52 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT | SHATTER;
	return (corpsetype);
}
