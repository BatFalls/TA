#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, lwing, rwing, turret,
		emit1, emit2, emit3, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15;

static-var  bMoving, bAiming, shieldonoff, gun_1;

// Signal definitions
#define SIG_AIM_1				2
#define SIG_AIM_2				4
#define SIG_AIM_3				8

lighting()
{
	While ( TRUE )
	{
		
		if (!bAiming)
		{
			spin emit3 around y-axis speed <10.>;
			emit-sfx 1024 + 0 from q11;
			emit-sfx 1024 + 0 from q12;
			emit-sfx 1024 + 0 from q13;
			emit-sfx 1024 + 0 from q14;
			emit-sfx 1024 + 0 from q15;
			sleep 2500;
		}
		sleep 250;
	}	
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 135;
	}
	
	start-script lighting();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide q1;
	hide q2;
	hide q3;
	hide q4;
	hide q5;
	hide q6;
	hide q7;
	hide q8;
	hide q9;
	hide q10;
	hide q11;
	hide q12;
	hide q13;
	hide q14;
	hide q15;	
	bAiming = 0;
	gun_1 = 1;
	start-script Smokeunit();
}

activatescr()
{
	if( TRUE )
	{
		spin emit1 around y-axis speed <500.>;
		spin emit2 around y-axis speed <-150.>;
		
		emit-sfx 1024 + 0 from q1;
		sleep 25;
		emit-sfx 1024 + 0 from q2;
		sleep 25;
		emit-sfx 1024 + 0 from q3;
		sleep 25;
		emit-sfx 1024 + 0 from q4;
		sleep 25;
		emit-sfx 1024 + 0 from q5;
		sleep 25;
		emit-sfx 1024 + 0 from q6;
		sleep 25;
		emit-sfx 1024 + 0 from q7;
		sleep 25;
		emit-sfx 1024 + 0 from q8;
		sleep 25;
		emit-sfx 1024 + 0 from q9;
		sleep 25;
		emit-sfx 1024 + 0 from q10;		
	}
	sleep 225;
}

deactivatescr()
{
	if( TRUE )
	{
		stop-spin emit1 around y-axis;
		stop-spin emit2 around y-axis;
	}
}

RestoreAfterDelay()
{
	sleep 6000;
	bAiming = 0;
	start-script deactivatescr();
	turn turret to y-axis <0.> speed <500.000000>;
}

AimFromPrimary(PieceNum)
{
	PieceNum = turret;
}

AimPrimary(heading, Pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	bAiming = 1;
	start-script activatescr();
	turn turret to y-axis heading speed <500.000000>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FirePrimary()
{
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
		
		emit-sfx 1024 + 0 from q2;
		gun_1 = 2;
		sleep 10;
		
		emit-sfx 1024 + 0 from q3;
		gun_1 = 3;
		sleep 10;
		
		emit-sfx 1024 + 0 from q4;
		gun_1 = 4;
		sleep 10;
		
		emit-sfx 1024 + 0 from q5;
		gun_1 = 5;
		sleep 10;
		
		emit-sfx 1024 + 0 from q6;
		gun_1 = 6;
		sleep 10;
		
		emit-sfx 1024 + 0 from q7;
		gun_1 = 7;
		sleep 10;
		
		emit-sfx 1024 + 0 from q8;
		gun_1 = 8;
		sleep 10;
		
		emit-sfx 1024 + 0 from q9;
		gun_1 = 9;
		sleep 10;
		
		emit-sfx 1024 + 0 from q10;
		gun_1 = 10;
		sleep 10;
		
		emit-sfx 1024 + 0 from q1;
		gun_1 = 1;
		sleep 10;
}

QueryPrimary(PieceNum)
{
	if( gun_1 == 1 )
	{
		piecenum = q1;
	}
	if( gun_1 == 2 )
	{
		piecenum = q2;
	}
	if( gun_1 == 3 )
	{
		piecenum = q3;
	}
	if( gun_1 == 4 )
	{
		piecenum = q4;
	}
	if( gun_1 == 5 )
	{
		piecenum = q5;
	}
	if( gun_1 == 6 )
	{
		piecenum = q6;
	}	
	if( gun_1 == 7 )
	{
		piecenum = q7;
	}
	if( gun_1 == 8 )
	{
		piecenum = q8;
	}
	if( gun_1 == 9 )
	{
		piecenum = q9;
	}
	if( gun_1 == 10 )
	{
		piecenum = q10;
	}
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(severity, corpseType)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode lwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	explode rwing type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT | FIRE;
	return (corpsetype);
}
