#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  Base, Body, Door1, Door2, NanoTower1A, NanoTower1B, NanoDoor1, NanoGun1A,
       NanoGun1B, Spray1, NanoGun2A, NanoGun2B, Spray2, NanoTower2A, NanoTower2B, NanoDoor2,
       NanoGun3A, NanoGun3B, Spray3, NanoGun4A, NanoGun4B, Spray4, NanoPad, Nanodoor1b;

static-var  statechg_DesiredState, statechg_StateChanging, spray ;

// Signal definitions
#define SIG_ACTIVATE			2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 4 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from Base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from NanoDoor1;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from NanoGun1A;
			}
			if( Func_Var_4 == 4 )
			{
				emit-sfx smoketype from NanoGun4A;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

activatescr()
{
	if( TRUE )
	{
		move Door1 to x-axis [4.000000] speed [2.000000];
		move Door2 to x-axis [-4.000000] speed [2.000000];
		wait-for-move Door2 along x-axis;
	}
	if( TRUE )
	{
		move Door1 to x-axis [17.00000] speed [4.500000];
		move Door2 to x-axis [-17.00000] speed [4.500000];
		wait-for-move Door2 along x-axis;
	}
	if( TRUE )
	{
		turn NanoTower1A to x-axis <-20.000000> speed <15.000000>;
		turn NanoTower2A to x-axis <-20.000000> speed <15.000000>;
		wait-for-turn NanoTower2A around x-axis;
		turn NanoTower1A to x-axis <-90.000000> speed <10.000000>;
		turn NanoTower2A to x-axis <-90.000000> speed <10.000000>;
		wait-for-turn NanoTower2A around x-axis;
	}
	if( TRUE )
	{
		move NanoTower1B to z-axis [-2.000000] speed [1.00000];
		move NanoTower2B to z-axis [-2.000000] speed [1.00000];
		wait-for-move NanoTower2B along z-axis;
		move NanoTower1B to z-axis [-10.000000] speed [5.100000];
		move NanoTower2B to z-axis [-10.000000] speed [5.100000];
		wait-for-move NanoTower2B along z-axis;
	}
	if( TRUE )
	{
		sleep 500;
	}
	if( TRUE )
	{
		turn NanoDoor1 to z-axis <85.000000> speed <90.000000>;
		turn NanoDoor2 to z-axis <-85.000000> speed <90.000000>;
		move NanoGun1A to x-axis [10.00000] speed [9.500000];
		move NanoGun2A to x-axis [10.00000] speed [9.500000];
		move NanoGun3A to x-axis [-10.00000] speed [9.500000];
		move NanoGun4A to x-axis [-10.00000] speed [9.500000];
		move NanoGun1B to x-axis [10.00000] speed [9.000000];
		move NanoGun2B to x-axis [10.00000] speed [9.000000];
		move NanoGun3B to x-axis [-10.00000] speed [9.000000];
		move NanoGun4B to x-axis [-10.00000] speed [9.000000];
		wait-for-turn NanoDoor2 around z-axis;
	}
	if( TRUE )
	{
		turn NanoDoor1 to z-axis <90.000000> speed <18.000000>;
		turn NanoDoor2 to z-axis <-90.000000> speed <18.000000>;
		wait-for-turn NanoDoor2 around z-axis;
	}
	if( TRUE )
	{
		turn NanoGun1B to z-axis <-95.000000> speed <140.000000>;
		turn NanoGun2B to z-axis <-95.000000> speed <140.000000>;
		turn NanoGun3B to z-axis <95.000000> speed <140.000000>;
		turn NanoGun4B to z-axis <95.000000> speed <140.000000>;
		wait-for-turn NanoGun4B around z-axis;
	}
}

deactivatescr()
{
	if( TRUE )
	{
		turn NanoGun1B to z-axis <0.000000> speed <120.000000>;
		turn NanoGun2B to z-axis <0.000000> speed <120.000000>;
		turn NanoGun3B to z-axis <0.000000> speed <120.000000>;
		turn NanoGun4B to z-axis <0.000000> speed <120.000000>;
		wait-for-turn NanoGun4B around z-axis;
	}
	if( TRUE )
	{
		turn NanoDoor1 to z-axis <85.000000> speed <12.000000>;
		turn NanoDoor2 to z-axis <-85.000000> speed <12.000000>;
		move NanoGun1A to x-axis [0.000000] speed [8.500000];
		move NanoGun2A to x-axis [0.000000] speed [8.500000];
		move NanoGun3A to x-axis [0.000000] speed [8.500000];
		move NanoGun4A to x-axis [0.000000] speed [8.500000];
		move NanoGun1B to x-axis [0.000000] speed [8.000000];
		move NanoGun2B to x-axis [0.000000] speed [8.000000];
		move NanoGun3B to x-axis [0.000000] speed [8.000000];
		move NanoGun4B to x-axis [0.000000] speed [8.000000];
		wait-for-turn NanoDoor2 around z-axis;
	}
	if( TRUE )
	{
		turn NanoDoor1 to z-axis <0.000000> speed <60.000000>;
		turn NanoDoor2 to z-axis <0.000000> speed <60.000000>;
		wait-for-turn NanoDoor2 around z-axis;
		sleep 400;
	}
	if( TRUE )
	{
		move NanoTower1B to z-axis [-10.000000] speed [1.200000];
		move NanoTower2B to z-axis [-10.000000] speed [1.200000];
		wait-for-move NanoTower2B along z-axis;
	}
	if( TRUE )
	{
		move NanoTower1B to z-axis [0.000000] speed [5.0000];
		move NanoTower2B to z-axis [0.000000] speed [5.0000];
		wait-for-move NanoTower2B along z-axis;
	}

	if( TRUE )
	{
		turn NanoTower1A to x-axis <0.000000> speed <5.00000>;
		turn NanoTower2A to x-axis <0.000000> speed <5.00000>;
		wait-for-turn NanoTower2A around x-axis;
	}
	if( TRUE )
	{
		move Door1 to x-axis [8.00000] speed [2.800000];
		move Door2 to x-axis [-8.00000] speed [2.800000];
		wait-for-move Door2 along x-axis;
	}
	if( TRUE )
	{
		move Door1 to x-axis [0.000000] speed [4.00000];
		move Door2 to x-axis [0.000000] speed [4.00000];
		wait-for-move Door2 along x-axis;
	}
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;

}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	spray  = 1;
	call-script InitState();
	start-script SmokeUnit();
}

QueryBuildInfo(piecenum)
{
	piecenum = NanoPad;
}

QueryNanoPiece(piecenum)
{
	if( spray  == 1 )
	{
		piecenum = Spray1;
	}
	if( spray  == 2 )
	{
		piecenum = Spray2;
	}
	if( spray  == 3 )
	{
		piecenum = Spray3;
	}
	if( spray  == 4 )
	{
		piecenum = Spray4;
	}
	++spray ;
	if( spray  > 4 )
	{
		spray  = 1;
	}
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	set-signal-mask 0;
	start-script RequestState(1);
}

StartBuilding()
{
	sleep 50;
}

StopBuilding()
{
	sleep 50;
}

SweetSpot(piecenum)
{
	piecenum = Base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode Base type NOHEATCLOUD;
		explode Body type NOHEATCLOUD;
		explode Door1 type NOHEATCLOUD;
		explode Door2 type NOHEATCLOUD;
		explode NanoTower1A type NOHEATCLOUD;
		explode NanoTower1B type NOHEATCLOUD;
		explode NanoDoor1 type NOHEATCLOUD;
		explode NanoGun1A type NOHEATCLOUD;
		explode NanoGun1B type NOHEATCLOUD;
		explode Spray1 type NOHEATCLOUD;
		explode NanoGun2A type NOHEATCLOUD;
		explode NanoGun2B type NOHEATCLOUD;
		explode Spray2 type NOHEATCLOUD;
		explode NanoTower2A type NOHEATCLOUD;
		explode NanoTower2B type NOHEATCLOUD;
		explode NanoDoor2 type NOHEATCLOUD;
		explode NanoGun3A type NOHEATCLOUD;
		explode NanoGun3B type NOHEATCLOUD;
		explode Spray3 type NOHEATCLOUD;
		explode NanoGun4A type NOHEATCLOUD;
		explode NanoGun4B type NOHEATCLOUD;
		explode Spray4 type NOHEATCLOUD;
		explode NanoPad type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode Base type SHATTER | NOHEATCLOUD;
		explode Body type SHATTER | NOHEATCLOUD;
		explode Door1 type SHATTER | NOHEATCLOUD;
		explode Door2 type SHATTER | NOHEATCLOUD;
		explode NanoTower1A type SHATTER | NOHEATCLOUD;
		explode NanoTower1B type SHATTER | NOHEATCLOUD;
		explode NanoDoor1 type SHATTER | NOHEATCLOUD;
		explode NanoGun1A type SHATTER | NOHEATCLOUD;
		explode NanoGun1B type SHATTER | NOHEATCLOUD;
		explode Spray1 type SHATTER | NOHEATCLOUD;
		explode NanoGun2A type SHATTER | NOHEATCLOUD;
		explode NanoGun2B type SHATTER | NOHEATCLOUD;
		explode Spray2 type SHATTER | NOHEATCLOUD;
		explode NanoTower2A type SHATTER | NOHEATCLOUD;
		explode NanoTower2B type SHATTER | NOHEATCLOUD;
		explode NanoDoor2 type SHATTER | NOHEATCLOUD;
		explode NanoGun3A type SHATTER | NOHEATCLOUD;
		explode NanoGun3B type SHATTER | NOHEATCLOUD;
		explode Spray3 type SHATTER | NOHEATCLOUD;
		explode NanoGun4A type SHATTER | NOHEATCLOUD;
		explode NanoGun4B type SHATTER | NOHEATCLOUD;
		explode Spray4 type SHATTER | NOHEATCLOUD;
		explode NanoPad type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode Base type SHATTER | NOHEATCLOUD;
		explode Body type SHATTER | NOHEATCLOUD;
		explode Door1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode Door2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoTower1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoTower1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoDoor1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode Spray1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode Spray2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoTower2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoTower2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoDoor2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun3A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun3B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode Spray3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun4A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoGun4B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode Spray4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode NanoPad type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode Base type SHATTER | NOHEATCLOUD;
	explode Body type SHATTER | NOHEATCLOUD;
	explode Door1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode Door2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoTower1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoTower1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoDoor1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun1A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun1B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode Spray1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode Spray2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoTower2A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoTower2B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoDoor2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun3A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun3B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode Spray3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun4A type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoGun4B type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode Spray4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode NanoPad type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
