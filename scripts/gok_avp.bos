#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, stand1, lathe1, spray1, pad, stand2,
       lathe2, spray2, gate1, gate2, generator1, generator2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from generator1;
			emit-sfx smoketype from generator2;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_1 = 0;
	start-script SmokeUnit();
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = spray1;
		Static_Var_1 = 1;
		return (0);
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = spray2;
		Static_Var_1 = 0;
		return (0);
	}
}

Activate()
{
	signal 2;
	set INBUILDSTANCE to 1;
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

Deactivate()
{
	signal 2;
	set INBUILDSTANCE to 0;
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

StartBuilding()
{
}

StopBuilding()
{
}

QueryBuildInfo(piecenum)
{
	piecenum = pad;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode stand1 type NOHEATCLOUD;
		explode stand2 type NOHEATCLOUD;
		explode gate1 type NOHEATCLOUD;
		explode gate2 type NOHEATCLOUD;
		explode generator1 type NOHEATCLOUD;
		explode generator2 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD;
	explode stand1 type SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode stand2 type SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode gate1 type FALL | EXPLODE_ON_HIT | FALL | SMOKE;
	explode gate2 type FALL | EXPLODE_ON_HIT | FALL | SMOKE;
	explode generator1 type SMOKE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode generator2 type FALL | NOHEATCLOUD;
	return (corpsetype);
}
