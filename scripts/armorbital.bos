#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, shell1, turret, shell2, barrel, fire, sleeves, wheel1, wheel2, bloc, entrance;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
			emit-sfx smoketype from entrance;
			emit-sfx smoketype from sleeves;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

ReloadShell()
{
	if( TRUE )
	{
		show shell1;
		move shell1 to z-axis [-45.000000] speed [200.000000];
		wait-for-move shell1 along z-axis;
		hide shell1;
		sleep 150;
		move shell1 to z-axis [0.000000] now;
	}
}

Create()
{
	hide fire;
	Static_Var_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <45.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <15.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FirePrimary()
{
	//hide shell2;
	move shell2 to z-axis [-5.000000] speed [50.000000];
	start-script ReloadShell();

	emit-sfx 1024 + 0 from fire;
	sleep 150;
	
	show shell2;
	move shell2 to z-axis [0.000000] speed [5.000000];
	sleep 100;
}

AimFromPrimary(piecenum)
{
	piecenum = sleeves;
}

QueryPrimary(piecenum)
{
	piecenum = fire;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode wheel1 type NOHEATCLOUD;
		explode wheel2 type NOHEATCLOUD;
		explode entrance type NOHEATCLOUD;
		explode bloc type NOHEATCLOUD;
		explode sleeves type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode shell1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode shell2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode wheel1 type NOHEATCLOUD | FALL;
		explode wheel2 type NOHEATCLOUD | FALL;
		explode entrance type NOHEATCLOUD;
		explode bloc type NOHEATCLOUD | FALL;
		explode sleeves type NOHEATCLOUD | FALL;
		explode barrel type NOHEATCLOUD | FALL;
		explode shell1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode shell2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode wheel1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode entrance type NOHEATCLOUD;
	explode bloc type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeves type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode shell1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode shell2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
