#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, beam1, beam2, beam3, flaga, flagb, flagc, gem, side1, side2, side3;

static-var  Spray;

ControlUnit(Func_Var_1, Func_Var_2)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	sleep 100;
	while( TRUE )
	{
		turn flaga to x-axis <5.> speed <10.>;
		turn flagb to x-axis <5.> speed <10.>;
		turn flagc to x-axis <-10.> speed <10.>;
		turn flaga to x-axis <5.> speed <10.>;
		turn flagb to x-axis <-10.> speed <20.>;
		turn flagc to x-axis <5.> speed <10.>;
		if( Rand( 1, 3 ) <= 2 )
		{
			turn flaga to x-axis <5.> speed <10.>;
			turn flagb to x-axis <-10.> speed <20.>;
			turn flagc to x-axis <5.> speed <10.>;
			turn flaga to x-axis <-10.> speed <20.>;
			turn flagb to x-axis <5.> speed <10.>;
			turn flagc to x-axis <5.> speed <10.>;
			if( Rand( 1, 3 ) <= 1 )
			{
				turn flaga to x-axis <-10.> speed <20.>;
				turn flagb to x-axis <5.> speed <10.>;
				turn flagc to x-axis <5.> speed <10.>;
				turn flaga to x-axis <5.> speed <10.>;
				turn flagb to x-axis <5.> speed <10.>;
				turn flagc to x-axis <-10.> speed <20.>;
			}
		}
		sleep 500;
	}	
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script ControlUnit();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
}

StartBuilding()
{
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = beam1;
	}
	if( spray == 1 )
	{
		piecenum = beam2;
	}
	if( spray == 2 )
	{
		piecenum = beam3;
	}
	++spray;
	if( spray == 3 )
	{
		spray = 0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 40 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode side1 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode side2 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode side3 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode side1 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode side2 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode side3 type NOHEATCLOUD | SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
