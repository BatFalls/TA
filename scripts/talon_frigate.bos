#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece   aimpoint, flare1, flare2, flare3,
		base, body, drone1, drone2, drone3, 
		dronebase, flare, wake1, wake2;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_MOVE			16

Activate()
{
	//move body to y-axis [-10] speed [20];
}

Deactivate()
{
	//move body to y-axis [0] speed [20];
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 3 from wake1;
		emit-sfx 3 from wake2;
		sleep 120;
	}
}


Create()
{
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{
	++gun_1;
	if (gun_1 == 3)
	{
		gun_1=0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = aimpoint;
}

QueryPrimary(piecenum)
{
	piecenum = aimpoint;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	return (1);
}

AimFromSecondary(piecenum)
{
	piecenum = flare;
}

QuerySecondary(piecenum)
{
	piecenum = flare ;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode drone1 type NOHEATCLOUD;
		explode drone2 type NOHEATCLOUD;
		explode drone3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | FALL;
		explode drone1 type NOHEATCLOUD;
		explode drone2 type NOHEATCLOUD;
		explode drone3 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode drone1 type NOHEATCLOUD;
	explode drone2 type NOHEATCLOUD;
	explode drone3 type NOHEATCLOUD | FALL;
	return (corpsetype);
}
