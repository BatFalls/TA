#define TA

#include "sfxtype.h"
#include "exptype.h"

piece base, socle, plate, building1, building2, building3, building4, buildpad,
	spray1, spray2, spray3, spray4, p1, p2, p3, p4, p5, p6, p7, p8, body;

static-var spray, unitview, statechg_DesiredState, statechg_StateChanging, bWorking, Static_Var_1;

#define SIG_ACTIVATE		2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from building1;
			emit-sfx smoketype from building2;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

activatescr()
{
	move plate to y-axis [15.0] speed [5.0];
	spin plate around y-axis speed <5> accelerate <0.15>;
	wait-for-move plate along y-axis;
}

deactivatescr()
{
	move plate to y-axis [0.0] speed [5.0];
	spin plate around y-axis speed <0> accelerate <0.15>;
	wait-for-move plate along y-axis;
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	unitview = FALSE;
	spray = 1;
	Static_Var_1 = 800;
	call-script InitState();
	start-script SmokeUnit();
}

Demo()
{
	unitview = TRUE;
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	set-signal-mask 0;
	start-script RequestState(1);
}

StartBuilding()
{

}

StopBuilding()
{
	
}

QueryBuildInfo(piecenum)
{
	piecenum = buildpad;
}

QueryNanoPiece(piecenum)
{
	if(spray == 1)
	{
		piecenum = spray1;
	}
	if(spray == 2)
	{
		piecenum = spray2;
	}
	if(spray == 3)
	{
		piecenum = spray3;
	}
	if(spray == 4)
	{
		piecenum = spray4;
	}
	++spray;
	if(spray == 5)
	{
		spray = 1;
	}
}

SweetSpot (piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	
	explode p1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode p3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode p5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode p5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode p7 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode p8 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	
	if (severity <= 25)
		{
		corpsetype = 1;
		explode building1 type NOHEATCLOUD;
		explode building2 type NOHEATCLOUD;
		explode building3 type NOHEATCLOUD;
		explode building4 type NOHEATCLOUD;
		explode socle type NOHEATCLOUD;
		explode plate type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		return(corpsetype);
		}
	if (severity <= 50)
	{
		corpsetype = 2;
		explode building1 type NOHEATCLOUD | FALL;
		explode building2 type NOHEATCLOUD | FALL;
		explode building3 type NOHEATCLOUD | FALL;
		explode building4 type NOHEATCLOUD | FALL;
		explode socle type NOHEATCLOUD | FALL;
		explode plate type NOHEATCLOUD | FALL;
		explode body type NOHEATCLOUD;
		return(corpsetype);
		}
	corpsetype = 3;
	explode building1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode building2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode building3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode building4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode socle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode plate type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode body type NOHEATCLOUD;
	return(corpsetype);
}
