#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, saw, flare;

static-var  bMoving, bAiming, Static_Var_3, restore_delay;

// Signal definitions
#define SIG_AIM		2
#define SIG_MOVE	4

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	spin saw around y-axis speed <25.0> accelerate <20.0>;
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_AIM;
	spin saw around y-axis speed <150.0> accelerate <20.0>;
}

StopMoving()
{
	signal SIG_AIM;
	spin saw around y-axis speed <25.0> accelerate <20.0>;
}

RestoreAfterDelay()
{
	sleep 1000;
	spin saw around y-axis speed <25.0> accelerate <20.0>;
}


AimFromPrimary(piecenum)
{
	piecenum = flare;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	spin saw around y-axis speed <750>;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
		corpsetype = 3;
		corpsetype = 3;
		explode body type NOHEATCLOUD | SHATTER;
		explode saw type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
}
