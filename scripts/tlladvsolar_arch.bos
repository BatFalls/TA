#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, anglea, angleb, anglec, angled, tower,
       panels, panela, panelb, panelc, paneld,
       dish1, dish2, dish3, dish4, dish5, dish6, d1, d2, d3, d4, d5, d6, 
       dishb, dishc, disha;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, statechg_DesiredState,
            statechg_StateChanging, Static_Var_7, Static_Var_8, Static_Var_9;


HitByWeapon(anglex, anglez)
{
	signal 16;
	set-signal-mask 16;
	set ACTIVATION to 0;
	sleep 16000;
	set ACTIVATION to 1;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	Static_Var_9 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent >= 40 )
		{
			if( Static_Var_9 == 1 )
			{
				Static_Var_9 = 0;
				show anglec;
			}
		}
		if( healthpercent >= 60 )
		{
			if( Static_Var_8 == 1 )
			{
				Static_Var_8 = 0;
				show panelb;
			}
		}
		if( healthpercent >= 75 )
		{
			if( Static_Var_7 == 1 )
			{
				Static_Var_7 = 0;
				show dish1;
			}
		}
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	set ARMORED to 0;
	move anglea to z-axis [5.500000] speed [8.000000];
	move anglea to x-axis [5.500000] speed [8.000000];
	move angleb to z-axis [5.500000] speed [8.000000];
	move angleb to x-axis [-5.500000] speed [8.000000];
	move anglec to z-axis [-5.500000] speed [8.000000];
	move anglec to x-axis [-5.500000] speed [8.000000];
	move angled to z-axis [-5.500000] speed [8.000000];
	move angled to x-axis [5.500000] speed [8.000000];
	sleep 650;
	move tower to y-axis [0.000000] speed [20.000000];
	show tower;
	wait-for-move tower along y-axis;
	turn dish1 to y-axis <0.000000> speed <95.000000>;
	turn dish2 to y-axis <0.000000> speed <95.000000>;
	turn dish3 to y-axis <0.000000> speed <95.000000>;
	turn dish4 to y-axis <0.000000> speed <95.000000>;
	turn dish5 to y-axis <0.000000> speed <95.000000>;
	turn dish6 to y-axis <0.000000> speed <95.000000>;
	turn d1 to x-axis <-60.000000> speed <95.000000>;
	turn d2 to x-axis <60.000000> speed <95.000000>;
	turn d3 to x-axis <-60.000000> speed <95.000000>;
	turn d4 to x-axis <60.000000> speed <95.000000>;
	turn d5 to x-axis <-60.000000> speed <95.000000>;
	turn d6 to x-axis <60.000000> speed <95.000000>;
	move panels to y-axis [12.000000] speed [10.000000];
	wait-for-turn d1 around x-axis;
	//move panels to y-axis [10.000000] speed [8.000000];
	//wait-for-move panels along y-axis;
	turn panela to x-axis <-60.000000> speed <40.000000>;
	turn panelc to x-axis <60.000000> speed <40.000000>;
	turn panelb to z-axis <-60.000000> speed <40.000000>;
	turn paneld to z-axis <60.000000> speed <40.000000>;	
	
	sleep 750;
	Static_Var_4 = 1;
}

Stop()
{
	Static_Var_4 = 0;
	turn panela to x-axis <0.000000> speed <60.000000>;
	turn panelc to x-axis <0.000000> speed <60.000000>;
	turn panelb to z-axis <0.000000> speed <60.000000>;
	turn paneld to z-axis <0.000000> speed <60.000000>;
	wait-for-turn paneld around z-axis;
	move panels to y-axis [0.000000] speed [12.000000];
	
	wait-for-move panels along y-axis;
	
	turn d1 to x-axis <0.000000> speed <85.000000>;
	turn d2 to x-axis <0.000000> speed <85.000000>;
	turn d3 to x-axis <0.000000> speed <85.000000>;
	turn d4 to x-axis <0.000000> speed <85.000000>;
	turn d5 to x-axis <0.000000> speed <85.000000>;
	turn d6 to x-axis <0.000000> speed <85.000000>;
	sleep 100;
	
	turn dish1 to y-axis <-90.000000> speed <85.000000>;
	turn dish2 to y-axis <-90.000000> speed <85.000000>;
	turn dish3 to y-axis <-90.000000> speed <85.000000>;
	turn dish4 to y-axis <-90.000000> speed <85.000000>;
	turn dish5 to y-axis <-90.000000> speed <85.000000>;
	turn dish6 to y-axis <-90.000000> speed <85.000000>;
	wait-for-turn d1 around x-axis;
	
	move tower to y-axis [-25.000000] speed [20.000000];
	sleep 1000;
	hide tower;
	sleep 300;
	wait-for-move tower along y-axis;
	move anglea to z-axis [0.000000] speed [8.000000];
	move anglea to x-axis [0.000000] speed [8.000000];
	move angleb to z-axis [0.000000] speed [8.000000];
	move angleb to x-axis [0.000000] speed [8.000000];
	move anglec to z-axis [0.000000] speed [8.000000];
	move anglec to x-axis [0.000000] speed [8.000000];
	move angled to z-axis [0.000000] speed [8.000000];
	move angled to x-axis [0.000000] speed [8.000000];
	set ARMORED to 1;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide tower;
	Static_Var_2 = 250;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	move tower to y-axis [-25.000000] now;
	//turn panela to x-axis <90.000000> now;
	//turn panelc to x-axis <-90.000000> now;
	//turn panelb to z-axis <90.000000> now;
	//turn paneld to z-axis <-90.000000> now;
	//hide disha;
	//hide dish1;
	//hide dish2;
	
	turn panels to y-axis <30.000000> now;
	
	turn dishb to y-axis <120.000000> now;
	turn dishc to y-axis <240.000000> now;
	turn dish1 to y-axis <90.000000> now;
	turn dish2 to y-axis <90.000000> now;
	turn dish3 to y-axis <90.000000> now;
	turn dish4 to y-axis <90.000000> now;
	turn dish5 to y-axis <90.000000> now;
	turn dish6 to y-axis <90.000000> now;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode panela type NOHEATCLOUD;
		explode tower type NOHEATCLOUD;
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode panela type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode panela type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode anglea type NOHEATCLOUD | SHATTER;
	explode panela type NOHEATCLOUD;
	return (corpsetype);
}
