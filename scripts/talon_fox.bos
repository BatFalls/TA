#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, torso, ruparm, rloarm, rhand, luparm,
       lloarm, lhand, lthigh, lleg, lfoot, rthigh, rleg, rfoot,
       lathe, lathe1, lathe2;

static-var  spray, bMoving, Static_Var_2;


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move torso to y-axis [0.] speed <160.000000>;
			move ruparm to y-axis [0.] speed <170.000000>;
			move ruparm to z-axis [0.] speed <170.000000>;
			move luparm to y-axis [-0.] speed <170.000000>;
			move luparm to z-axis [0.] speed <170.000000>;
			turn torso to z-axis <-4.> speed <170.000000>;
			turn torso to z-axis <5.> speed <170.000000>;
			turn lthigh to x-axis <34.> speed <170.000000>;
			turn rthigh to x-axis <0.> speed <170.000000>;
			turn rleg to x-axis <25.> speed <170.000000>;
			turn rfoot to x-axis <-32.> speed <170.000000>;
			turn lleg to x-axis <7.> speed <170.000000>;
			turn lfoot to x-axis <-6.> speed <170.000000>;
			turn ruparm to x-axis <23.> speed <170.000000>;
			turn luparm to x-axis <-51.> speed <170.000000>;
			turn lloarm to x-axis <21.> speed <170.000000>;
			turn lhand to x-axis <36.> speed <170.000000>;
			turn rloarm to x-axis <0.> speed <170.000000>;
			turn rhand to x-axis <-6.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to y-axis [1.] speed <170.000000>;
			move ruparm to z-axis [-0.] speed <170.000000>;
			move luparm to y-axis [0.] speed <170.000000>;
			move luparm to z-axis [0.] speed <170.000000>;
			turn torso to z-axis <-2.> speed <170.000000>;
			turn torso to z-axis <2.> speed <170.000000>;
			turn lthigh to x-axis <47.> speed <170.000000>;
			turn rthigh to x-axis <7.> speed <170.000000>;
			turn rleg to x-axis <-20.> speed <170.000000>;
			turn rfoot to x-axis <17.> speed <170.000000>;
			turn lleg to x-axis <0.> speed <170.000000>;
			turn lfoot to x-axis <0.> speed <170.000000>;
			turn ruparm to x-axis <7.> speed <170.000000>;
			turn luparm to x-axis <-29.> speed <170.000000>;
			turn lloarm to x-axis <14.> speed <170.000000>;
			turn lhand to x-axis <16.> speed <170.000000>;
			turn rloarm to x-axis <4.> speed <170.000000>;
			turn rhand to x-axis <106.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to z-axis [-0.] speed <170.000000>;
			move luparm to z-axis [0.] speed <170.000000>;
			turn torso to z-axis <-1.> speed <170.000000>;
			turn torso to z-axis <-1.> speed <170.000000>;
			turn lthigh to x-axis <51.> speed <170.000000>;
			turn rthigh to x-axis <9.> speed <170.000000>;
			turn rleg to x-axis <11.> speed <170.000000>;
			turn rfoot to x-axis <-10.> speed <170.000000>;
			turn lleg to x-axis <0.> speed <170.000000>;
			turn lfoot to x-axis <18.> speed <170.000000>;
			turn luparm to x-axis <0.> speed <170.000000>;
			turn lloarm to x-axis <0.> speed <170.000000>;
			turn lhand to x-axis <0.> speed <170.000000>;
			turn rloarm to x-axis <-41.> speed <170.000000>;
			turn rhand to x-axis <143.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to z-axis [0.] speed <170.000000>;
			turn torso to z-axis <2.> speed <170.000000>;
			turn torso to z-axis <-5.> speed <170.000000>;
			turn lthigh to x-axis <1.> speed <170.000000>;
			turn rthigh to x-axis <21.> speed <170.000000>;
			turn rleg to x-axis <4.> speed <170.000000>;
			turn rfoot to x-axis <-15.> speed <170.000000>;
			turn lleg to x-axis <35.> speed <170.000000>;
			turn lfoot to x-axis <1.> speed <170.000000>;
			turn ruparm to x-axis <-18.> speed <170.000000>;
			turn luparm to x-axis <18.> speed <170.000000>;
			turn lloarm to x-axis <-3.> speed <170.000000>;
			turn lhand to x-axis <-5.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to y-axis [-0.] speed <170.000000>;
			move ruparm to z-axis [0.] speed <170.000000>;
			turn torso to z-axis <4.> speed <170.000000>;
			turn torso to z-axis <-5.> speed <170.000000>;
			turn lthigh to x-axis <-16.> speed <170.000000>;
			turn rthigh to x-axis <36.> speed <170.000000>;
			turn rfoot to x-axis <-9.> speed <170.000000>;
			turn lleg to x-axis <55.> speed <170.000000>;
			turn lfoot to x-axis <-22.> speed <170.000000>;
			turn ruparm to x-axis <-49.> speed <170.000000>;
			turn luparm to x-axis <20.> speed <170.000000>;
			turn lloarm to x-axis <9.> speed <170.000000>;
			turn lhand to x-axis <-17.> speed <170.000000>;
			turn rloarm to x-axis <14.> speed <170.000000>;
			turn rhand to x-axis <46.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to z-axis [0.] speed <170.000000>;
			move luparm to y-axis [1.] speed <170.000000>;
			turn torso to z-axis <2.> speed <170.000000>;
			turn torso to z-axis <-2.> speed <170.000000>;
			turn lthigh to x-axis <0.> speed <170.000000>;
			turn rthigh to x-axis <46.> speed <170.000000>;
			turn rfoot to x-axis <6.> speed <170.000000>;
			turn lleg to x-axis <0.> speed <170.000000>;
			turn lfoot to x-axis <0.> speed <170.000000>;
			turn ruparm to x-axis <-34.> speed <170.000000>;
			turn luparm to x-axis <11.> speed <170.000000>;
			turn lloarm to x-axis <0.> speed <170.000000>;
			turn lhand to x-axis <117.> speed <170.000000>;
			turn rhand to x-axis <20.> speed <170.000000>;
			sleep 130;
		}
		if( TRUE )
		{
			move torso to y-axis [0.] speed <170.000000>;
			move ruparm to z-axis [0.] speed <170.000000>;
			move luparm to y-axis [1.] speed <170.000000>;
			turn torso to z-axis <1.> speed <170.000000>;
			turn torso to z-axis <1.> speed <170.000000>;
			turn lthigh to x-axis <11.> speed <170.000000>;
			turn rthigh to x-axis <60.> speed <170.000000>;
			turn rfoot to x-axis <11.> speed <170.000000>;
			turn lleg to x-axis <13.> speed <170.000000>;
			turn lfoot to x-axis <-15.> speed <170.000000>;
			turn ruparm to x-axis <5.> speed <170.000000>;
			turn luparm to x-axis <-9.> speed <170.000000>;
			turn lloarm to x-axis <-29.> speed <170.000000>;
			turn lhand to x-axis <149.> speed <170.000000>;
			turn rloarm to x-axis <-6.> speed <170.000000>;
			turn rhand to x-axis <7.> speed <170.000000>;
			sleep 130;
		}
		move torso to y-axis [0.] speed <170.000000>;
		move ruparm to z-axis [0.] speed <170.000000>;
		move luparm to y-axis [0.] speed <170.000000>;
		turn torso to z-axis <-2.> speed <170.000000>;
		turn torso to z-axis <5.> speed <170.000000>;
		turn lthigh to x-axis <37.> speed <170.000000>;
		turn rthigh to x-axis <27.> speed <170.000000>;
		turn rleg to x-axis <29.> speed <170.000000>;
		turn lleg to x-axis <-0.> speed <170.000000>;
		turn lfoot to x-axis <-17.> speed <170.000000>;
		turn luparm to x-axis <-21.> speed <170.000000>;
		turn lloarm to x-axis <-41.> speed <170.000000>;
		turn lhand to x-axis <90.> speed <170.000000>;
		turn rloarm to x-axis <4.> speed <170.000000>;
		turn rhand to x-axis <-10.> speed <170.000000>;
		sleep 130;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	spray = 0;
	start-script SmokeUnit();
}

StartBuilding(Func_Var_1)
{
	set INBUILDSTANCE to 1;
	signal 4;
}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 150;
	set-signal-mask 0;
	signal 4;
	set INBUILDSTANCE to 0;
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	start-script walk();
}

StopMoving()
{
	move torso to y-axis [0.] speed <160.000000>;
	move ruparm to y-axis [0.] speed <160.000000>;
	move ruparm to z-axis [0.] speed <160.000000>;
	move luparm to y-axis [0.] speed <160.000000>;
	move luparm to z-axis [0.] speed <160.000000>;
	turn torso to z-axis <0.> speed <160.000000>;
	turn torso to z-axis <0.> speed <160.000000>;
	turn lthigh to x-axis <0.> speed <160.000000>;
	turn rthigh to x-axis <0.> speed <160.000000>;
	turn rleg to x-axis <0.> speed <160.000000>;
	turn rfoot to x-axis <0.> speed <160.000000>;
	turn lleg to x-axis <0.> speed <160.000000>;
	turn lfoot to x-axis <0.> speed <160.000000>;
	turn ruparm to x-axis <0.> speed <160.000000>;
	turn luparm to x-axis <0.> speed <160.000000>;
	turn lloarm to x-axis <0.> speed <160.000000>;
	turn lhand to x-axis <0.> speed <160.000000>;
	turn rloarm to x-axis <0.> speed <160.000000>;
	turn rhand to x-axis <0.> speed <160.000000>;
	signal 2;
}


QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = lathe1;
	}
	if( spray == 1 )
	{
		piecenum = lathe2;
	}
	++spray;
	if( spray == 2 )
	{
		spray = 0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode torso type NOHEATCLOUD;
		explode ruparm type NOHEATCLOUD;
		explode rloarm type NOHEATCLOUD;
		explode rhand type NOHEATCLOUD;
		explode luparm type NOHEATCLOUD;
		explode lloarm type NOHEATCLOUD;
		explode lhand type NOHEATCLOUD;
		explode lthigh type NOHEATCLOUD;
		explode lleg type NOHEATCLOUD;
		explode lfoot type NOHEATCLOUD;
		explode rthigh type NOHEATCLOUD;
		explode rleg type NOHEATCLOUD;
		explode rfoot type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | NOHEATCLOUD;
		explode torso type SHATTER | NOHEATCLOUD;
		explode ruparm type SHATTER | NOHEATCLOUD;
		explode rloarm type SHATTER | NOHEATCLOUD;
		explode rhand type SHATTER | NOHEATCLOUD;
		explode luparm type SHATTER | NOHEATCLOUD;
		explode lloarm type SHATTER | NOHEATCLOUD;
		explode lhand type SHATTER | NOHEATCLOUD;
		explode lthigh type SHATTER | NOHEATCLOUD;
		explode lleg type SHATTER | NOHEATCLOUD;
		explode lfoot type SHATTER | NOHEATCLOUD;
		explode rthigh type SHATTER | NOHEATCLOUD;
		explode rleg type SHATTER | NOHEATCLOUD;
		explode rfoot type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
