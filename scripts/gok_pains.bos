#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, stand, cockpit,
		msl11, msl12, msl13, msl14, msl15, msl16;

static-var  restore_delay, gun_1, gun_2;

// Signal definitions
#define SIG_AIM_1			2
#define SIG_AIM_2			4
#define SIG_MOVE			8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	restore_delay = 2500;
	gun_1 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <75.000000>;
	turn turret to x-axis <0.00> speed <75.00>;
	move turret to y-axis [0.00] speed [1.00];	
}

AimFromWeapon3(pieceNum)
{
	pieceNum = turret;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM_1;
	set-signal-mask SIG_AIM_1;
	move turret to y-axis [2.50] speed [15.00];
	turn turret to y-axis heading speed <360.00>;
	turn turret to x-axis <0.00> - pitch speed <320.00>;	
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	wait-for-move turret along y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Shot3()
{
	++gun_1;
	if (gun_1 == 6)
	{
		gun_1 = 0;
	}
}

QueryWeapon3(pieceNum)
{
	if (gun_1 == 0)
	{
		pieceNum = msl11;
	}
	if (gun_1 == 1)
	{
		pieceNum = msl12;
	}
	if (gun_1 == 2)
	{
		pieceNum = msl13;
	}
	if (gun_1 == 3)
	{
		pieceNum = msl14;
	}
	if (gun_1 == 4)
	{
		pieceNum = msl15;
	}
	if (gun_1 == 5)
	{
		pieceNum = msl16;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode stand type NOHEATCLOUD;
		explode cockpit type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode stand type NOHEATCLOUD | FALL;
		explode cockpit type NOHEATCLOUD | FALL;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode stand type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode cockpit type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	return (corpsetype);
}
