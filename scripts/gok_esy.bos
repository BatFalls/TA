#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, supports, sup1, sup2, sup3, sup4, sup5, sup6,
       ring, arms, arm1, system1, arm2, system2, 
       building1, observatory1, turret1, llathe1, lbeam1, rlathe1, rbeam1,
       building2, observatory2, turret2, llathe2, lbeam2, rlathe2, rbeam2,
       building3, observatory3, turret3, llathe3, lbeam3, rlathe3, rbeam3,
       building4, observatory4, turret4, llathe4, lbeam4, rlathe4, rbeam4,
       plate1, plate2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from observatory1;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from observatory2;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_4 )
	{
		Static_Var_3 = requestedstate;
		return (0);
	}
	Static_Var_4 = 1;
	currentstate = Static_Var_3;
	Static_Var_3 = requestedstate;
	while( Static_Var_3 != currentstate )
	{
		if( !Static_Var_3 )
		{
			move turret1 to y-axis [-5.] speed [8.];
			move turret2 to y-axis [-5.] speed [8.];
			move turret3 to y-axis [-5.] speed [8.];
			move turret4 to y-axis [-5.] speed [8.];
			wait-for-move turret1 along y-axis;
			set ARMORED to 0;
			set YARD_OPEN to 1;
			while( !get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 1;
			}
			set BUGGER_OFF to 0;
			set INBUILDSTANCE to 1;
			currentstate = 0;
		}
		if( Static_Var_3 )
		{
			set INBUILDSTANCE to 0;
			set YARD_OPEN to 0;
			while( get YARD_OPEN )
			{
				set BUGGER_OFF to 1;
				sleep 1500;
				set YARD_OPEN to 0;
			}
			set BUGGER_OFF to 0;
			set ARMORED to 1;
			move turret1 to y-axis [0.] speed [8.];
			move turret2 to y-axis [0.] speed [8.];
			move turret3 to y-axis [0.] speed [8.];
			move turret4 to y-axis [0.] speed [8.];
			wait-for-move turret1 along y-axis;
			wait-for-move turret2 along y-axis;
			currentstate = 1;
		}
	}
	Static_Var_4 = 0;
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	start-script SmokeUnit();
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = lbeam1;
		Static_Var_1 = 1;
		return (0);
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = rbeam1;
		Static_Var_1 = 2;
		return (0);
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = rbeam2;
		Static_Var_1 = 3;
		return (0);
	}
	if( Static_Var_1 == 3 )
	{
		piecenum = lbeam2;
		Static_Var_1 = 4;
		return (0);
	}
	if( Static_Var_1 == 4 )
	{
		piecenum = lbeam3;
		Static_Var_1 = 5;
		return (0);
	}
	if( Static_Var_1 == 5 )
	{
		piecenum = rbeam3;
		Static_Var_1 = 6;
		return (0);
	}
	if( Static_Var_1 == 6 )
	{
		piecenum = lbeam4;
		Static_Var_1 = 7;
		return (0);
	}
	if( Static_Var_1 == 7 )
	{
		piecenum = rbeam4;
		Static_Var_1 = 0;
		return (0);
	}
}

Demo()
{
	Static_Var_2 = 1;
}

Activate()
{
	signal 2;
	start-script RequestState(0);
}

Deactivate()
{
	signal 2;
	set-signal-mask 2;
	if( !Static_Var_2 )
	{
		sleep 5000;
	}
	set-signal-mask 0;
	start-script RequestState(1);
}

StartBuilding()
{
}

StopBuilding()
{
}

QueryBuildInfo(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	explode lbeam1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rbeam1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lbeam2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rbeam2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ring type NOHEATCLOUD;
		explode system1 type NOHEATCLOUD;
		explode system2 type NOHEATCLOUD;
		explode building1 type NOHEATCLOUD;
		explode building2 type NOHEATCLOUD;
		explode observatory1 type NOHEATCLOUD;
		explode llathe1 type NOHEATCLOUD;
		explode rlathe1 type NOHEATCLOUD;
		explode observatory2 type NOHEATCLOUD;
		explode llathe2 type NOHEATCLOUD;
		explode rlathe2 type NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD | FALL;
		explode ring type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode system1 type NOHEATCLOUD | FALL;
		explode system2 type NOHEATCLOUD | FALL;
		explode building3 type NOHEATCLOUD | FALL;
		explode building1 type NOHEATCLOUD | FALL;
		explode building2 type NOHEATCLOUD | FALL;
		explode observatory1 type NOHEATCLOUD | FALL;
		explode llathe1 type FALL | SMOKE | NOHEATCLOUD;
		explode rlathe1 type FALL | SMOKE | NOHEATCLOUD;
		explode observatory2 type NOHEATCLOUD | FALL;
		explode llathe2 type FALL | SMOKE | NOHEATCLOUD;
		explode rlathe2 type FALL | SMOKE | NOHEATCLOUD;
		explode plate1 type NOHEATCLOUD;
		explode plate2 type NOHEATCLOUD;
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD | FALL;
	explode ring type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode arm1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode system1 type NOHEATCLOUD | FALL;
	explode arm2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode system2 type NOHEATCLOUD | FALL;
	explode building3 type NOHEATCLOUD | FALL;
	explode building1 type NOHEATCLOUD | FALL;
	explode building2 type NOHEATCLOUD | FALL;
	explode observatory1 type NOHEATCLOUD | FALL;
	explode llathe1 type FALL | SMOKE | NOHEATCLOUD;
	explode rlathe1 type FALL | SMOKE | NOHEATCLOUD;
	explode observatory2 type NOHEATCLOUD | FALL;
	explode llathe2 type FALL | SMOKE | NOHEATCLOUD;
	explode rlathe2 type FALL | SMOKE | NOHEATCLOUD;
	explode plate1 type NOHEATCLOUD;
	explode plate2 type NOHEATCLOUD;
}
