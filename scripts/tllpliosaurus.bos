#include "sfxtype.h"
#include "exptype.h"


piece	base, body,
		
		turret1, sleeve1, barrel1a, barrel1b,barrel1c,barrel1d,barrel1e, flare1a, flare1b, flare1c, flare1d, flare1e,
		turret2, sleeve2, barrel2a, barrel2b,barrel2c,barrel2d,barrel2e, flare2a, flare2b, flare2c, flare2d, flare2e,
		turret3, sleeve3, barrel3a, barrel3b,barrel3c,barrel3d,barrel3e, flare3a, flare3b, flare3c, flare3d, flare3e,
		turret4, sleeve4, barrel4a, barrel4b,barrel4c,barrel4d,barrel4e, flare4a, flare4b, flare4c, flare4d, flare4e,
		
		turret5, sleeve5, flare5a, flare5b,
		turret6, sleeve6, flare6a, flare6b,
		
		lturret1, lturret2, lturret3, lturret4, lturret5, lturret6, lturret7, lturret8, lturret9, lturret10, lturret11, lturret12,
		lsleeve1, lsleeve2, lsleeve3, lsleeve4, lsleeve5, lsleeve6, lsleeve7, lsleeve8, lsleeve9, lsleeve10, lsleeve11, lsleeve12,
		lflare1, lflare2, lflare3, lflare4, lflare5, lflare6, lflare7, lflare8, lflare9, lflare10, lflare11, lflare12,
		
		wakes1, wakes2, wakes3, wakes4, wakes5;
	
static-var gun_1, gun_2, gun_3, gun_4, gun_5, gun_6;

#define SIG_AIM1 2
#define SIG_AIM2 4
#define SIG_AIM3 8
#define SIG_AIM4 16
#define SIG_AIM5 32
#define SIG_AIM6 64
#define SIG_AIM7 128
#define SIG_AIM8 256
#define SIG_AIM9 512
#define SIG_AIM10 1024
#define SIG_AIM11 2048
#define SIG_AIM12 4096
#define SIG_AIM13 8192
#define SIG_AIM14 16384
#define SIG_AIM15 32768
#define SIG_AIM16 65536
#define SIG_AIM17 131072
#define SIG_AIM18 262144

#define SIG_MOVE 524288

#define RESTORE_DELAY1 7000
#define RESTORE_DELAY2 4000
#define RESTORE_DELAY3 2000

#define FLAK_TURRET_HEADING_SPEED <420>
#define FLAK_TURRET_PITCH_SPEED <360>

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}

	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from body;
			emit-sfx smoketype from turret1;
			emit-sfx smoketype from turret2;
			emit-sfx smoketype from turret3;
			emit-sfx smoketype from turret4;
			
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;
	gun_4 = 0;
	gun_5 = 0;
	gun_6 = 0;
		
	turn lturret7 to y-axis <180.0> now;
	turn lturret8 to y-axis <180.0> now;
	turn lturret9 to y-axis <180.0> now;
	turn lturret10 to y-axis <180.0> now;
	turn lturret11 to y-axis <180.0> now;
	turn lturret12 to y-axis <180.0> now;
	turn turret3 to y-axis <180.0> now;
	turn turret4 to y-axis <180.0> now;	
	turn turret6 to y-axis <180.0> now;
	
	start-script SmokeUnit();	

}

waveSplash()
{
	while( TRUE )
	{
		turn base to x-axis <-1.000000> speed <0.400000>;
		move base to y-axis [0.229999] speed [0.17];
		wait-for-turn base around x-axis;
		turn base to x-axis <0.000000> speed <0.400000>;
		move base to y-axis [0.000000] speed [0.17];
		wait-for-turn base around x-axis;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from wakes1;
		emit-sfx 2 from wakes2;
		emit-sfx 2 from wakes3;
		emit-sfx 2 from wakes4;	
		emit-sfx 2 from wakes5;
		sleep 125;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn base to x-axis <0.000000> speed <1.000000>;
	move base to y-axis [0.000000] speed [0.169995];
}

// Definition for all RESTORE WEAPON

RestoreWeapon1()
{
	sleep RESTORE_DELAY1;
	turn turret1 to y-axis <0.000000> speed <55.000000>;
	turn sleeve1 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon2()
{
	sleep RESTORE_DELAY1;
	turn turret2 to y-axis <0.000000> speed <55.000000>;
	turn sleeve2 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon3()
{
	sleep RESTORE_DELAY1;
	turn turret3 to y-axis <180.000000> speed <55.000000>;
	turn sleeve3 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon4()
{
	sleep RESTORE_DELAY1;
	turn turret4 to y-axis <180.000000> speed <55.000000>;
	turn sleeve4 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon5()
{
	sleep RESTORE_DELAY2;
	turn turret5 to y-axis <0.000000> speed <25.000000>;
	turn sleeve5 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapon6()
{
	sleep RESTORE_DELAY2;
	turn turret6 to y-axis <180.000000> speed <25.000000>;
	turn sleeve6 to x-axis <0.000000> speed <25.000000>;
}

RestoreWeapons()
{
	sleep RESTORE_DELAY3;
	turn lturret1 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve1 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret2 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve2 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret3 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve3 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret4 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve4 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret5 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve5 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret6 to y-axis <0.000000> speed <75.000000>;
	turn lsleeve6 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret7 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve7 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret8 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve8 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret9 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve9 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret10 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve10 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret11 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve11 to x-axis <0.000000> speed <50.000000>;
	
	turn lturret12 to y-axis <180.000000> speed <75.000000>;
	turn lsleeve12 to x-axis <0.000000> speed <50.000000>;
}

// Definition for all AIM FROM WEAPON

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret3;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret4;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret5;
}

AimFromWeapon6(piecenum)
{
	piecenum = turret6;
}

AimFromWeapon7(piecenum)
{
	piecenum = lturret1;
}

AimFromWeapon8(piecenum)
{
	piecenum = lturret2;
}

AimFromWeapon9(piecenum)
{
	piecenum = lturret3;
}

AimFromWeapon10(piecenum)
{
	piecenum = lturret4;
}

AimFromWeapon11(piecenum)
{
	piecenum = lturret5;
}

AimFromWeapon12(piecenum)
{
	piecenum = lturret6;
}

AimFromWeapon13(piecenum)
{
	piecenum = lturret7;
}

AimFromWeapon14(piecenum)
{
	piecenum = lturret8;
}

AimFromWeapon15(piecenum)
{
	piecenum = lturret9;
}

AimFromWeapon16(piecenum)
{
	piecenum = lturret10;
}

AimFromWeapon17(piecenum)
{
	piecenum = lturret11;
}

AimFromWeapon18(piecenum)
{
	piecenum = lturret12;
}

// MAIN GUN //

AimWeapon1(heading,pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn turret1 to y-axis heading speed <30.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <15.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreWeapon1();
	return (1);
}

AimWeapon2(heading,pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	turn turret2 to y-axis heading speed <30.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <15.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreWeapon2();
	return (1);
}

AimWeapon3(heading,pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;
	turn turret3 to y-axis heading speed <30.000000>;
	turn sleeve3 to x-axis <0.000000> - pitch speed <15.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreWeapon3();
	return (1);
}

AimWeapon4(heading,pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;
	turn turret4 to y-axis heading speed <30.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <15.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	start-script RestoreWeapon4();
	return (1);
}

FireWeapon1()
{
	if( gun_1 == 0 )
	{
		move barrel1a to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare1a;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
		gun_1 = 1;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel1b to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare1b;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
		gun_1 = 2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		move barrel1c to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare1c;
		sleep 150;
		move barrel1c to z-axis [0.000000] speed [3.000000];
		gun_1 = 3;
		return (0);
	}
	if( gun_1 == 3 )
	{
		move barrel1d to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare1d;
		sleep 150;
		move barrel1d to z-axis [0.000000] speed [3.000000];
		gun_1 = 4;
		return (0);
	}
	if( gun_1 == 4 )
	{
		move barrel1e to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare1e;
		sleep 150;
		move barrel1e to z-axis [0.000000] speed [3.000000];
		gun_1 = 0;
		return (0);
	}
}

FireWeapon2()
{
	if( gun_2 == 0 )
	{
		move barrel2a to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare2a;
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [3.000000];
		gun_2 = 1;
		return (0);
	}
	if( gun_2 == 1 )
	{
		move barrel2b to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare2b;
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [3.000000];
		gun_2 = 2;
		return (0);
	}
	if( gun_2 == 2 )
	{
		move barrel2c to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare2c;
		sleep 150;
		move barrel2c to z-axis [0.000000] speed [3.000000];
		gun_2 = 3;
		return (0);
	}
	if( gun_2 == 3 )
	{
		move barrel2d to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare2d;
		sleep 150;
		move barrel2d to z-axis [0.000000] speed [3.000000];
		gun_2 = 4;
		return (0);
	}
	if( gun_2 == 4 )
	{
		move barrel2e to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare2e;
		sleep 150;
		move barrel2e to z-axis [0.000000] speed [3.000000];
		gun_2 = 0;
		return (0);
	}
}

FireWeapon3()
{
	if( gun_3 == 0 )
	{
		move barrel3a to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare3a;
		sleep 150;
		move barrel3a to z-axis [0.000000] speed [3.000000];
		gun_3 = 1;
		return (0);
	}
	if( gun_3 == 1 )
	{
		move barrel3b to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare3b;
		sleep 150;
		move barrel3b to z-axis [0.000000] speed [3.000000];
		gun_3 = 2;
		return (0);
	}
	if( gun_3 == 2 )
	{
		move barrel3c to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare3c;
		sleep 150;
		move barrel3c to z-axis [0.000000] speed [3.000000];
		gun_3 = 3;
		return (0);
	}
	if( gun_3 == 3 )
	{
		move barrel3d to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare3d;
		sleep 150;
		move barrel3d to z-axis [0.000000] speed [3.000000];
		gun_3 = 4;
		return (0);
	}
	if( gun_3 == 4 )
	{
		move barrel3e to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare3e;
		sleep 150;
		move barrel3e to z-axis [0.000000] speed [3.000000];
		gun_3 = 0;
		return (0);
	}

}

FireWeapon4()
{
	if( gun_4 == 0 )
	{
		move barrel4a to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare4a;
		sleep 150;
		move barrel4a to z-axis [0.000000] speed [3.000000];
		gun_4 = 1;
		return (0);
	}
	if( gun_4 == 1 )
	{
		move barrel4b to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare4b;
		sleep 150;
		move barrel4b to z-axis [0.000000] speed [3.000000];
		gun_4 = 2;
		return (0);
	}
	if( gun_4 == 2 )
	{
		move barrel4c to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare4c;
		sleep 150;
		move barrel4c to z-axis [0.000000] speed [3.000000];
		gun_4 = 3;
		return (0);
	}
	if( gun_4 == 3 )
	{
		move barrel4d to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare4d;
		sleep 150;
		move barrel4d to z-axis [0.000000] speed [3.000000];
		gun_4 = 4;
		return (0);
	}
	if( gun_4 == 4 )
	{
		move barrel4e to z-axis [-1.000000] speed [500.000000];
		emit-sfx 1024 + 1 from flare4e;
		sleep 150;
		move barrel4e to z-axis [0.000000] speed [3.000000];
		gun_4 = 0;
		return (0);
	}

}

QueryWeapon1(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare1c;
	}
	if( gun_1 == 3 )
	{
		piecenum = flare1d;
	}
	if( gun_1 == 4 )
	{
		piecenum = flare1e;
	}
}

QueryWeapon2(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare2b;
	}
	if( gun_2 == 2 )
	{
		piecenum = flare2c;
	}
	if( gun_2 == 3 )
	{
		piecenum = flare2d;
	}
	if( gun_2 == 4 )
	{
		piecenum = flare2e;
	}
}

QueryWeapon3(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_3 == 1 )
	{
		piecenum = flare3b;
	}
	if( gun_3 == 2 )
	{
		piecenum = flare3c;
	}
	if( gun_3 == 3 )
	{
		piecenum = flare3d;
	}
	if( gun_3 == 4 )
	{
		piecenum = flare3e;
	}
}

QueryWeapon4(piecenum)
{
	if( gun_4 == 0 )
	{
		piecenum = flare4a;
	}
	if( gun_4 == 1 )
	{
		piecenum = flare4b;
	}
	if( gun_4 == 2 )
	{
		piecenum = flare4c;
	}
	if( gun_4 == 3 )
	{
		piecenum = flare4d;
	}
	if( gun_4 == 4 )
	{
		piecenum = flare4e;
	}
}

// SECONDARY WEAPON Plasma

AimWeapon5(heading,pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5;
	turn turret5 to y-axis heading speed <65.000000>;
	turn sleeve5 to x-axis <0.000000> - pitch speed <50.000000> ;
	wait-for-turn turret5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	start-script RestoreWeapon5();
	return (1);
}

AimWeapon6(heading,pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6;
	turn turret6 to y-axis heading speed <65.000000>;
	turn sleeve6 to x-axis <0.000000> - pitch speed <50.000000> ;
	wait-for-turn turret6 around y-axis;
	wait-for-turn sleeve6 around x-axis;
	start-script RestoreWeapon6();
	return (1);
}

FireWeapon5()
{
	++gun_5;
	if( gun_5 == 2 )
	{
		gun_5 = 0;
	}
}

FireWeapon6()
{
	++gun_6;
	if( gun_6 == 2 )
	{
		gun_6 = 0;
	}
}

QueryWeapon5(piecenum)
{	
	if( gun_5 == 0 )
	{
		piecenum = flare5a;
	}
	if( gun_5 == 1 )
	{
		piecenum = flare5b;
	}
}

QueryWeapon6(piecenum)
{	
	if( gun_6 == 0 )
	{
		piecenum = flare6a;
	}
	if( gun_6 == 1 )
	{
		piecenum = flare6b;
	}
}

// LIGHTNING WEAPON

AimWeapon7(heading,pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7;
	turn lturret1 to y-axis heading speed <90.000000>;
	turn lsleeve1 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret1 around y-axis;
	wait-for-turn lsleeve1 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon8(heading,pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8;
	turn lturret2 to y-axis heading speed <90.000000>;
	turn lsleeve2 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret2 around y-axis;
	wait-for-turn lsleeve2 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon9(heading,pitch)
{
	signal SIG_AIM9;
	set-signal-mask SIG_AIM9;
	turn lturret3 to y-axis heading speed <90.000000>;
	turn lsleeve3 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret3 around y-axis;
	wait-for-turn lsleeve3 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon10(heading,pitch)
{
	signal SIG_AIM10;
	set-signal-mask SIG_AIM10;
	turn lturret4 to y-axis heading speed <90.000000>;
	turn lsleeve4 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret4 around y-axis;
	wait-for-turn lsleeve4 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon11(heading,pitch)
{
	signal SIG_AIM11;
	set-signal-mask SIG_AIM11;
	turn lturret5 to y-axis heading speed <90.000000>;
	turn lsleeve5 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret5 around y-axis;
	wait-for-turn lsleeve5 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon12(heading,pitch)
{
	signal SIG_AIM12;
	set-signal-mask SIG_AIM12;
	turn lturret6 to y-axis heading speed <90.000000>;
	turn lsleeve6 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret6 around y-axis;
	wait-for-turn lsleeve6 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon13(heading,pitch)
{
	signal SIG_AIM13;
	set-signal-mask SIG_AIM13;
	turn lturret7 to y-axis heading speed <90.000000>;
	turn lsleeve7 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret7 around y-axis;
	wait-for-turn lsleeve7 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon14(heading,pitch)
{
	signal SIG_AIM14;
	set-signal-mask SIG_AIM14;
	turn lturret8 to y-axis heading speed <90.000000>;
	turn lsleeve8 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret8 around y-axis;
	wait-for-turn lsleeve8 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon15(heading,pitch)
{
	signal SIG_AIM15;
	set-signal-mask SIG_AIM15;
	turn lturret9 to y-axis heading speed <90.000000>;
	turn lsleeve9 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret9 around y-axis;
	wait-for-turn lsleeve9 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon16(heading,pitch)
{
	signal SIG_AIM16;
	set-signal-mask SIG_AIM16;
	turn lturret10 to y-axis heading speed <90.000000>;
	turn lsleeve10 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret10 around y-axis;
	wait-for-turn lsleeve10 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon17(heading,pitch)
{
	signal SIG_AIM17;
	set-signal-mask SIG_AIM17;
	turn lturret11 to y-axis heading speed <90.000000>;
	turn lsleeve11 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret11 around y-axis;
	wait-for-turn lsleeve11 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

AimWeapon18(heading,pitch)
{
	signal SIG_AIM18;
	set-signal-mask SIG_AIM18;
	turn lturret12 to y-axis heading speed <90.000000>;
	turn lsleeve12 to x-axis <0.000000> - pitch speed <60.000000>;
	wait-for-turn lturret12 around y-axis;
	wait-for-turn lsleeve12 around x-axis;
	start-script RestoreWeapons();
	return (1);
}

QueryWeapon7(piecenum)
{	
	piecenum = lflare1;
}

QueryWeapon8(piecenum)
{	
	piecenum = lflare2;
}

QueryWeapon9(piecenum)
{	
	piecenum = lflare3;
}

QueryWeapon10(piecenum)
{	
	piecenum = lflare4;
}

QueryWeapon11(piecenum)
{	
	piecenum = lflare5;
}

QueryWeapon12(piecenum)
{	
	piecenum = lflare6;
}

QueryWeapon13(piecenum)
{	
	piecenum = lflare7;
}

QueryWeapon14(piecenum)
{	
	piecenum = lflare8;
}

QueryWeapon15(piecenum)
{	
	piecenum = lflare9;
}

QueryWeapon16(piecenum)
{	
	piecenum = lflare10;
}

QueryWeapon17(piecenum)
{	
	piecenum = lflare11;
}

QueryWeapon18(piecenum)
{	
	piecenum = lflare12;
}

SweetSpot(piecenum)
{
	piecenum = base;
}


Killed(severity,corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD ;
		explode turret1 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode turret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret3 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret5 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret6 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret7 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret11 type FALL | SMOKE | FIRE | NOHEATCLOUD ;	
		return (corpsetype);
	}
		if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD ;
		explode turret1 type FALL | SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode turret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret3 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret5 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode turret6 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret7 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
		explode lturret11 type FALL | SMOKE | FIRE | NOHEATCLOUD ;	
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD ;
	explode turret1 type FALL | SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
	explode turret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode turret3 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode turret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode turret5 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode turret6 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode lturret4 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode lturret2 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode lturret7 type FALL | SMOKE | FIRE | NOHEATCLOUD ;
	explode lturret11 type FALL | SMOKE | FIRE | NOHEATCLOUD ;	
	return (corpsetype);	
}