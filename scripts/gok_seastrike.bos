#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare, body, hull, turret, pitchturret, launcher, wake1, wake2, wake3, wake4, wake5, wake6;

static-var  Static_Var_1;

StartMoving()
{
	signal 4;
	set-signal-mask 4;
}

StopMoving()
{
	signal 4;
}

waking()
{
	while( TRUE )
	{
		if( Static_Var_1 == 2 OR Static_Var_1 == 1 )
		{
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
		}
		sleep 325;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	start-script waking();
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

setSFXoccupy(state)
{
	Static_Var_1 = state;
}

Create()
{
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 2500;
	turn turret to y-axis <0.0> speed <120.00>;
	turn pitchturret to x-axis <0.00> speed <120.00>;	
}

AimFromTertiary(PieceNum)
{
	PieceNum = pitchturret;
}

AimTertiary(Heading, Pitch)
{
	signal 2;
	set-signal-mask 2;	
	turn turret to y-axis Heading speed <280.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <280.00>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	start-script RestoreAfterDelay();
	return(1);
}

FireTertiary()
{
	move launcher to z-axis [-0.75] speed [500.00];
	sleep 25;
	move launcher to z-axis [0.00] speed [1.50];
}


QueryTertiary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode pitchturret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode pitchturret type NOHEATCLOUD  | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
