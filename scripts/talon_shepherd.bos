#define TA

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, rear, lbleg, lbboot, lbfoot, lbtoe, rbleg, rbboot, rbfoot, rbtoe, antihull, turret, pitchturret, barrel,
       fire, shield1, shield2, system, lfleg, lfboot, lffoot, rfleg, rfboot, rffoot,
       lathe, lathe2;

static-var  bMoving, bAiming, Occupy, UnitHeading, UnitSpeed, Spray, Firing, Inactive;
	
MotionControl(Moving, Aiming, JustMoved)
{
	JustMoved = 1;
	while( TRUE )
		{
		Moving = bMoving;
		Aiming = bAiming;
		if( Moving )
			{
			if( bMoving )
				{
				turn lbleg to x-axis <30.00> speed <150.00>;
				turn lbboot to x-axis <-10.00> speed <50.00>;
				turn lbfoot to x-axis <20.00> speed <100.00>;
				turn lbtoe to x-axis <30.00> speed <150.00>;
				
				turn rbleg to x-axis <-40.00> speed <200.00>;
				turn rbboot to x-axis <0.00> speed <200.00>;
				turn rbfoot to x-axis <-20.00> speed <175.00>;
				turn rbtoe to x-axis <70.00> speed <200.00>;
				
				turn lfleg to x-axis <-20.00> speed <400.00>;
				turn lfboot to x-axis <-30.00> speed <250.00>;
				turn lffoot to x-axis <60.00> speed <100.00>;
				
				turn rfleg to x-axis <35.00> speed <75.00>;
				turn rfboot to x-axis <10.00> speed <50.00>;
				turn rffoot to x-axis <10.00> speed <125.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lbleg to x-axis <50.00> speed <100.00>;
				turn lbboot to x-axis <-20.00> speed <50.00>;
				turn lbfoot to x-axis <25.00> speed <25.00>;
				turn lbtoe to x-axis <40.00> speed <50.00>;
				
				turn rbleg to x-axis <-25.00> speed <75.00>;
				turn rbboot to x-axis <-20.00> speed <100.00>;
				turn rbfoot to x-axis <20.00> speed <200.00>;
				turn rbtoe to x-axis <30.00> speed <200.00>;
				
				turn lfleg to x-axis <-25.00> speed <25.00>;
				turn lfboot to x-axis <10.00> speed <200.00>;
				turn lffoot to x-axis <30.00> speed <150.00>;
				
				turn rfleg to x-axis <50.00> speed <75.00>;
				turn rfboot to x-axis <0.00> speed <50.00>;
				turn rffoot to x-axis <30.00> speed <100.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lbleg to x-axis <0.00> speed <250.00>;
				turn lbboot to x-axis <40.00> speed <300.00>;
				turn lbfoot to x-axis <-55.00> speed <400.00>;
				turn lbtoe to x-axis <30.00> speed <50.00>;
				
				turn rbleg to x-axis <0.00> speed <125.00>;
				turn rbboot to x-axis <0.00> speed <100.00>;
				turn rbfoot to x-axis <0.00> speed <100.00>;
				turn rbtoe to x-axis <0.00> speed <150.00>;
				
				turn lfleg to x-axis <20.00> speed <225.00>;
				turn lfboot to x-axis <0.00> speed <50.00>;
				turn lffoot to x-axis <-15.00> speed <75.00>;
				
				turn rfleg to x-axis <60.00> speed <50.00>;
				turn rfboot to x-axis <-80.00> speed <400.00>;
				turn rffoot to x-axis <40.00> speed <50.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lbleg to x-axis <-40.00> speed <200.00>;
				turn lbboot to x-axis <0.00> speed <200.00>;
				turn lbfoot to x-axis <-20.00> speed <175.00>;
				turn lbtoe to x-axis <70.00> speed <200.00>;
				
				turn rbleg to x-axis <30.00> speed <150.00>;
				turn rbboot to x-axis <-10.00> speed <50.00>;
				turn rbfoot to x-axis <20.00> speed <100.00>;
				turn rbtoe to x-axis <30.00> speed <150.00>;
				
				turn lfleg to x-axis <35.00> speed <75.00>;
				turn lfboot to x-axis <10.00> speed <50.00>;
				turn lffoot to x-axis <10.00> speed <125.00>;
				
				turn rfleg to x-axis <-20.00> speed <400.00>;
				turn rfboot to x-axis <-30.00> speed <250.00>;
				turn rffoot to x-axis <60.00> speed <100.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lbleg to x-axis <-25.00> speed <75.00>;
				turn lbboot to x-axis <-20.00> speed <100.00>;
				turn lbfoot to x-axis <20.00> speed <200.00>;
				turn lbtoe to x-axis <30.00> speed <200.00>;
				
				turn rbleg to x-axis <50.00> speed <100.00>;
				turn rbboot to x-axis <-20.00> speed <50.00>;
				turn rbfoot to x-axis <25.00> speed <25.00>;
				turn rbtoe to x-axis <40.00> speed <50.00>;
				
				turn lfleg to x-axis <50.00> speed <75.00>;
				turn lfboot to x-axis <0.00> speed <50.00>;
				turn lffoot to x-axis <30.00> speed <100.00>;
				
				turn rfleg to x-axis <-25.00> speed <25.00>;
				turn rfboot to x-axis <10.00> speed <200.00>;
				turn rffoot to x-axis <30.00> speed <150.00>;
				
				sleep 200;
				}
			
			if( bMoving )
				{
				turn lbleg to x-axis <0.00> speed <125.00>;
				turn lbboot to x-axis <0.00> speed <100.00>;
				turn lbfoot to x-axis <0.00> speed <100.00>;
				turn lbtoe to x-axis <0.00> speed <150.00>;
				
				turn rbleg to x-axis <0.00> speed <250.00>;
				turn rbboot to x-axis <40.00> speed <300.00>;
				turn rbfoot to x-axis <-55.00> speed <400.00>;
				turn rbtoe to x-axis <30.00> speed <50.00>;
				
				turn lfleg to x-axis <60.00> speed <50.00>;
				turn lfboot to x-axis <-80.00> speed <400.00>;
				turn lffoot to x-axis <40.00> speed <50.00>;
				
				turn rfleg to x-axis <20.00> speed <225.00>;
				turn rfboot to x-axis <0.00> speed <50.00>;
				turn rffoot to x-axis <-15.00> speed <75.00>;
				
				sleep 200;
				}
			JustMoved = 1;
			}
		if( !Moving )
			{
			if( JustMoved )
				{
				turn lbleg to x-axis <0.00> speed <150.00>;
				turn lbboot to x-axis <0.00> speed <150.00>;
				turn lbfoot to x-axis <0.00> speed <150.00>;
				turn lbtoe to x-axis <0.00> speed <150.00>;
				
				turn rbleg to x-axis <0.00> speed <150.00>;
				turn rbboot to x-axis <40.00> speed <150.00>;
				turn rbfoot to x-axis <-55.00> speed <150.00>;
				turn rbtoe to x-axis <30.00> speed <150.00>;
				
				turn lfleg to x-axis <60.00> speed <150.00>;
				turn lfboot to x-axis <-80.00> speed <150.00>;
				turn lffoot to x-axis <40.00> speed <150.00>;
				
				turn rfleg to x-axis <20.00> speed <150.00>;
				turn rfboot to x-axis <0.00> speed <150.00>;
				turn rffoot to x-axis <-15.00> speed <150.00>;
				
				JustMoved = 0;
				}
			sleep 100;
		}
	}
}
SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

setSFXoccupy(Status)
{
	Occupy = Status;
}

StartMoving()
{
	set-signal-mask 256;
	bMoving = 1;
}

StopMoving()
{
	signal 256;
	bMoving = 0;
}

Create()
{
	bMoving = 0;
	bAiming = 0;
	UnitSpeed = 1;
	Spray = 0;
	Firing = 0;
	Inactive = 13;
				
	start-script SmokeUnit();
	

}

RestoreAfterDelay()
{
	sleep 2500;
	turn turret to y-axis <0> speed <80.00>;
	turn pitchturret to x-axis <0.00> speed <80.00>;

}


AimFromPrimary(PieceNum)
{
	PieceNum = pitchturret;
}

QueryPrimary(PieceNum)
{
	PieceNum = fire;
}

AimPrimary(Heading, Pitch)
	{
	signal 2;
	set-signal-mask 2;
	bAiming = 1;
	Inactive = 0;
	
	turn turret to y-axis Heading speed <240.00>;
	turn pitchturret to x-axis <0.00> - Pitch speed <120.00>;
	wait-for-turn turret around y-axis;
	wait-for-turn pitchturret around x-axis;
	Inactive = 0;
	return(1);
	}

FirePrimary(Random)
{

}

StartBuilding(Func_Var_1)
{
	set INBUILDSTANCE to 1;
	signal 4;
}

StopBuilding()
{
	signal 4;
	set-signal-mask 4;
	sleep 150;
	set-signal-mask 0;
	signal 4;
	set INBUILDSTANCE to 0;
}

QueryNanoPiece(piecenum)
{
	if( Spray == 0 )
	{
		piecenum = lathe;
	}
	if( Spray == 1 )
	{
		piecenum = lathe2;
	}
	++Spray;
	if( Spray == 2 )
	{
		Spray = 0;
	}
}

SweetSpot(PieceNum)
{
	PieceNum = base;
}

Killed(severity, corpseType)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode rear type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode rfleg type NOHEATCLOUD;
		explode lfleg type NOHEATCLOUD;
		explode lbleg type NOHEATCLOUD;
		explode rbleg type NOHEATCLOUD;		
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD;
		explode rear type NOHEATCLOUD;
		explode turret type SHATTER | NOHEATCLOUD;
		explode rfleg type SHATTER | NOHEATCLOUD;
		explode lfleg type SHATTER | NOHEATCLOUD;
		explode lbleg type SHATTER | NOHEATCLOUD;
		explode rbleg type SHATTER | NOHEATCLOUD;	
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode hull type NOHEATCLOUD;
		explode rear type NOHEATCLOUD;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lbleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rbleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;	
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type NOHEATCLOUD;
	explode rear type NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lfleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lbleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rbleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;	
	return (corpsetype);
}
