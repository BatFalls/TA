#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, support1, support2, support3,
		sleeves1a, sleeves1b, sleeves2a, sleeves2b, sleeves3a, sleeves3b,
		flare1a, flare1b, flare2a, flare2b, flare3a, flare3b,
		turret1, turret2, turret3, side1, side2, side3, side4, socle;

static-var  gun_1, gun_2, gun_3;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;	
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret1 to y-axis heading speed <50.000000>;
	turn sleeves1a to x-axis <0.0> - pitch speed <35.000000>;
	turn sleeves1b to x-axis <0.0> - pitch speed <35.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1a around x-axis;
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <50.000000>;
	turn sleeves2a to x-axis <0.0> - pitch speed <35.000000>;
	turn sleeves2b to x-axis <0.0> - pitch speed <35.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2a around x-axis;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <50.000000>;
	turn sleeves3a to x-axis <0.0> - pitch speed <35.000000>;
	turn sleeves3b to x-axis <0.0> - pitch speed <35.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeves3a around x-axis;
	return (1);
}

FirePrimary()
{
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
}

FireSecondary()
{
	++gun_2;
	if( gun_2 == 2 )
	{
		gun_2 = 0;
	}
}

FireTertiary()
{
	++gun_3;
	if( gun_3 == 2 )
	{
		gun_3 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

AimFromSecondary(piecenum)
{
	piecenum = turret2;
}

AimFromTertiary(piecenum)
{
	piecenum = turret3;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare1b;
	}
}

QuerySecondary(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare2a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare2b;
	}
}

QueryTertiary(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_3 == 1 )
	{
		piecenum = flare3b;
	}	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode body type NOHEATCLOUD;
		explode socle type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode sleeves1a type NOHEATCLOUD;
		explode sleeves2b type NOHEATCLOUD;
		explode sleeves3a type NOHEATCLOUD;
		explode sleeves3b type NOHEATCLOUD;
		explode support1 type NOHEATCLOUD;
		explode support3 type NOHEATCLOUD;
		explode side1 type NOHEATCLOUD;
		explode side2 type NOHEATCLOUD;
		explode side3 type NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode body type NOHEATCLOUD;
		explode socle type NOHEATCLOUD |FALL;
		explode turret1 type NOHEATCLOUD |FALL;
		explode turret3 type NOHEATCLOUD |FALL;
		explode sleeves1a type NOHEATCLOUD |FALL;
		explode sleeves2b type NOHEATCLOUD |FALL;
		explode sleeves3a type NOHEATCLOUD |FALL;
		explode sleeves3b type NOHEATCLOUD |FALL;
		explode support1 type NOHEATCLOUD |FALL;
		explode support3 type NOHEATCLOUD |FALL;
		explode side1 type NOHEATCLOUD |FALL;
		explode side2 type NOHEATCLOUD |FALL;
		explode side3 type NOHEATCLOUD |FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
	explode body type NOHEATCLOUD;
	explode socle type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode turret1 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode turret3 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode sleeves1a type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode sleeves2b type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode sleeves3a type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode sleeves3b type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode support1 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode support3 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode side1 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode side2 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	explode side3 type EXPLODE_ON_HIT | NOHEATCLOUD | SMOKE | FALL;
	return corpsetype;
}
