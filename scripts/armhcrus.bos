#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define TA			// This is a TA script


piece  base, body, rk_tur1, rk_slv1, rk_flare1a, rk_flare1b, rk_flare1c, rk_tur2, rk_slv2, rk_flare2a, rk_flare2b, rk_flare2c, 
	   rk_tur3, rk_slv3, rk_flare3a, rk_flare3b, rk_flare3c, rk_tur4, rk_slv4, rk_flare4a, rk_flare4b, rk_flare4c, sides, 
	   wake1, wake2, wake3, wake4, wake5, wake6, wake7, wake8,
	   turret1, sleeve1a, gun1a, flare1a, sleeve1b, gun1b, flare1b, 
	   turret2, sleeve21, sleeve22, flare21, flare22, barrel21a, barrel21b, barrel21c, barrel22a, barrel22b, barrel22c,
	   turret3, sleeve31, sleeve32, flare31, flare32, barrel31a, barrel31b, barrel31c, barrel32a, barrel32b, barrel32c,
	   spin21, spin22, spin31, spin32;

static-var  Static_Var_1, restore_delay, salvo_1, salvo_2, gun_1, gun_2, gun_3, gun_4, minigun;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_AIM_4			64
#define SIG_AIM_5			128
#define SIG_AIM_6			256
#define SIG_AIM_7			512
#define SIG_R				1024
#define SIG_MOVE			2046


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		
		
		if( Static_Var_1 == 1 )
		{
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
		}
		if( Static_Var_1 == 2 )
		{
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
		}
		sleep 300;
	}
}

StopMoving()
{
	sleep 150;
}

Create()
{
	hide rk_flare1a;
	hide rk_flare1b;
	hide rk_flare1c;
	hide rk_flare2a;
	hide rk_flare2b;
	hide rk_flare2c;
	hide rk_flare3a;
	hide rk_flare3b;
	hide rk_flare3c;
	hide rk_flare4a;
	hide rk_flare4b;
	hide rk_flare4c;
	
	hide flare1a;
	hide flare1b;
	hide flare21;
	hide flare22;
	hide flare31;
	hide flare32;
	
	gun_1 = 0;
	gun_2 = 0;
	gun_3 = 0;
	gun_4 = 0;
	
	minigun = 0;
	salvo_1 = 0;
	salvo_2 = 0;
	
	start-script SmokeUnit();
}


Restore1()
{
	sleep 4000;
	turn turret1 to y-axis <0> speed <30.000000>;
	turn sleeve1a to x-axis <0> speed <20.000000>;
	turn sleeve1b to x-axis <0> speed <20.000000>;
}

Restore4()
{
	sleep 3000;
	turn rk_tur1 to y-axis <0> speed <80.000000>;
	turn rk_slv1 to x-axis <0> speed <60.000000>;
	turn rk_tur2 to y-axis <0> speed <80.000000>;
	turn rk_slv2 to x-axis <0> speed <60.000000>;
	turn rk_tur3 to y-axis <0> speed <80.000000>;
	turn rk_slv3 to x-axis <0> speed <60.000000>;
	turn rk_tur4 to y-axis <0> speed <80.000000>;
	turn rk_slv4 to x-axis <0> speed <60.000000>;
}
	
Restore2()
{
	sleep 2500;
	turn turret2 to y-axis <0> speed <60.000000>;
	turn sleeve21 to x-axis <0> speed <60.000000>;
	turn sleeve22 to x-axis <0> speed <60.000000>;
}

Restore3()
{
	sleep 2500;	
	turn turret3 to y-axis <0> speed <60.000000>;
	turn sleeve31 to x-axis <0> speed <60.000000>;
	turn sleeve32 to x-axis <0> speed <60.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret1 to y-axis heading speed <60.000000>;
	turn sleeve1a to x-axis <0.000000> - pitch speed <45.000000>;
	turn sleeve1b to x-axis <0.000000> - pitch speed <45.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1a around x-axis;
	wait-for-turn sleeve1b around x-axis;
	Start-script Restore1();
	return (1);
}

FirePrimary()
{
	if( minigun == 0 )
	{
		//emit-sfx 1024 + 0 from flare1a;
		turn gun1a to z-axis <0.000000> now;
		turn gun1a to z-axis <60.000000> speed <225.000000>;
		//sleep 125;
		
	}
	if( minigun == 1 )
	{
		//emit-sfx 1024 + 0 from flare1b;
		turn gun1b to z-axis <0.000000> now;
		turn gun1b to z-axis <60.000000> speed <225.000000>;
		//sleep 125;
		
	}
	++minigun;
	if( minigun == 2 )
	{
		minigun = 0;
	}	
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
}

QueryPrimary(piecenum)
{
	if( minigun == 0 )
	{
		piecenum = flare1a;
	}
	if( minigun == 1 )
	{
		piecenum = flare1b;
	}
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <100.000000>;
	turn sleeve21 to x-axis <0.000000> - pitch speed <50.000000>;
	turn sleeve22 to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve21 around x-axis;
	wait-for-turn sleeve22 around x-axis;
	Start-script Restore2();
	return (1);
}

FireSecondary()
{
	if( salvo_1 == 0 )
	{
		emit-sfx 1024 + 0 from flare21;
		move barrel21a to z-axis [-1.000000] now;
		sleep 25;
		move barrel21a to z-axis [0.000000] speed [3.000000];
		turn spin21 to z-axis <120.> speed <240.000000>;
	
	}
	if( salvo_1 == 1 )
	{
		emit-sfx 1024 + 0 from flare22;
		move barrel22a to z-axis [-1.000000] now;
		sleep 25;
		move barrel22a to z-axis [0.000000] speed [3.000000];
		turn spin22 to z-axis <120.> speed <240.000000>;
	}
	if( salvo_1 == 2 )
	{
		emit-sfx 1024 + 0 from flare22;
		move barrel21b to z-axis [-1.000000] now;
		sleep 25;
		move barrel21b to z-axis [0.000000] speed [3.000000];
		turn spin21 to z-axis <240.> speed <240.000000>;
	}
	if( salvo_1 == 3 )
	{
		emit-sfx 1024 + 0 from flare22;
		move barrel22b to z-axis [-1.000000] now;
		sleep 25;
		move barrel22b to z-axis [0.000000] speed [3.000000];
		turn spin22 to z-axis <240.> speed <240.000000>;
	}
	if( salvo_1 == 4 )
	{
		emit-sfx 1024 + 0 from flare21;
		move barrel21c to z-axis [-1.000000] now;
		sleep 25;
		move barrel21c to z-axis [0.000000] speed [3.000000];
		turn spin21 to z-axis <0.> speed <240.000000>;
	}
	if( salvo_1 == 5 )
	{
		emit-sfx 1024 + 0 from flare22;
		move barrel22c to z-axis [-1.000000] now;
		sleep 25;
		move barrel22c to z-axis [0.000000] speed [3.000000];
		turn spin22 to z-axis <0.> speed <260.000000>;
	}
	
	++salvo_1;
	if( salvo_1 == 6 )
	{
		salvo_1 = 0;	
	}

}

AimFromSecondary(piecenum)
{
		piecenum = turret2;
}

QuerySecondary(piecenum)
{
	if( salvo_1 == 0 )
	{
		piecenum = flare21;
	}
	if( salvo_1 == 1 )
	{
		piecenum = flare22;
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret3 to y-axis heading speed <60.000000>;
	turn sleeve31 to x-axis <0.000000> - pitch speed <50.000000>;
	turn sleeve32 to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve31 around x-axis;
	wait-for-turn sleeve32 around x-axis;
	Start-script Restore3();
	return (1);
}

FireTertiary()
{
	if( salvo_2 == 0 )
	{
		emit-sfx 1024 + 0 from flare31;
		move barrel31a to z-axis [-1.000000] now;
		sleep 25;
		move barrel31a to z-axis [0.000000] speed [3.000000];
		turn spin31 to z-axis <120.> speed <240.000000>;
	
	}
	if( salvo_2 == 1 )
	{
		emit-sfx 1024 + 0 from flare32;
		move barrel32a to z-axis [-1.000000] now;
		sleep 25;
		move barrel32a to z-axis [0.000000] speed [3.000000];
		turn spin32 to z-axis <120.> speed <240.000000>;
	}
	if( salvo_2 == 2 )
	{
		emit-sfx 1024 + 0 from flare32;
		move barrel31b to z-axis [-1.000000] now;
		sleep 25;
		move barrel31b to z-axis [0.000000] speed [3.000000];
		turn spin31 to z-axis <240.> speed <240.000000>;
	}
	if( salvo_2 == 3 )
	{
		emit-sfx 1024 + 0 from flare32;
		move barrel32b to z-axis [-1.000000] now;
		sleep 25;
		move barrel32b to z-axis [0.000000] speed [3.000000];
		turn spin32 to z-axis <240.> speed <240.000000>;
	}
	if( salvo_2 == 4 )
	{
		emit-sfx 1024 + 0 from flare31;
		move barrel31c to z-axis [-1.000000] now;
		sleep 25;
		move barrel31c to z-axis [0.000000] speed [3.000000];
		turn spin31 to z-axis <0.> speed <240.000000>;
	}
	if( salvo_2 == 5 )
	{
		emit-sfx 1024 + 0 from flare32;
		move barrel32c to z-axis [-1.000000] now;
		sleep 25;
		move barrel32c to z-axis [0.000000] speed [3.000000];
		turn spin32 to z-axis <0.> speed <260.000000>;
	}
	
	++salvo_2;
	if( salvo_2 == 6 )
	{
		salvo_2 = 0;	
	}
}

AimFromTertiary(piecenum)
{
		piecenum = turret3;
}

QueryTertiary(piecenum)
{
	if( salvo_2 == 0 )
	{
		piecenum = flare31;
	}
	if( salvo_2 == 1 )
	{
		piecenum = flare32;
	}
}

//Missile AA

AimWeapon4(heading, pitch)
{
	signal SIG_AIM_4;
	set-signal-mask SIG_AIM_4;
	turn rk_tur1 to y-axis heading speed <240>;
	turn rk_slv1 to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn rk_tur1 around y-axis;
	wait-for-turn rk_slv1 around x-axis;
	Start-script Restore4();
	return (1);
}
AimWeapon5(heading, pitch)
{
	signal SIG_AIM_5;
	set-signal-mask SIG_AIM_5;
	turn rk_tur2 to y-axis heading speed <240>;
	turn rk_slv2 to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn rk_tur2 around y-axis;
	wait-for-turn rk_slv2 around x-axis;
	Start-script Restore4();
	return (1);
}
AimWeapon6(heading, pitch)
{
	signal SIG_AIM_6;
	set-signal-mask SIG_AIM_6;
	turn rk_tur3 to y-axis heading speed <240>;
	turn rk_slv3 to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn rk_tur3 around y-axis;
	wait-for-turn rk_slv3 around x-axis;
	Start-script Restore4();
	return (1);
}
AimWeapon7(heading, pitch)
{
	signal SIG_AIM_7;
	set-signal-mask SIG_AIM_7;
	turn rk_tur4 to y-axis heading speed <240>;
	turn rk_slv4 to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn rk_tur4 around y-axis;
	wait-for-turn rk_slv4 around x-axis;
	Start-script Restore4();
	return (1);
}

FireWeapon4()
{
	++gun_1;
	if( gun_1 == 3 )
	{
		gun_1 = 0;
	}	
}
FireWeapon5()
{
	++gun_2;
	if( gun_2 == 3 )
	{
		gun_2 = 0;
	}	
}
FireWeapon6()
{
	++gun_3;
	if( gun_3 == 3 )
	{
		gun_3 = 0;
	}	
}
FireWeapon7()
{
	++gun_4;
	if( gun_4 == 3 )
	{
		gun_4 = 0;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = rk_tur1;
}

AimFromWeapon5(piecenum)
{
	piecenum = rk_tur2;
}

AimFromWeapon6(piecenum)
{
	piecenum = rk_tur3;
}

AimFromWeapon7(piecenum)
{
	piecenum = rk_tur4;
}

QueryWeapon4(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rk_flare1a;
	}
	if( gun_1 == 1 )
	{
		piecenum = rk_flare1b;
	}
	if( gun_1 == 2 )
	{
		piecenum = rk_flare1c;
	}
}

QueryWeapon5(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = rk_flare2a;
	}
	if( gun_2 == 1 )
	{
		piecenum = rk_flare2b;
	}
	if( gun_2 == 2 )
	{
		piecenum = rk_flare2c;
	}
}
QueryWeapon6(piecenum)
{
	if( gun_3 == 0 )
	{
		piecenum = rk_flare3a;
	}
	if( gun_3 == 1 )
	{
		piecenum = rk_flare3b;
	}
	if( gun_3 == 2 )
	{
		piecenum = rk_flare3c;
	}
}
QueryWeapon7(piecenum)
{
	if( gun_4 == 0 )
	{
		piecenum = rk_flare4a;
	}
	if( gun_4 == 1 )
	{
		piecenum = rk_flare4b;
	}
	if( gun_4 == 2 )
	{
		piecenum = rk_flare4c;
	}
}
SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode sides type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode sleeve1a type NOHEATCLOUD;
		explode sleeve1b type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode sides type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode sleeve1a type NOHEATCLOUD;
		explode sleeve1b type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type NOHEATCLOUD;
		explode sides type NOHEATCLOUD;
		explode turret1 type NOHEATCLOUD;
		explode turret2 type NOHEATCLOUD;
		explode turret3 type NOHEATCLOUD;
		explode sleeve1a type NOHEATCLOUD;
		explode sleeve1b type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode sides type NOHEATCLOUD;
	explode turret1 type NOHEATCLOUD;
	explode turret2 type NOHEATCLOUD;
	explode turret3 type NOHEATCLOUD;
	explode sleeve1a type NOHEATCLOUD;
	explode sleeve1b type NOHEATCLOUD;
	return (corpsetype);
}
