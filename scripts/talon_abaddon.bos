#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, miniflare1, miniflare2, miniflare3, r1, r2, r3, r4,
       radar, turret, base, sleeves1, sleeves2, barrel1, barrel2,
       barrel3, minigun1, minigun2, minigun3, minibar1, minibar2, minibar3, rocker1,
       rocker2, body, missile_launcher;

static-var  Gun_1, Gun_2, Main_Gun_Heading;

Activate()
{
	spin radar around y-axis speed <100.>;
}

Deactivate()
{
	stop-spin radar around y-axis;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
			emit-sfx smoketype from minigun1;
			emit-sfx smoketype from minigun2;
			emit-sfx smoketype from minigun3;
			emit-sfx smoketype from radar;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide miniflare1;
	hide miniflare2;
	hide miniflare3;
	turn minigun3 to y-axis <225.000000> now;
	Gun_1 = 1;
	Gun_2 = 0;
	start-script SmokeUnit();
	//spin radar around y-axis speed <75.000000> accelerate <10.000000>;
}

RestoreAfterDelay()
{
	signal 64;
	set-signal-mask 64;
	sleep 2000;
	turn minigun1 to y-axis <0.> speed <75.>;
	turn minibar1 to x-axis <0.> speed <75.>;
	turn minigun2 to y-axis <0.> speed <75.>;
	turn minibar2 to x-axis <0.> speed <75.>;
	turn minigun3 to y-axis <225.> speed <75.>;
	turn minibar3 to x-axis <0.> speed <75.>;
	sleep 5000;
	turn turret to y-axis <0.> speed <35.>;
	turn sleeves1 to x-axis <0.> speed <15.>;
	turn sleeves2 to x-axis <0.> speed <15.>;
	move sleeves2 to y-axis [0.000000] speed [3.000000];
	
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <50.>;
	turn rocker1 to y-axis heading speed <50.>;
	turn body to y-axis <0.> - heading speed <50.>;
	turn sleeves1 to x-axis <0.> - pitch speed <25.>;
	Main_Gun_Heading = heading;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from flare1;
	move barrel1 to z-axis [-3.] speed [500.];
	sleep 150;
	wait-for-move barrel1 along z-axis;
	move barrel1 to z-axis [0.] speed [3.];
	sleep 200;
	
	Gun_1 = 2;
	emit-sfx 1024 from flare2;
	move barrel2 to z-axis [-3.] speed [500.];
	sleep 150;
	wait-for-move barrel2 along z-axis;
	move barrel2 to z-axis [0.] speed [3.];
	sleep 200;
	
	Gun_1 = 3;
	emit-sfx 1024 from flare3;
	move barrel3 to z-axis [-3.] speed [500.];
	sleep 150;
	wait-for-move barrel3 along z-axis;
	move barrel3 to z-axis [0.] speed [3.];
	sleep 200;
	Gun_1 = 1;

}

QueryPrimary(piecenum)
{
	if ( Gun_1 == 1) 
	{	 
		piecenum = flare1;
	}
	if ( Gun_1 == 2) 
	{	 
		piecenum = flare2;
	}
	if ( Gun_1 == 3) 
	{	 
		piecenum = flare3;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn minigun1 to y-axis heading speed <200.>;
	turn minibar1 to x-axis <0.> - pitch speed <100.>;
	wait-for-turn minigun1 around y-axis;
	wait-for-turn minibar1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	emit-sfx 1026 from miniflare1;
	sleep 100;
}

QuerySecondary(piecenum)
{
	piecenum = miniflare1;
}

AimFromSecondary(piecenum)
{
	piecenum = minigun1;
}

AimTertiary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;	
	if (heading > (Main_Gun_Heading + 3000) or heading < (Main_Gun_Heading - 3000))
	{
		return (0);
	}
	move sleeves2 to y-axis [2.000000] speed [3.000000];
	turn sleeves2 to x-axis <80.000000> speed <50.>;
	wait-for-turn turret around y-axis;
	return (1);
}

FireTertiary()
{
	++Gun_2;
	if( Gun_2 == 4 )
	{
		Gun_2 = 0;
	}
}

QueryTertiary(piecenum)
{
	if( Gun_2 == 0 )
	{
		piecenum = r1;
	}
	if( Gun_2 == 1 )
	{
		piecenum = r2;
	}
	if( Gun_2 == 2 )
	{
		piecenum = r3;
	}
	if( Gun_2 == 3 )
	{
		piecenum = r4;
	}

}

AimFromTertiary(piecenum)
{
	piecenum = turret;
}

AimWeapon4(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn minigun2 to y-axis heading speed <200.>;
	turn minibar2 to x-axis <0.> - pitch speed <100.>;
	wait-for-turn minigun2 around y-axis;
	wait-for-turn minibar2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon4()
{
	emit-sfx 1026 from miniflare2;
	sleep 100;
}

QueryWeapon4(piecenum)
{
	piecenum = miniflare2;
}

AimFromWeapon4(piecenum)
{
	piecenum = minigun2;
}

AimWeapon5(heading, pitch)
{
	signal 32;
	set-signal-mask 32;
	turn minigun3 to y-axis heading speed <200.>;
	turn minibar3 to x-axis <0.> - pitch speed <100.>;
	wait-for-turn minigun3 around y-axis;
	wait-for-turn minibar3 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon5()
{
	emit-sfx 1026 from miniflare3;
	sleep 100;
}

QueryWeapon5(piecenum)
{
	piecenum = miniflare3;
}

AimFromWeapon5(piecenum)
{
	piecenum = minigun3;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD | FALL;
		explode rocker1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rocker2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sleeves1 type NOHEATCLOUD;
		explode radar type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD | FALL;
		explode rocker1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rocker2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sleeves1 type NOHEATCLOUD;
		explode radar type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD | FALL;
		explode rocker1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rocker2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sleeves1 type NOHEATCLOUD;
		explode radar type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode base type NOHEATCLOUD | FALL;
		explode rocker1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode rocker2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode sleeves1 type NOHEATCLOUD;
		explode radar type NOHEATCLOUD;
		return (corpsetype);
}
