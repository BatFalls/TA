#define TA

#include "sfxtype.h"
#include "exptype.h"


piece 	base, body, LFchen, LBchen, RFchen, RBchen, 
		mainturret, sleeves, barrel1, barrel2, flare, msl,
		flare3a, flare3b, flare3c, flare3d, flare3e,
		flare4a, flare4b, flare4c, flare4d, flare4e,
		turret3, sleeve3, barrel3a, barrel3b, barrel3c, barrel3d, barrel3e, 
		turret4, sleeve4, barrel4a, barrel4b, barrel4c, barrel4d, barrel4e,
		blast1, blast2, turret1, sleeve1, turret2, sleeve2,
		lightning1, lightning2, lightning3, lightning4, flash1, flash2, flash3, flash4,
		flaremsl1, flaremsl2, flaremsl3, flaremsl4, flaremsl5, flaremsl6, flaremsl7, flaremsl8; 
		
		
static-var is_moving, gun_1, gun_2, gun_3;

#define SIG_AIM 	2
#define SIG_AIM2 	4
#define SIG_AIM3 	8
#define SIG_AIM4 	16
#define SIG_AIM5 	32
#define SIG_AIM6 	64
#define SIG_AIM7 	128
#define SIG_AIM8 	256
#define SIG_AIM9 	512
#define SIG_AIM10 	1024
#define SIG_AIM11 	2056
#define SIG_RESTORE 0

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
			sleep 50;
			emit-sfx smoketype from turret1;
			sleep 50;
			emit-sfx smoketype from turret2;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	gun_2 = 0;
	
	turn turret3 to y-axis <-50.000000> now;
	turn turret4 to y-axis <50.000000> now;
	turn turret2 to y-axis <180.000000> now;
	start-script SmokeUnit();
}

RestorePrimary()
{
	sleep 12000;
	turn mainturret to y-axis <0.000000> speed <20.000000>;
	turn sleeves to x-axis <0.000000> speed <7.500000>;
}

RestoreSecondary()
{
	sleep 6000;
	turn turret1 to y-axis <0.000000> speed <15.000000>;
	turn sleeve1 to x-axis <0.000000> speed <15.000000>;
	turn turret2 to y-axis <180.000000> speed <15.000000>;
	turn sleeve2 to x-axis <0.000000> speed <15.000000>;
}

RestoreWeapon4()
{	
	sleep 3000;
	turn turret3 to y-axis <-50.000000> speed <75.000000>;
	turn sleeve3 to x-axis <0.000000> speed <75.000000>;
}

RestoreWeapon5()
{	
	sleep 3000;
	turn turret4 to y-axis <50.000000> speed <75.000000>;
	turn sleeve4 to x-axis <0.000000> speed <75.000000>;
}

RestoreLightning()
{	
	sleep 2000;
	turn lightning1 to y-axis <0.000000> speed <85.000000>;
	turn lightning2 to y-axis <0.000000> speed <85.000000>;
	turn lightning3 to y-axis <0.000000> speed <85.000000>;
	turn lightning4 to y-axis <0.000000> speed <85.000000>;	
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn mainturret to y-axis heading speed <10.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <7.500000>;
	wait-for-turn mainturret around y-axis;
	wait-for-turn sleeves around x-axis;
	Start-script RestorePrimary();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from flare;
	move barrel1 to z-axis [-5.000000] now;
	move barrel2 to z-axis [-10.000000] now;
	sleep 20;
	move barrel1 to z-axis [0.000000] speed [2.500000];
	move barrel2 to z-axis [0.000000] speed [5.000000];
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	turn turret1 to y-axis heading speed <15.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <7.500000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	Start-script RestoreSecondary();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;
	turn turret2 to y-axis heading speed <15.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <7.500000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	Start-script RestoreSecondary();
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;
	turn turret3 to y-axis heading speed <75.000000>;
	turn sleeve3 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	Start-script RestoreWeapon4();
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5;
	turn turret4 to y-axis heading speed <75.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	Start-script RestoreWeapon5();
	return (1);
}

FireWeapon4()
{

		if( gun_1 == 0 )
		{
			emit-sfx 1025 from flare3a;
			move barrel3a to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel3a along z-axis;
			move barrel3a to z-axis [0.000000] speed [3.000000];
		}
		if( gun_1 == 1 )
		{
			emit-sfx 1025 from flare3b;
			move barrel3b to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel3b along z-axis;
			move barrel3b to z-axis [0.000000] speed [3.000000];
		}
		if( gun_1 == 2 )
		{
			emit-sfx 1025 from flare3c;
			move barrel3c to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel3c along z-axis;
			move barrel3c to z-axis [0.000000] speed [3.000000];
		}
		if( gun_1 == 3 )
		{
			emit-sfx 1025 from flare3d;
			move barrel3d to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel3d along z-axis;
			move barrel3d to z-axis [0.000000] speed [3.000000];
		}
		if( gun_1 == 4 )
		{
			emit-sfx 1025 from flare3e;
			move barrel3e to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel3e along z-axis;
			move barrel3e to z-axis [0.000000] speed [3.000000];
		}
	++gun_1;
	if( gun_1 == 5 )
	{
		gun_1 = 0;
	
	}
}

FireWeapon5()
{

		if( gun_2 == 0 )
		{
			emit-sfx 1025 from flare4a;
			move barrel4a to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel4a along z-axis;
			move barrel4a to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 1 )
		{
			emit-sfx 1025 from flare4b;
			move barrel4b to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel4b along z-axis;
			move barrel4b to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 2 )
		{
			emit-sfx 1025 from flare4c;
			move barrel4c to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel4c along z-axis;
			move barrel4c to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 3 )
		{
			emit-sfx 1025 from flare4d;
			move barrel4d to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel4d along z-axis;
			move barrel4d to z-axis [0.000000] speed [3.000000];
		}
		if( gun_2 == 4 )
		{
			emit-sfx 1025 from flare4d;
			move barrel4e to z-axis [-2.400000] speed [500.000000];
			wait-for-move barrel4e along z-axis;
			move barrel4e to z-axis [0.000000] speed [3.000000];
		}
	++gun_2;
	if( gun_2 == 5 )
	{
		gun_2 = 0;
	
	}
}

AimFromPrimary(piecenum)
{
	piecenum = mainturret;
}

AimFromSecondary(piecenum)
{
	piecenum = turret1;
}

AimFromTertiary(piecenum)
{
	piecenum = turret2;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret3;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret4;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

QuerySecondary(piecenum)
{
	piecenum = blast1;
}

QueryTertiary(piecenum)
{
	piecenum = blast2;
}

QueryWeapon4(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare3a;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare3b;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare3c;
	}
	if( gun_1 == 3 )
	{
		piecenum = flare3d;
	}
	if( gun_1 == 4 )
	{
		piecenum = flare3e;
	}
}

QueryWeapon5(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare4a;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare4b;
	}
	if( gun_2 == 2 )
	{
		piecenum = flare4c;
	}
	if( gun_2 == 3 )
	{
		piecenum = flare4d;
	}
	if( gun_2 == 4 )
	{
		piecenum = flare4e;
	}
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6;
	turn lightning1 to y-axis heading speed <100.000000>;
	wait-for-turn lightning1 around y-axis;
	Start-script RestoreLightning();
	return (1);
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7;
	turn lightning2 to y-axis heading speed <100.000000>;
	wait-for-turn lightning2 around y-axis;
	Start-script RestoreLightning();
	return (1);
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8;
	turn lightning3 to y-axis heading speed <100.000000>;
	wait-for-turn lightning3 around y-axis;
	Start-script RestoreLightning();
	return (1);
}

AimWeapon9(heading, pitch)
{
	signal SIG_AIM9;
	set-signal-mask SIG_AIM9;
	turn lightning4 to y-axis heading speed <100.000000>;
	wait-for-turn lightning4 around y-axis;
	Start-script RestoreLightning();
	return (1);
}

FireWeapon6()
{

}

FireWeapon7()
{

}

FireWeapon8()
{

}

FireWeapon9()
{

}

AimFromWeapon6(piecenum)
{
	piecenum = lightning1;
}

AimFromWeapon7(piecenum)
{
	piecenum = lightning2;
}

AimFromWeapon8(piecenum)
{
	piecenum = lightning3;
}

AimFromWeapon9(piecenum)
{
	piecenum = lightning4;
}

QueryWeapon6(piecenum)
{
	piecenum = flash1;
}

QueryWeapon7(piecenum)
{
	piecenum = flash2;
}

QueryWeapon8(piecenum)
{
	piecenum = flash3;
}

QueryWeapon9(piecenum)
{
	piecenum = flash4;
}

AimFromWeapon10(piecenum)
{
	piecenum = msl;
}

AimWeapon10(piecenum)
{
	signal SIG_AIM10;
	set-signal-mask SIG_AIM10;
	return (1);
}

FireWeapon10()
{
	++gun_3;
	if (gun_3 == 8)
	{
		gun_3 = 0;
	}
}

QueryWeapon10(piecenum)
{
	if (gun_3 == 0)
	{
		piecenum = flaremsl1;
	}
	if (gun_3 == 1)
	{
		piecenum = flaremsl2;
	}
	if (gun_3 == 2)
	{
		piecenum = flaremsl3;
	}
	if (gun_3 == 3)
	{
		piecenum = flaremsl4;
	}
	if (gun_3 == 4)
	{
		piecenum = flaremsl5;
	}
	if (gun_3 == 5)
	{
		piecenum = flaremsl6;
	}
	if (gun_3 == 6)
	{
		piecenum = flaremsl7;
	}
	if (gun_3 == 7)
	{
		piecenum = flaremsl8;
	}
	
	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode LFchen type NOHEATCLOUD;
		explode RBchen type NOHEATCLOUD;
		explode mainturret type NOHEATCLOUD | FALL;
		explode sleeves type NOHEATCLOUD | FALL;
		explode turret1 type NOHEATCLOUD | FALL;
		explode turret2 type NOHEATCLOUD | FALL;
		explode sleeve1 type NOHEATCLOUD | FALL;
		explode sleeve2 type NOHEATCLOUD | FALL;
		explode turret3 type NOHEATCLOUD | FALL;
		explode turret4 type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
		corpsetype = 3;
		explode body type NOHEATCLOUD;
		explode LFchen type NOHEATCLOUD;
		explode RBchen type NOHEATCLOUD;
		explode mainturret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeves type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
}