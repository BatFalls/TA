#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  groundplane, base, turret1, barrel1A, flare1A, barrel1B, flare1B, barrel1C,
       flare1C, turret2, barrel2A, flare2A, barrel2B, flare2B, barrel2C, flare2C,
       turret3, barrel3A, flare3A, barrel3B, flare3B, barrel3C, flare3C, turret4,
       sleeve4, flakbarrel4a, flakbarrel4b, flakflare4a, flakflare4b, 
       turret5, sleeve5, flakbarrel5a, flakbarrel5b, flakflare5a, flakflare5b, 
       turret6, barrel6a, flare6a, barrel6b, flare6b, barrel6c, flare6c;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RestoreAfterDelay()
{
	sleep Static_Var_9;
	turn turret1 to y-axis <0.000000> speed <55.000000>;
	turn barrel1A to x-axis <0.000000> speed <30.000000>;
	turn barrel1B to x-axis <0.000000> speed <30.000000>;
	turn barrel1C to x-axis <0.000000> speed <30.000000>;
	turn turret2 to y-axis <0.000000> speed <55.000000>;
	turn barrel2A to x-axis <0.000000> speed <30.000000>;
	turn barrel2B to x-axis <0.000000> speed <30.000000>;
	turn barrel2C to x-axis <0.000000> speed <30.000000>;
	turn turret3 to y-axis <180.000000> speed <55.000000>;
	turn barrel3A to x-axis <0.000000> speed <30.000000>;
	turn barrel3B to x-axis <0.000000> speed <30.000000>;
	turn barrel3C to x-axis <0.000000> speed <30.000000>;
	turn turret4 to y-axis <0.000000> speed <55.000000>;
	turn sleeve4 to x-axis <0.000000> speed <30.000000>;
	turn turret5 to y-axis <0.000000> speed <55.000000>;
	turn sleeve5 to x-axis <0.000000> speed <30.000000>;
	turn turret6 to y-axis <0.000000> speed <55.000000>;
	turn barrel6a to x-axis <0.000000> speed <30.000000>;
	turn barrel6b to x-axis <0.000000> speed <30.000000>;
	turn barrel6c to x-axis <0.000000> speed <30.000000>;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
}

Create()
{
	hide flare1A;
	hide flare1B;
	hide flare1C;
	hide flare2A;
	hide flare2B;
	hide flare2C;
	hide flare3A;
	hide flare3B;
	hide flare3C;
	hide flakflare4a;
	hide flakflare5a;
	hide flakflare4b;
	hide flakflare5b;
	hide flare6a;
	hide flare6b;
	hide flare6c;
	Static_Var_2 = 0;
	Static_Var_1 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_9 = 5000;
	Static_Var_7 = 0;
	turn turret3 to y-axis <180.000000> now;
	start-script SmokeUnit();
}

AimWeapon1(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret1 to y-axis heading speed <45.000000>;
	wait-for-turn turret1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turret2 to y-axis heading speed <45.000000>;
	wait-for-turn turret2 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn turret3 to y-axis heading speed <45.000000>;
	wait-for-turn turret3 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon4(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn turret4 to y-axis heading speed <400.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn turret4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon5(heading, pitch)
{
	signal 32;
	set-signal-mask 32;
	turn turret5 to y-axis heading speed <400.000000>;
	turn sleeve5 to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn turret5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimWeapon6(heading, pitch)
{
	signal 64;
	set-signal-mask 64;
	turn turret6 to y-axis heading speed <45.000000>;
	wait-for-turn turret6 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 == 0 )
	{
		show flare1A;
		move barrel1A to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare1A;
		move barrel1A to z-axis [0.000000] speed [0.400000];
	}
	if( Static_Var_1 == 1 )
	{
		show flare1B;
		move barrel1B to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare1B;
		move barrel1B to z-axis [0.000000] speed [0.400000];
	}
	if( Static_Var_1 == 2 )
	{
		show flare1C;
		move barrel1C to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare1C;
		move barrel1C to z-axis [0.000000] speed [0.800000];
	}
	++Static_Var_1;
	if( Static_Var_1 == 3 )
	{
		Static_Var_1 = 0;
	}
}

FireWeapon2()
{
	if( Static_Var_2 == 0 )
	{
		show flare2A;
		move barrel2A to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare2A;
		move barrel2A to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_2 == 1 )
	{
		show flare2B;
		move barrel2B to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare2B;
		move barrel2B to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_2 == 2 )
	{
		show flare2C;
		move barrel2C to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare2C;
		move barrel2C to z-axis [0.000000] speed [0.800000];
	}
	++Static_Var_2;
	if( Static_Var_2 == 3 )
	{
		Static_Var_2 = 0;
	}
}

FireWeapon3()
{
	if( Static_Var_3 == 0 )
	{
		show flare3A;
		move barrel3A to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare3A;
		move barrel3A to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_3 == 1 )
	{
		show flare3B;
		move barrel3B to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare3B;
		move barrel3B to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_3 == 2 )
	{
		show flare3C;
		move barrel3C to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare3C;
		move barrel3C to z-axis [0.000000] speed [0.800000];
	}
	++Static_Var_3;
	if( Static_Var_3 == 3 )
	{
		Static_Var_3 = 0;
	}
}

FireWeapon4()
{
	if( Static_Var_4 == 0 )
	{
		move flakbarrel4a to z-axis [-1.000000] speed [500.000000];
		//show flakflare4a;
		sleep 150;
		move flakbarrel4a to z-axis [0.000000] speed [3.000000];
		//hide flakflare4a;
	}
	if( Static_Var_4 == 1 )
	{
		move flakbarrel4b to z-axis [-1.000000] speed [500.000000];
		//show flakflare4b;
		sleep 150;
		move flakbarrel4b to z-axis [0.000000] speed [3.000000];
		//hide flakflare4b;
	}
	++Static_Var_4;
	if( Static_Var_4 == 2 )
	{
		Static_Var_4 = 0;
	}
}

FireWeapon5()
{
	if( Static_Var_5 == 0 )
	{	
		move flakbarrel5a to z-axis [-1.000000] speed [500.000000];
		//show flakflare4b;
		sleep 150;
		move flakbarrel5a to z-axis [0.000000] speed [3.000000];
		//hide flakflare4b;
	}
	if( Static_Var_5 == 1 )
	{
		move flakbarrel5b to z-axis [-1.000000] speed [500.000000];
		//show flakflare4b;
		sleep 150;
		move flakbarrel5b to z-axis [0.000000] speed [3.000000];
		//hide flakflare4b;
	}
	++Static_Var_5;
	if( Static_Var_5 == 2 )
	{
		Static_Var_5 = 0;
	}
}

FireWeapon6()
{
	if( Static_Var_6 == 0 )
	{
		show flare6a;
		move barrel6a to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare6a;
		move barrel6a to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_6 == 1 )
	{
		show flare6b;
		move barrel6b to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare6b;
		move barrel6b to z-axis [0.000000] speed [0.800000];
	}
	if( Static_Var_6 == 2 )
	{
		show flare6c;
		move barrel6c to z-axis [-1.600000] speed [200.000000];
		sleep 150;
		hide flare6c;
		move barrel6c to z-axis [0.000000] speed [0.800000];
	}
	++Static_Var_6;
	if( Static_Var_6 == 3 )
	{
		Static_Var_6 = 0;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

QueryWeapon1(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flare1A;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flare1B;
	}
	if( Static_Var_1 == 2 )
	{
		piecenum = flare1C;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
}

QueryWeapon2(piecenum)
{
	if( Static_Var_2 == 0 )
	{
		piecenum = flare2A;
	}
	if( Static_Var_2 == 1 )
	{
		piecenum = flare2B;
	}
	if( Static_Var_2 == 2 )
	{
		piecenum = flare2C;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = turret3;
}

QueryWeapon3(piecenum)
{
	if( Static_Var_3 == 0 )
	{
		piecenum = flare3A;
	}
	if( Static_Var_3 == 1 )
	{
		piecenum = flare3B;
	}
	if( Static_Var_3 == 2 )
	{
		piecenum = flare3C;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = turret4;
}

QueryWeapon4(piecenum)
{
	if( Static_Var_4 == 0 )
	{
		piecenum = flakflare4a;
	}
	if( Static_Var_4 == 1 )
	{
		piecenum = flakflare4b;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = turret5;
}

QueryWeapon5(piecenum)
{
	if( Static_Var_5 == 0 )
	{
		piecenum = flakflare5a;
	}
	if( Static_Var_5 == 1 )
	{
		piecenum = flakflare5b;
	}
}

AimFromWeapon6(piecenum)
{
	piecenum = turret6;
}

QueryWeapon6(piecenum)
{
	if( Static_Var_6 == 0 )
	{
		piecenum = flare6a;
	}
	if( Static_Var_6 == 1 )
	{
		piecenum = flare6b;
	}
	if( Static_Var_6 == 2 )
	{
		piecenum = flare6c;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1A type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel1B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel3B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2A type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel6a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode base type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1A type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret1 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel1B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret3 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve4 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve5 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel3B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2A type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode turret6 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel6a type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel2B type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode base type NOHEATCLOUD;
	explode base type NOHEATCLOUD | FALL | EXPLODE_ON_HIT;
	return (corpsetype);
}
