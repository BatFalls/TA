#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, lwing, rwing, lwing2, rwing2, flare1, flare2, flare3, flare4;

static-var  statechg_DesiredState, statechg_StateChanging, Static_Var_3, gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	++gun_1;	
	if (gun_1 == 4) 
	{
		gun_1 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = body;
}

QueryPrimary(piecenum)
{
	if (gun_1 == 0) 
	{
		piecenum = flare1;
	} 
	if (gun_1 == 1) 
	{
		piecenum = flare3;
	} 
	if (gun_1 == 2) 
	{
		piecenum = flare2;
	} 
	if (gun_1 == 3) 
	{
		piecenum = flare4;
	} 
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode lwing type NOHEATCLOUD;
		explode rwing type NOHEATCLOUD;
		explode lwing2 type NOHEATCLOUD;
		explode rwing2 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode lwing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rwing type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode lwing2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode rwing2 type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
