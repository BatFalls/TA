#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, vent1, vent2, vent3, vent4, turret, sleeves, barrel1,
       flare1, barrel2, flare2, barrel3, flare3, stack1, stack2, stack3, stack4;

static-var  gun_1, bFiring;

// Signal definitions
#define SIG_AIM				2
#define SIG_VENT			4

SmokeVents()
{
	signal SIG_VENT;
	set-signal-mask SIG_VENT;
	
	while( TRUE )
	{
		if (bFiring == FALSE)
		{
			emit-sfx 257 from vent1;
			emit-sfx 257 from vent2;
			emit-sfx 257 from vent3;
			emit-sfx 257 from vent4;
			sleep 250;
			emit-sfx 257 from vent1;
			emit-sfx 257 from vent2;
			emit-sfx 257 from vent3;
			emit-sfx 257 from vent4;
			sleep 250;
		}
		sleep 250;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeVents();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	bFiring = FALSE;
	gun_1 = 0;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <25.000000>;
	turn sleeves to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FirePrimary()
{
	bFiring = TRUE;
	
	emit-sfx 1024 + 0 from flare1;
	move barrel1 to z-axis [-3.000000] now;
	sleep 500;
	move barrel1 to z-axis [0.000000] speed [1.000000];
	++gun_1;
	
	emit-sfx 1024 + 0 from flare2;
	move barrel2 to z-axis [-3.000000] now;
	sleep 500;
	move barrel2 to z-axis [0.000000] speed [1.000000];
	++gun_1;
	
	emit-sfx 1024 + 0 from flare3;
	move barrel3 to z-axis [-3.000000] now;
	sleep 500;
	move barrel3 to z-axis [0.000000] speed [1.000000];
	gun_1 = 0;
	
	bFiring = FALSE;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare3;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	hide flare3;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD | SHATTER;
		explode stack1 type NOHEATCLOUD;
		explode stack2 type NOHEATCLOUD;
		explode stack3 type NOHEATCLOUD;
		explode stack4 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode barrel3 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD | SHATTER;
		explode stack1 type NOHEATCLOUD;
		explode stack2 type NOHEATCLOUD;
		explode stack3 type NOHEATCLOUD;
		explode stack4 type NOHEATCLOUD | FALL;
		explode turret type NOHEATCLOUD | FALL | SMOKE;
		explode barrel1 type NOHEATCLOUD;
		explode barrel2 type NOHEATCLOUD;
		explode barrel3 type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD | SHATTER;
	explode stack1 type NOHEATCLOUD;
	explode stack2 type NOHEATCLOUD;
	explode stack3 type NOHEATCLOUD;
	explode stack4 type NOHEATCLOUD | FALL;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel1 type NOHEATCLOUD;
	explode barrel2 type NOHEATCLOUD;
	explode barrel3 type NOHEATCLOUD;
	return (corpsetype);
}
