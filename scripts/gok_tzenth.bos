#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, winga, wingb, wake1, wake2, wake3, aim,
		flare1, flare2, flare3, flare4, flare5, flare6, flare7, flare8;

static-var  torpedo_gun, torpedo1, torpedo2;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM2			4
#define SIG_MOVE			8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 3;
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	torpedo_gun = 0;
	torpedo1 = 0;
	torpedo2 = 0;
	start-script SmokeUnit();
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 256 | 3 from wake1;
		emit-sfx 256 | 3 from wake2;
		emit-sfx 256 | 3 from wake3;
		emit-sfx 256 | 3 from wake1;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}


AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{
	if( torpedo_gun == 0 ) 
	{
		torpedo1 = 0;
		sleep 90;
		
		torpedo1 = 1;
		sleep 90;
		
		torpedo1 = 2;
		sleep 90;
		
		++torpedo_gun;
		return (0);
		
	}
	if( torpedo_gun == 1 ) 
	{		
		torpedo1 = 3;
		sleep 90;
		
		
		torpedo1 = 4;
		sleep 90;
		
		torpedo1 = 5;
		sleep 90;
		
		torpedo_gun = 0;
		return (0);
	}	
}

AimFromPrimary(piecenum)
{
	piecenum = aim;
}

QueryPrimary(piecenum)
{
	if( torpedo1 == 0 ) 
	{
		piecenum = flare1;
	}
	if( torpedo1 == 1 ) 
	{
		piecenum = flare2;
	}
	if( torpedo1 == 2 ) 
	{
		piecenum = flare3;
	}
	if( torpedo1 == 3 ) 
	{
		piecenum = flare4;
	}
	if( torpedo1 == 4) 
	{
		piecenum = flare5;
	}
	if( torpedo1 == 5 ) 
	{
		piecenum = flare6;
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	return (1);
}

FireTertiary()
{
	++torpedo2;
	if ( torpedo2 == 2)
	{
		torpedo2 = 0;
	}
}

AimFromTertiary(piecenum)
{
	piecenum = base;
}

QueryTertiary(piecenum)
{
	if ( torpedo2 == 0)
	{
		piecenum = flare7;
	}
	if ( torpedo2 == 1)
	{
		piecenum = flare8;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode hull type NOHEATCLOUD;
		explode winga type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode hull type NOHEATCLOUD;
		explode wingb type NOHEATCLOUD | FALL;
		explode winga type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode hull type BITMAPONLY;
	explode wingb type NOHEATCLOUD | FALL;
	explode winga type NOHEATCLOUD | FALL;
	return (corpsetype);
}