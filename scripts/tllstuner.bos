#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, rotp, body, flare, turret, sleeve, barrel, dish1,
       dish2;

static-var  Static_Var_1, restore_delay, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	turn dish1 to y-axis <90.000000> speed <100.000000>;
	turn dish2 to y-axis <-90.000000> speed <100.000000>;
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent >= 60 )
		{
			if( Static_Var_5 == 1 )
			{
				Static_Var_5 = 0;
				show dish2;
			}
		}
		if( healthpercent >= 75 )
		{
			if( Static_Var_4 == 1 )
			{
				Static_Var_4 = 0;
				show dish1;
			}
		}
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	restore_delay = 3000;
	hide flare;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	//spin rotp around z-axis speed <100.000000>;
	turn turret to y-axis heading speed <40.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <30.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	return (1);
}

FirePrimary()
{
	//spin rotp around z-axis speed <0.000000>;
	emit-sfx 1024 + 0 from flare;
	move barrel to z-axis [-3.000000] now;
	sleep 250;
	wait-for-move barrel along z-axis;
	move barrel to z-axis [0.000000] speed [3.000000];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel type NOHEATCLOUD;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
	}
	if( severity <= 50 )
	{
		if( Static_Var_1 )
		{
			corpsetype = 2;
		}
		if( !Static_Var_1 )
		{
			corpsetype = 3;
		}
		explode body type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD | FALL;
		explode sleeve type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		if( Static_Var_1 )
		{
			corpsetype = 3;
		}
		if( !Static_Var_1 )
		{
			corpsetype = 4;
		}
		explode turret type NOHEATCLOUD | SHATTER;
		explode body type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 4;
	explode turret type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD;
	explode sleeve type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode barrel type NOHEATCLOUD;
	return (corpsetype);
}
