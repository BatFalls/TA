#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, lwing, rwing, system, sensor, lan, ran,
       tail, engine;

static-var  Static_Var_1, Static_Var_2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from lwing;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from rwing;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( !Static_Var_1 )
		{
			turn lwing to y-axis <0.> speed <65.>;
			turn rwing to y-axis <0.> speed <65.>;
			move sensor to z-axis [0.] speed [6.];
			sleep 500;
			turn sensor to x-axis <0.> speed <60.>;
			turn ran to y-axis <0.> speed <60.>;
			turn lan to y-axis <0.> speed <60.>;
			sleep 500;
			currentstate = 0;
		}
		if( Static_Var_1 )
		{
			turn sensor to x-axis <-30.> speed <60.>;
			turn ran to y-axis <30.> speed <60.>;
			turn lan to y-axis <-30.> speed <60.>;
			turn lwing to y-axis <-65.> speed <65.>;
			turn rwing to y-axis <65.> speed <65.>;
			sleep 500;
			move sensor to z-axis [-3.] speed [6.];
			sleep 500;
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
	start-script SmokeUnit();
	turn lwing to y-axis <-65.> now;
	turn rwing to y-axis <65.> now;
	turn sensor to x-axis <-30.> now;
	turn ran to y-axis <30.> now;
	turn lan to y-axis <-30.> now;
	move sensor to z-axis [-3.] now;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	explode engine type NOHEATCLOUD;
	explode hull type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode system type NOHEATCLOUD;
	explode lwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rwing type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lan type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode ran type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	corpsetype = 3;
	return (corpsetype);
}
