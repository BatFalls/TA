#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, flare1, wakes, wake1, wake2;

static-var  bAiming, bState;

// Signal definitions
#define SIG_AIM				2
#define SIG_MOVE			8

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	spin turret around y-axis speed <80.000000>;
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var Func_Var_1, Func_Var_2;
	Func_Var_1 = 3;
	Func_Var_2 = 4;
	while( TRUE )
	{
		if( bState == 1 )
		{
			emit-sfx Func_Var_1 from wake1;
			emit-sfx Func_Var_1 from wake2;
		}
		if( bState == 2 )
		{
			emit-sfx Func_Var_1 from wake1;
			emit-sfx Func_Var_1 from wake2;
		}
		if( bState == 3 )
		{
			emit-sfx Func_Var_1 from wake1;
			emit-sfx Func_Var_1 from wake2;
		}
		sleep 300;
	}
}

StopMoving()
{
}

setSFXoccupy(state)
{
	bState = state;
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex/3 speed <15.>;
	turn base to z-axis anglez/3 speed <15.>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.> speed <5.>;
	turn base to x-axis <0.> speed <5.>;
}

Create()
{	
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{

}


AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}


SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
