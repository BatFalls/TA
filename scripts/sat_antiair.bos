#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, msl1, msl2, protection, wing;

static-var  gun_1; 

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	start-script SmokeUnit();
}

Activate()
{
	sleep 150;
}

Deactivate()
{
	sleep 150;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

Reload(msl)
{
	sleep 3500;
	
	if(msl==0)
	{
		sleep 25;
		show msl1;
	}
	else
	{
		sleep 25;
		show msl2;
	}	
}

FirePrimary()
{
	if(gun_1 == 0)
	{
		hide msl1;
		start-script Reload(gun_1);
	}
	if(gun_1 == 1)
	{
		hide msl2;
		start-script Reload(gun_1);
	}	
	++gun_1;
	if(gun_1 == 2)
	{
		gun_1 = 0;
	}
}

QueryPrimary(piecenum)
{
	if(gun_1 == 0)
	{
		piecenum = msl1;
	}
	if(gun_1 == 1)
	{
		piecenum = msl2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode body type NOHEATCLOUD;
	explode msl1 type NOHEATCLOUD | SHATTER;
	explode msl2 type NOHEATCLOUD | SHATTER;
	explode protection type NOHEATCLOUD | SHATTER;
	explode wing type NOHEATCLOUD | SHATTER;
	return (corpsetype);
}
