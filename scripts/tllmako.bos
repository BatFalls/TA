#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1a, flare1b, flare2a, flare2b, base, body, gun, turret, sleeve1, sleeve2, wake1, wake2,
       barrel1a, barrel1b, barrel2a, barrel2b;

static-var  Gun_1, shieldonoff;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Shield()
{
	shieldonoff = !shieldonoff;
}

Create()
{
	shieldonoff = 1;
	hide flare1a;
	hide flare1b;
	hide flare2a;
	hide flare2b;	
	Gun_1 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.000000> speed <30.000000>;
	turn sleeve1 to x-axis <0.000000> speed <15.000000>;
	turn sleeve2 to x-axis <0.000000> speed <15.000000>;
}

StartMoving()
{
	signal 8;
	set-signal-mask 8;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 150;
	}
}

StopMoving()
{
	signal 8;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <30.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <20.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <20.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( Gun_1 == 0 or Gun_1 == 3)
	{
		Gun_1 = 0;
		emit-sfx 1024 from flare1a;
		move barrel1a to z-axis [-1.000000] speed [500.000000];
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
		Gun_1 = 1;
		emit-sfx 1025 from flare1b;
		move barrel1b to z-axis [-1.000000] speed [500.000000];
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
		Gun_1 = 2;		
		return (0);
	}
	if( Gun_1 == 2 )
	{
		
		Gun_1 = 2;
		emit-sfx 1024 from flare2b;
		move barrel2b to z-axis [-1.000000] speed [500.000000];
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [3.000000];
		Gun_1 = 3;		
		emit-sfx 1025 from flare2a;
		move barrel2a to z-axis [-1.000000] speed [500.000000];
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [3.000000];		
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	if( Gun_1 == 0 )
	{
		piecenum = flare1a;
	}
	if( Gun_1 == 1 )
	{
		piecenum = flare1b;
	}
	if( Gun_1 == 2 )
	{
		piecenum = flare2b;
	}
	if( Gun_1 == 3 )
	{
		piecenum = flare2a;
	}
}

AimWeapon3(heading, pitch)
{
	return (shieldonoff);
}

AimFromWeapon3(piecenum)
{
	piecenum = gun;
}

QueryWeapon3(piecenum)
{
	piecenum = gun;
}

FireWeapon3()
{
	explode gun type NOHEATCLOUD | FALL;
	sleep 100;
}


SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type NOHEATCLOUD;
		explode barrel1b type NOHEATCLOUD;
		explode barrel2a type NOHEATCLOUD;
		explode barrel2b type NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type NOHEATCLOUD;
		explode flare1b type NOHEATCLOUD;
		explode flare2a type NOHEATCLOUD;
		explode flare2b type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode wake1 type NOHEATCLOUD;
		explode wake2 type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode barrel2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode base type NOHEATCLOUD;
		explode flare1a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare1b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2a type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode flare2b type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode turret type NOHEATCLOUD | NOHEATCLOUD;
		explode wake1 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode wake2 type FALL | EXPLODE_ON_HIT | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode barrel2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode base type NOHEATCLOUD;
	explode flare1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode flare2b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode turret type NOHEATCLOUD;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}