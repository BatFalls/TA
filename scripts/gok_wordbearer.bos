#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, link, backbone, head, stick, lside, lfengine, lfthrust,
       rside, rfengine, rfthrust, lasturret, sleeve1, barrel1, flare1, sleeve2,
       barrel2, flare2, plate, magnet, tail, tailstick, lwing,
       lbengine, lbthrust, rwing, rbengine, rbthrust;

static-var  Static_Var_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from head;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from tail;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

EnginesCarry()
{
	turn lfengine to x-axis <0.> speed <30.>;
	turn rfengine to x-axis <0.> speed <30.>;
	turn lbengine to x-axis <0.> speed <30.>;
	turn rbengine to x-axis <0.> speed <30.>;
}

EnginesCruise()
{
	turn lfengine to x-axis <45.> speed <30.>;
	turn rfengine to x-axis <45.> speed <30.>;
	turn lbengine to x-axis <45.> speed <30.>;
	turn rbengine to x-axis <45.> speed <30.>;
}

SystemFly()
{
	move tail to z-axis [-6.] speed [3.];
	move tail to y-axis [1.] speed [1.];
}

SystemLand()
{
	move tail to z-axis [0.] speed [3.];
	move tail to y-axis [0.] speed [1.];
}

Create()
{
	Static_Var_1 = 0;
	start-script SmokeUnit();
}

QueryPrimary(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = flare1;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = lasturret;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	if( Static_Var_1 == 0 )
	{
		Static_Var_1 = 1;
		move barrel1 to z-axis [-2.] speed [100.];
		sleep 150;
		move barrel1 to z-axis [0.] speed [3.];
		return (0);
	}
	if( Static_Var_1 == 1 )
	{
		Static_Var_1 = 0;
		move barrel2 to z-axis [-2.] speed [100.];
		sleep 150;
		move barrel2 to z-axis [0.] speed [3.];
		return (0);
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryTransport(Func_Var_1)
{
	Func_Var_1 = link;
}

BeginTransport(Func_Var_1)
{
	move link to y-axis [0.] - Func_Var_1 now;
	call-script EnginesCarry();
}

EndTransport()
{
	call-script EnginesCarry();
	sleep 1000;
	call-script EnginesCruise();
}

Activate()
{
	call-script SystemFly();
}

Deactivate()
{
	call-script SystemLand();
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode head type NOHEATCLOUD;
		explode tail type NOHEATCLOUD;
		explode backbone type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
		explode lbengine type FALL | SMOKE | NOHEATCLOUD;
		explode rbengine type FALL | SMOKE | NOHEATCLOUD;
		explode lfengine type FALL | SMOKE | NOHEATCLOUD;
		explode rfengine type FALL | SMOKE | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode head type NOHEATCLOUD;
	explode tail type NOHEATCLOUD;
	explode backbone type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lbengine type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rbengine type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode lfengine type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	explode rfengine type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD;
	return (corpsetype);
}
